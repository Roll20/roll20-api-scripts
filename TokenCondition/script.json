{
  "name": "TokenCondition",
  "script": "TokenCondition.js",
  "version": "0.1.1",
  "description": "TokenCondition makes it easy to drop condition tokens onto your player and monster tokens. Simply create a Character with a name that starts with Condition:, such as Condition: Charmed. Create a Token that represents that Character and assign it to the Character as the Default Token. When you want ot assign that condition to a Token, drag the condition Character's default token on top of it. From then on, it will stick to the Token and any changes made to either one will be mirrored correctly. When you're done with the condtion, just delete the Token. You can even drag multiple condtions onto a single token.\r\r## Commands\r\r```\r!token-condition\r```\r\rDisplay this help.\r\r## Controlling Mirroring\rFor more fine-grained control, you can add a bracketed block to the character name and specify various `|` delimited tags.\r\rUse the `mirror` tag to specify properties to mirror.\r\r```\rCondition: Confused [mirror:aura1_radius]\r```\r\rThe `mirror` tag takes as argument a comma delimited list of properties and can include spaces around the punctuation:\r\r```\rCondition: Confused [mirror : aura1_radius, aura2_radius , aura1_color ,aura2_color]\r```\r\rProperties can be preceded by an operation: `+`, `-`\r* `+` -- Add the property to the list that are mirrored. (default)\r* `-` -- Remove the property to the list that are mirrored.\r\r```\rCondition: Confused [mirror: -width, -height]\r```\r\rIn addition to the `mirror` tag, you can list several adjustments tags that are applied when mirroring properties. Adjustment tags are separated from their adjustment by a `:`.\r* `rotation`\r* `width`\r* `height`\r* `left`\r* `top`\r\rAdjustment values are prefixed with one of several operations:\r* `=` -- Always set the propery to this value if it would change.\r* `+` -- Add this value to the property when it is changed.\r* `-` -- Subtract this value from the property when it is changed.\r* `*` -- Multipy by this value when the property is changed.\r* `/` -- Divide by this value when the property is changed.\r\rFor example, to have the width always 3 times larger than the target token, you could use:\r\r```\rCondition: Confused [width:*3]\r```\r\rAdditionally, you could adjust the rotation to be 90 degrees further than the target token:\r\r```\rCondition: Confused [rotation:+90|width:*3]\r```\r\rNumbers can be suffixed with u, g, etc just like with TokenMod.\r\rThe below tag can be specified to cause a token to be pushed below when it is created. Note: This is a one time adjustment currently.\r\rHere is an example where the token is placed below and remains slightly larger than the target token:\r\r```\rCondition: Confused [below|width:*1.2|height:*1.2]\r```\r\r**[EXPERIMENTAL]** The `forward` tag works just like the mirror tag, save that any changes to the listed properties are reverted after they are mirrored forward. This is an incomplete feature which will probably get changed later, but is provided for experimentation.\r\r## Name Prefixes\r\rIn addition to the `Condition` name prefix, there are several more. Prefixing with any of the following will make the character active for TokenCondition, with varying default behavior:\r\r* `Condition` -- Mirrors: left, top, width, height, lastmove, controlledby, bar1_value, bar1_max, bar1_link, bar2_value, bar2_max, bar2_link, bar3_value, bar3_max, bar3_link, represents, statusmarkers, and tint_color.\r* `Decoration` -- Is below and mirrors: left, top, width, height, lastmove, and controlledby.\r* `Mount` -- Is below and mirrors: left, top, width, height, lastmove, controlledby, and rotation.\r\r### Character Name Examples\r\rA speaking condtion that floats to the top right of a token and does not change size:\r```\rCondition: Speaking [left:+.75|top:-.75|mirror:-width,-height]\r```\r\rA spirit guardians decoration that is sized correctly and follows the token:\r```\rDecoration: Spirit Guardians [width:7g|height:7g]\r\r```\r\rA horse mount that is 3 times longer than it is tall, and scaled for the token that rides it. Additionally, it's rotation is corrected to account for the direction the horse image faces:\r```\rMount: Horse [rotation:+90|width:*3]\r```",
  "authors": "The Aaron",
  "roll20userid": "104025",
  "patreon": "https://www.patreon.com/shdwjk",
  "useroptions": {},
  "dependencies": {},
  "modifies": {
    "state.TokenCondition": "read,write"
  },
  "conflicts": []
}

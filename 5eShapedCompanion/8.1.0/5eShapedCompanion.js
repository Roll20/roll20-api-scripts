on('ready', function() {
  ShapedScripts.addEntities({"name":"SRD","version":"2.0.0","classes":[{"name":"Bard","spells":["Dancing Lights","Light","Mage Hand","Mending","Message","Minor Illusion","Prestidigitation","True Strike","Vicious Mockery","Animal Friendship","Bane","Charm Person","Comprehend Languages","Cure Wounds","Detect Magic","Disguise Self","Faerie Fire","Feather Fall","Healing Word","Heroism","Identify","Illusory Script","Longstrider","Silent Image","Sleep","Speak with Animals","Thunderwave","Unseen Servant","Animal Messenger","Blindness/Deafness","Calm Emotions","Detect Thoughts","Enhance Ability","Enthrall","Heat Metal","Hold Person","Invisibility","Knock","Lesser Restoration","Locate Animals or Plants","Locate Object","Magic Mouth","See Invisibility","Shatter","Silence","Suggestion","Zone of Truth","Bestow Curse","Clairvoyance","Dispel Magic","Fear","Glyph of Warding","Hypnotic Pattern","Major Image","Nondetection","Plant Growth","Sending","Stinking Cloud","Tongues","Compulsion","Confusion","Dimension Door","Freedom of Movement","Greater Invisibility","Hallucinatory Terrain","Locate Creature","Polymorph","Animate Objects","Awaken","Dominate Person","Dream","Geas","Greater Restoration","Hold Monster","Legend Lore","Mass Cure Wounds","Mislead","Modify Memory","Planar Binding","Raise Dead","Scrying","Seeming","Teleportation Circle","Eyebite","Find the Path","Guards and Wards","Mass Suggestion","Programmed Illusion","True Seeing","Etherealness","Forcecage","Mirage Arcane","Project Image","Regenerate","Resurrection","Symbol","Teleport","Dominate Monster","Feeblemind","Glibness","Mind Blank","Power Word Stun","Foresight","Power Word Kill","True Polymorph"]},{"name":"Cleric","archetypes":[{"name":"Life","spells":["Bless","Cure Wounds","Lesser Restoration","Spiritual Weapon","Beacon of Hope","Revivify","Death Ward","Guardian of Faith","Mass Cure Wounds","Raise Dead"]}],"spells":["Guidance","Light","Mending","Resistance","Sacred Flame","Spare the Dying","Thaumaturgy","Bane","Bless","Command","Create or Destroy Water","Cure Wounds","Detect Evil and Good","Detect Magic","Detect Poison and Disease","Guiding Bolt","Healing Word","Inflict Wounds","Protection from Evil and Good","Purify Food and Drink","Sanctuary","Shield of Faith","Aid","Augury","Blindness/Deafness","Calm Emotions","Continual Flame","Enhance Ability","Find Traps","Gentle Repose","Hold Person","Lesser Restoration","Locate Object","Prayer of Healing","Protection from Poison","Silence","Spiritual Weapon","Warding Bond","Zone of Truth","Animate Dead","Beacon of Hope","Bestow Curse","Clairvoyance","Create Food and Water","Daylight","Dispel Magic","Glyph of Warding","Magic Circle","Mass Healing Word","Meld into Stone","Protection from Energy","Remove Curse","Revivify","Sending","Spirit Guardians","Tongues","Water Walk","Banishment","Control Water","Death Ward","Divination","Freedom of Movement","Guardian of Faith","Locate Creature","Stone Shape","Commune","Contagion","Dispel Evil and Good","Flame Strike","Geas","Greater Restoration","Hallow","Insect Plague","Legend Lore","Mass Cure Wounds","Planar Binding","Raise Dead","Scrying","Blade Barrier","Create Undead","Find the Path","Forbiddance","Harm","Heal","Planar Ally","True Seeing","Word of Recall","Conjure Celestial","Divine Word","Etherealness","Fire Storm","Plane Shift","Regenerate","Resurrection","Symbol","Antimagic Field","Control Weather","Earthquake","Holy Aura","Astral Projection","Gate","Mass Heal","True Resurrection"]},{"name":"Druid","archetypes":[{"name":"Arctic","spells":["Hold Person","Spike Growth","Sleet Storm","Slow","Freedom of Movement","Ice Storm","Commune with Nature","Cone of Cold"]},{"name":"Coast","spells":["Mirror Image","Misty Step","Water Breathing","Water Walk","Control Water","Freedom of Movement","Conjure Elemental","Scrying"]},{"name":"Desert","spells":["Blur","Silence","Create Food and Water","Protection from Energy","Blight","Hallucinatory Terrain","Insect Plague","Wall of Stone"]},{"name":"Forest","spells":["Barkskin","Spider Climb","Call Lightning","Plant Growth","Divination","Freedom of Movement","Commune with Nature","Tree Stride"]},{"name":"Grassland","spells":["Invisibility","Pass without Trace","Daylight","Haste","Divination","Freedom of Movement","Dream","Insect Plague"]},{"name":"Mountain","spells":["Spider Climb","Spike Growth","Lightning Bolt","Meld into Stone","Stone Shape","Stoneskin","Passwall","Wall of Stone"]},{"name":"Swamp","spells":["Darkness","Melf's Acid Arrow","Water Walk","Stinking Cloud","Freedom of Movement","Locate Creature","Insect Plague","Scrying"]},{"name":"Underdark","spells":["Spider Climb","Web","Gaseous Form","Stinking Cloud","Greater Invisibility","Stone Shape","Cloudkill","Insect Plague"]}],"spells":["Druidcraft","Guidance","Mending","Poison Spray","Produce Flame","Resistance","Shillelagh","Animal Friendship","Charm Person","Create or Destroy Water","Cure Wounds","Detect Magic","Detect Poison and Disease","Entangle","Faerie Fire","Fog Cloud","Goodberry","Healing Word","Jump","Longstrider","Purify Food and Drink","Speak with Animals","Thunderwave","Animal Messenger","Barkskin","Darkvision","Enhance Ability","Find Traps","Flame Blade","Flaming Sphere","Gust of Wind","Heat Metal","Hold Person","Lesser Restoration","Locate Animals or Plants","Locate Object","Moonbeam","Pass without Trace","Protection from Poison","Spike Growth","Call Lightning","Conjure Animals","Daylight","Dispel Magic","Meld into Stone","Plant Growth","Protection from Energy","Sleet Storm","Water Breathing","Water Walk","Wind Wall","Blight","Confusion","Conjure Minor Elementals","Conjure Woodland Beings","Control Water","Dominate Beast","Freedom of Movement","Giant Insect","Hallucinatory Terrain","Ice Storm","Locate Creature","Polymorph","Stone Shape","Stoneskin","Wall of Fire","Antilife Shell","Awaken","Commune with Nature","Conjure Elemental","Contagion","Geas","Greater Restoration","Insect Plague","Mass Cure Wounds","Planar Binding","Reincarnate","Scrying","Tree Stride","Wall of Stone","Conjure Fey","Find the Path","Heal","Move Earth","Sunbeam","Transport via Plants","Wall of Thorns","Wind Walk","Fire Storm","Mirage Arcane","Plane Shift","Regenerate","Reverse Gravity","Animal Shapes","Antipathy/Sympathy","Control Weather","Earthquake","Feeblemind","Sunburst","Foresight","Shapechange","Storm of Vengeance","True Resurrection"]},{"name":"Paladin","archetypes":[{"name":"Devotion","spells":["Protection from Evil and Good","Sanctuary","Lesser Restoration","Zone of Truth","Beacon of Hope","Dispel Magic","Freedom of Movement","Guardian of Faith","Commune","Flame Strike"]}],"spells":["Bless","Command","Cure Wounds","Detect Evil and Good","Detect Magic","Detect Poison and Disease","Divine Favor","Heroism","Protection from Evil and Good","Purify Food and Drink","Shield of Faith","Aid","Branding Smite","Find Steed","Lesser Restoration","Locate Object","Magic Weapon","Protection from Poison","Zone of Truth","Create Food and Water","Daylight","Dispel Magic","Magic Circle","Remove Curse","Revivify","Banishment","Death Ward","Locate Creature","Dispel Evil and Good","Geas","Raise Dead"]},{"name":"Ranger","spells":["Alarm","Animal Friendship","Cure Wounds","Detect Magic","Detect Poison and Disease","Fog Cloud","Goodberry","Hunter's Mark","Jump","Longstrider","Speak with Animals","Animal Messenger","Barkskin","Darkvision","Find Traps","Lesser Restoration","Locate Animals or Plants","Locate Object","Pass without Trace","Protection from Poison","Silence","Spike Growth","Conjure Animals","Daylight","Nondetection","Plant Growth","Protection from Energy","Water Breathing","Water Walk","Wind Wall","Conjure Woodland Beings","Freedom of Movement","Locate Creature","Stoneskin","Commune with Nature","Tree Stride"]},{"name":"Sorcerer","spells":["Acid Splash","Chill Touch","Dancing Lights","Fire Bolt","Light","Mage Hand","Mending","Message","Minor Illusion","Poison Spray","Prestidigitation","Ray of Frost","Shocking Grasp","True Strike","Burning Hands","Charm Person","Color Spray","Comprehend Languages","Detect Magic","Disguise Self","Expeditious Retreat","False Life","Feather Fall","Fog Cloud","Jump","Mage Armor","Magic Missile","Shield","Silent Image","Sleep","Thunderwave","Witch Bolt","Alter Self","Blindness/Deafness","Blur","Darkness","Darkvision","Detect Thoughts","Enhance Ability","Enlarge/Reduce","Gust of Wind","Hold Person","Invisibility","Knock","Levitate","Mirror Image","Misty Step","Scorching Ray","See Invisibility","Shatter","Suggestion","Web","Blink","Clairvoyance","Counterspell","Daylight","Dispel Magic","Fear","Fireball","Fly","Gaseous Form","Haste","Hypnotic Pattern","Lightning Bolt","Major Image","Protection from Energy","Sleet Storm","Slow","Stinking Cloud","Tongues","Water Breathing","Water Walk","Banishment","Blight","Confusion","Dimension Door","Dominate Beast","Greater Invisibility","Ice Storm","Polymorph","Stoneskin","Wall of Fire","Animate Objects","Cloudkill","Cone of Cold","Creation","Dominate Person","Hold Monster","Insect Plague","Seeming","Telekinesis","Teleportation Circle","Wall of Stone","Chain Lightning","Circle of Death","Disintegrate","Eyebite","Globe of Invulnerability","Mass Suggestion","Move Earth","Sunbeam","True Seeing","Delayed Blast Fireball","Etherealness","Finger of Death","Fire Storm","Plane Shift","Prismatic Spray","Reverse Gravity","Teleport","Dominate Monster","Earthquake","Incendiary Cloud","Power Word Stun","Sunburst","Gate","Meteor Swarm","Power Word Kill","Time Stop","Wish"]},{"name":"Warlock","spells":["Chill Touch","Eldritch Blast","Mage Hand","Minor Illusion","Poison Spray","Prestidigitation","True Strike","Charm Person","Comprehend Languages","Expeditious Retreat","Hellish Rebuke","Illusory Script","Protection from Evil and Good","Unseen Servant","Witch Bolt","Darkness","Enthrall","Hold Person","Invisibility","Mirror Image","Misty Step","Ray of Enfeeblement","Shatter","Suggestion","Counterspell","Dispel Magic","Fear","Fly","Gaseous Form","Hypnotic Pattern","Magic Circle","Major Image","Remove Curse","Tongues","Vampiric Touch","Banishment","Blight","Dimension Door","Hallucinatory Terrain","Contact Other Plane","Dream","Hold Monster","Scrying","Circle of Death","Conjure Fey","Create Undead","Eyebite","Flesh to Stone","Mass Suggestion","True Seeing","Etherealness","Finger of Death","Forcecage","Plane Shift","Demiplane","Dominate Monster","Feeblemind","Glibness","Power Word Stun","Astral Projection","Foresight","Imprisonment","Power Word Kill","True Polymorph"],"archetypes":[{"name":"Fiend","spells":["Burning Hands","Command","Blindness/Deafness","Scorching Ray","Fireball","Stinking Cloud","Fire Shield","Wall of Fire","Flame Strike","Hallow"]}]},{"name":"Wizard","spells":["Acid Splash","Chill Touch","Dancing Lights","Fire Bolt","Light","Mage Hand","Mending","Message","Minor Illusion","Poison Spray","Prestidigitation","Ray of Frost","Shocking Grasp","True Strike","Alarm","Burning Hands","Charm Person","Color Spray","Comprehend Languages","Detect Magic","Disguise Self","Expeditious Retreat","False Life","Feather Fall","Find Familiar","Fog Cloud","Grease","Identify","Illusory Script","Jump","Longstrider","Mage Armor","Magic Missile","Protection from Evil and Good","Shield","Silent Image","Sleep","Thunderwave","Unseen Servant","Witch Bolt","Alter Self","Arcane Lock","Blindness/Deafness","Blur","Continual Flame","Darkness","Darkvision","Detect Thoughts","Enlarge/Reduce","Flaming Sphere","Gentle Repose","Gust of Wind","Hold Person","Invisibility","Knock","Levitate","Locate Object","Magic Mouth","Magic Weapon","Mirror Image","Misty Step","Ray of Enfeeblement","Rope Trick","Scorching Ray","See Invisibility","Shatter","Suggestion","Web","Animate Dead","Bestow Curse","Blink","Clairvoyance","Counterspell","Dispel Magic","Fear","Fireball","Fly","Gaseous Form","Glyph of Warding","Haste","Hypnotic Pattern","Lightning Bolt","Magic Circle","Major Image","Nondetection","Phantom Steed","Protection from Energy","Remove Curse","Sending","Sleet Storm","Slow","Stinking Cloud","Tongues","Vampiric Touch","Water Breathing","Arcane Eye","Banishment","Blight","Confusion","Conjure Minor Elementals","Control Water","Dimension Door","Fabricate","Fire Shield","Greater Invisibility","Hallucinatory Terrain","Ice Storm","Locate Creature","Phantasmal Killer","Polymorph","Stone Shape","Stoneskin","Wall of Fire","Animate Objects","Cloudkill","Cone of Cold","Conjure Elemental","Contact Other Plane","Creation","Dominate Person","Dream","Geas","Hold Monster","Legend Lore","Mislead","Modify Memory","Passwall","Planar Binding","Scrying","Seeming","Telekinesis","Teleportation Circle","Wall of Force","Wall of Stone","Chain Lightning","Circle of Death","Contingency","Create Undead","Disintegrate","Eyebite","Flesh to Stone","Globe of Invulnerability","Guards and Wards","Magic Jar","Mass Suggestion","Move Earth","Programmed Illusion","Sunbeam","True Seeing","Wall of Ice","Delayed Blast Fireball","Etherealness","Finger of Death","Forcecage","Mirage Arcane","Plane Shift","Prismatic Spray","Project Image","Reverse Gravity","Sequester","Simulacrum","Symbol","Teleport","Antimagic Field","Antipathy/Sympathy","Clone","Control Weather","Demiplane","Dominate Monster","Feeblemind","Incendiary Cloud","Maze","Mind Blank","Power Word Stun","Sunburst","Astral Projection","Foresight","Gate","Imprisonment","Meteor Swarm","Power Word Kill","Prismatic Wall","Shapechange","Time Stop","True Polymorph","Weird","Wish"]}],"monsters":[{"name":"Aboleth","size":"Large","type":"Aberration","alignment":"lawful evil","AC":"17 (natural armor)","HP":"135 (18d10+36)","speed":"10 ft., swim 40 ft.","strength":21,"dexterity":9,"constitution":15,"intelligence":18,"wisdom":15,"charisma":18,"savingThrows":"Con +6, Int +8, Wis +6","skills":"History +12, Perception +10","senses":"darkvision 120 ft.","languages":"Deep Speech, telepathy 120 ft.","challenge":"10","traits":[{"name":"Amphibious","text":"The aboleth can breathe air and water"},{"name":"Mucous Cloud","text":"While underwater, the aboleth is surrounded by transformative mucus. A creature that touches the aboleth or that hits it with a melee attack while within 5 ft. of it must make a DC 14 Constitution saving throw. On a failure, the creature is diseased for 1d4 hours. The diseased creature can breathe only underwater."},{"name":"Probing Telepathy","text":"If a creature communicates telepathically with the aboleth, the aboleth learns the creature's greatest desires if the aboleth can see the creature."}],"actions":[{"name":"Multiattack","text":"The aboleth makes three tentacle attacks."},{"name":"Tentacle","text":"Melee Weapon Attack: +9 to hit, reach 10 ft., one target. Hit: 12 (2d6 + 5) bludgeoning damage. If the target is a creature, it must succeed on a DC 14 Constitution saving throw or become diseased. The disease has no effect for 1 minute and can be removed by any magic that cures disease. After 1 minute, the diseased creature's skin becomes translucent and slimy, the creature can't regain hit points unless it is underwater, and the disease can be removed only by heal or another disease-curing spell of 6th level or higher. When the creature is outside a body of water, it takes 6 (1d12) acid damage every 10 minutes unless moisture is applied to the skin before 10 minutes have passed."},{"name":"Tail","text":"Melee Weapon Attack: +9 to hit, reach 10 ft. one target. Hit: 15 (3d6 + 5) bludgeoning damage."},{"name":"Enslave","text":"The aboleth targets one creature it can see within 30 ft. of it. The target must succeed on a DC 14 Wisdom saving throw or be magically charmed by the aboleth until the aboleth dies or until it is on a different plane of existence from the target. The charmed target is under the aboleth's control and can't take reactions, and the aboleth and the target can communicate telepathically with each other over any distance.\nWhenever the charmed target takes damage, the target can repeat the saving throw. On a success, the effect ends. No more than once every 24 hours, the target can also repeat the saving throw when it is at least 1 mile away from the aboleth.","recharge":"3/day"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The aboleth makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Swipe","text":"The aboleth makes one tail attack.","cost":1},{"name":"Psychic Drain","text":"One creature charmed by the aboleth takes 10 (3d6) psychic damage, and the aboleth regains hit points equal to the damage the creature takes.","cost":2}]},{"name":"Acolyte","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"10","HP":"9 (2d8)","speed":"30 ft.","strength":10,"dexterity":10,"constitution":10,"intelligence":10,"wisdom":14,"charisma":11,"skills":"Medicine +4, Religion +2","languages":"any one language (usually Common)","challenge":"1/4","traits":[{"name":"Spellcasting","text":"The acolyte is a 1st-level spellcaster. Its spellcasting ability is Wisdom (spell save DC 12, +4 to hit with spell attacks). The acolyte has following cleric spells prepared:\nCantrips (at will): light, sacred flame, thaumaturgy\n1st level (3 slots): bless, cure wounds, sanctuary"}],"actions":[{"name":"Club","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one target. Hit: 2 (1d4) bludgeoning damage."}],"spells":"light, sacred flame, thaumaturgy, bless, cure wounds, sanctuary"},{"name":"Adult Black Dragon","size":"Huge","type":"Dragon","alignment":"chaotic evil","AC":"19 (natural armor)","HP":"195 (17d12+85)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":23,"dexterity":14,"constitution":21,"intelligence":14,"wisdom":13,"charisma":17,"savingThrows":"Dex +7, Con +10, Wis +6, Cha +8","skills":"Perception +11, Stealth +7","damageImmunities":"acid","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"14","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."},{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +11 to hit, reach 10 ft., one target. Hit: 17 (2d10 + 6) piercing damage plus 4 (1d8) acid damage."},{"name":"Claw","text":"Melee Weapon Attack: +11 to hit, reach 5 ft., one target. Hit: 13 (2d6 + 6) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +11 to hit, reach 15 ft., one target. Hit: 15 (2d8 + 6) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 16 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Acid Breath","text":"The dragon exhales acid in a 60-foot line that is 5 feet wide. Each creature in that line must make a DC 18 Dexterity saving throw, taking 54 (12d8) acid damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 10 ft. of the dragon must succeed on a DC 19 Dexterity saving throw or take 13 (2d6 + 6) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Adult Blue Dracolich","size":"Huge","type":"Undead","alignment":"lawful evil","AC":"19 (natural armor)","HP":"225 (18d12+108)","speed":"40 ft., burrow 30 ft., fly 80 ft.","strength":25,"dexterity":10,"constitution":23,"intelligence":16,"wisdom":15,"charisma":19,"savingThrows":"Dex +5, Con +11, Wis +7, Cha +9","skills":"Perception +12, Stealth +5","damageResistances":"necrotic","damageImmunities":"lightning, poison","conditionImmunities":"charmed, exhaustion, frightened, paralyzed, poisoned","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"17","traits":[{"name":"Legendary Resistance","text":"If the dracolich fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"},{"name":"Magic Resistance","text":"The dracolich has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The dracolich can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +12 to hit, reach 10 ft., one target. Hit: 18 (2d10 + 7) piercing damage plus 5 (1d10) lightning damage."},{"name":"Claw","text":"Melee Weapon Attack: +12 to hit, reach 5 ft., one target. Hit: 14 (2d6 + 7) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +12 to hit, reach 15 ft., one target. Hit: 16 (2d8 + 7) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dracolich's choice that is within 120 feet of the dracolich and aware of it must succeed on a DC 18 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dracolich's Frightful Presence for the next 24 hours."},{"name":"Lightning Breath","text":"The dracolich exhales lightning in a 90-foot line that is 5 feet wide. Each creature in that line must make a DC 20 Dexterity saving throw, taking 66 (12d10) lightning damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dracolich makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dracolich makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dracolich beats its tattered wings. Each creature within 10 ft. of the dracolich must succeed on a DC 21 Dexterity saving throw or take 14 (2d6 + 7) bludgeoning damage and be knocked prone. After beating its wings this way, the dracolich can fly up to half its flying speed.","cost":2}]},{"name":"Adult Blue Dragon","size":"Huge","type":"Dragon","alignment":"lawful evil","AC":"19","HP":"225 (18d12+108)","speed":"40 ft., burrow 30 ft., fly 80 ft.","strength":25,"dexterity":10,"constitution":23,"intelligence":16,"wisdom":15,"charisma":19,"savingThrows":"Dex +5, Con +11, Wis +7, Cha +9","skills":"Perception +12, Stealth +5","damageImmunities":"lightning","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"16","traits":[{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +12 to hit, reach 10 ft., one target. Hit: 18 (2d10 + 7) piercing damage plus 5 (1d10) lightning damage."},{"name":"Claw","text":"Melee Weapon Attack: +12 to hit, reach 5 ft., one target. Hit: 14 (2d6 + 7) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +12 to hit, reach 15 ft., one target. Hit: 16 (2d8 + 7) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 ft. of the dragon and aware of it must succeed on a DC 17 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Lightning Breath","text":"The dragon exhales lightning in a 90-foot line that is 5 ft. wide. Each creature in that line must make a DC 19 Dexterity saving throw, taking 66 (12d10) lightning damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 10 ft. of the dragon must succeed on a DC 20 Dexterity saving throw or take 14 (2d6 + 7) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Adult Brass Dragon","size":"Huge","type":"Dragon","alignment":"chaotic good","AC":"18 (natural armor)","HP":"172 (15d12+75)","speed":"40 ft., burrow 40 ft., fly 80 ft.","strength":23,"dexterity":10,"constitution":21,"intelligence":14,"wisdom":13,"charisma":17,"savingThrows":"Dex +5, Con +10, Wis +6, Cha +8","skills":"History +7, Perception +11, Persuasion +8, Stealth +5","damageImmunities":"fire","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"13","traits":[{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +11 to hit, reach 0 ft., one target. Hit: 17 (2d10 + 6) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +11 to hit, reach 5 ft., one target. Hit: 13 (2d6 + 6) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +11 to hit, reach 15 ft., one target. Hit: 15 (2d8 + 6) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 16 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Fire Breath","text":"The dragon exhales fire in an 60-foot line that is 5 feet wide. Each creature in that line must make a DC 18 Dexterity saving throw, taking 45 (13d6) fire damage on a failed save, or half as much damage on a successful one."},{"name":"Sleep Breath","text":"The dragon exhales sleep gas in a 60-foot cone. Each creature in that area must succeed on a DC 18 Constitution saving throw or fall unconscious for 10 minutes. This effect ends for a creature if the creature takes damage or someone uses an action to wake it."}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 10 ft. of the dragon must succeed on a DC 19 Dexterity saving throw or take 13 (2d6 + 6) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Adult Bronze Dragon","size":"Huge","type":"Dragon","alignment":"lawful good","AC":"19 (natural armor)","HP":"212 (17d12+102)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":25,"dexterity":10,"constitution":23,"intelligence":16,"wisdom":15,"charisma":19,"savingThrows":"Dex +5, Con +11, Wis +7, Cha +9","skills":"Insight +7, Perception +12, Stealth +5","damageImmunities":"lightning","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"15","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."},{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +12 to hit, reach 10 ft., one target. Hit: 18 (2d10 + 7) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +12 to hit, reach 5 ft., one target. Hit: 14 (2d6 + 7) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +12 to hit, reach 15 ft., one target. Hit: 16 (2d8 + 7) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 17 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Lightning Breath","text":"The dragon exhales lightning in a 90-foot line that is 5 feet wide. Each creature in that line must make a DC 19 Dexterity saving throw, taking 66 (12d10) lightning damage on a failed save, or half as much damage on a successful one."},{"name":"Repulsion Breath","text":"The dragon exhales repulsion energy in a 30-foot cone. Each creature in that area must succeed on a DC 19 Strength saving throw. On a failed save, the creature is pushed 60 feet away from the dragon."}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 10 ft. of the dragon must succeed on a DC 20 Dexterity saving throw or take 14 (2d6 + 7) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Adult Copper Dragon","size":"Huge","type":"Dragon","alignment":"chaotic good","AC":"18 (natural armor)","HP":"184 (16d12+80)","speed":"40 ft., climb 40 ft., fly 80 ft.","strength":23,"dexterity":12,"constitution":21,"intelligence":18,"wisdom":15,"charisma":17,"savingThrows":"Dex +6, Con +10, Wis +7, Cha +8","skills":"Deception +8, Perception +12, Stealth +6","damageImmunities":"acid","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"14","traits":[{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +11 to hit, reach 10 ft., one target. Hit: 17 (2d10 + 6) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +11 to hit, reach 5 ft., one target. Hit: 13 (2d6 + 6) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +11 to hit, reach 15 ft., one target. Hit: 15 (2d8 + 6) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 16 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Acid Breath","text":"The dragon exhales acid in an 60-foot line that is 5 feet wide. Each creature in that line must make a DC 18 Dexterity saving throw, taking 54 (12d8) acid damage on a failed save, or half as much damage on a successful one."},{"name":"Slowing Breath","text":"The dragon exhales gas in a 60-foot cone. Each creature in that area must succeed on a DC 18 Constitution saving throw. On a failed save, the creature can't use reactions, its speed is halved, and it can't make more than one attack on its turn. In addition, the creature can use either an action or a bonus action on its turn, but not both. These effects last for 1 minute. The creature can repeat the saving throw at the end of each of its turns, ending the effect on itself with a successful save."}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 10 ft. of the dragon must succeed on a DC 19 Dexterity saving throw or take 13 (2d6 + 6) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Adult Gold Dragon","size":"Huge","type":"Dragon","alignment":"lawful good","AC":"19 (natural armor)","HP":"256 (19d12+133)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":27,"dexterity":14,"constitution":25,"intelligence":16,"wisdom":15,"charisma":24,"savingThrows":"Dex +8, Con +13, Wis +8, Cha +13","skills":"Insight +8, Perception +14, Persuasion +13, Stealth +8","damageImmunities":"fire","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"17","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."},{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +14 to hit, reach 10 ft., one target. Hit: 19 (2d10 + 8) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +14 to hit, reach 5 ft., one target. Hit: 15 (2d6 + 8) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +14 to hit, reach 15 ft., one target. Hit: 17 (2d8 + 8) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 21 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Fire Breath","text":"The dragon exhales fire in a 60-foot cone. Each creature in that area must make a DC 21 Dexterity saving throw, taking 66 (12d10) fire damage on a failed save, or half as much damage on a successful one."},{"name":"Weakening Breath","text":"The dragon exhales gas in a 60-foot cone. Each creature in that area must succeed on a DC 21 Strength saving throw or have disadvantage on Strength-based attack rolls, Strength checks, and Strength saving throws for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 10 ft. of the dragon must succeed on a DC 22 Dexterity saving throw or take 15 (2d6 + 8) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Adult Green Dragon","size":"Huge","type":"Dragon","alignment":"lawful evil","AC":"19 (natural armor)","HP":"207 (18d12+90)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":23,"dexterity":12,"constitution":21,"intelligence":18,"wisdom":15,"charisma":17,"savingThrows":"Dex +6, Con +10, Wis +7, Cha +8","skills":"Deception +8, Insight +7, Perception +12, Persuasion +8, Stealth +6","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"15","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."},{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +11 to hit, reach 10 ft., one target. Hit: 17 (2d10 + 6) piercing damage plus 7 (2d6) poison damage."},{"name":"Claw","text":"Melee Weapon Attack: +11 to hit, reach 5 ft., one target. Hit: 13 (2d6 + 6) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +11 to hit, reach 15 ft., one target. Hit: 15 (2d8 + 6) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 16 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours ."},{"name":"Poison Breath","text":"The dragon exhales poisonous gas in a 60-foot cone. Each creature in that area must make a DC 18 Constitution saving throw, taking 56 (16d6) poison damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 10 ft. of the dragon must succeed on a DC 19 Dexterity saving throw or take 13 (2d6 + 6) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Adult Red Dragon","size":"Huge","type":"Dragon","alignment":"chaotic evil","AC":"19 (natural armor)","HP":"256 (19d12+133)","speed":"40 ft., climb 40 ft., fly 80 ft.","strength":27,"dexterity":10,"constitution":25,"intelligence":16,"wisdom":13,"charisma":21,"savingThrows":"Dex +6, Con +13, Wis +7, Cha +11","skills":"Perception +13, Stealth +6","damageImmunities":"fire","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"17","traits":[{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +14 to hit, reach 10 ft., one target. Hit: 19 (2d10 + 8) piercing damage plus 7 (2d6) fire damage."},{"name":"Claw","text":"Melee Weapon Attack: +14 to hit, reach 5 ft., one target. Hit: 15 (2d6 + 8) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +14 to hit, reach 15 ft., one target. Hit: 17 (2d8 + 8) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 ft. of the dragon and aware of it must succeed on a DC 19 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Fire Breath","text":"The dragon exhales fire in a 60-foot cone. Each creature in that area must make a DC 21 Dexterity saving throw, taking 63 (18d6) fire damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 10 ft. of the dragon must succeed on a DC 22 Dexterity saving throw or take 15 (2d6 + 8) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Adult Silver Dragon","size":"Huge","type":"Dragon","alignment":"lawful good","AC":"19 (natural armor)","HP":"243 (18d12+126)","speed":"40 ft., fly 80 ft.","strength":27,"dexterity":10,"constitution":25,"intelligence":16,"wisdom":13,"charisma":21,"savingThrows":"Dex +5, Con +12, Wis +6, Cha +10","skills":"Arcana +8, History +8, Perception +11, Stealth +5","damageImmunities":"cold","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"16","traits":[{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +13 to hit, reach 10 ft., one target. Hit: 19 (2d10 + 8) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +13 to hit, reach 5 ft., one target. Hit: 15 (2d6 + 8) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +13 to hit, reach 15 ft., one target. Hit: 17 (2d8 + 8) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 18 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Cold Breath","text":"The dragon exhales an icy blast in a 60-foot cone. Each creature in that area must make a DC 20 Constitution saving throw, taking 58 (13d8) cold damage on a failed save, or half as much damage on a successful one."},{"name":"Paralyzing Breath","text":"The dragon exhales paralyzing gas in a 60-foot cone. Each creature in that area must succeed on a DC 20 Constitution saving throw or be paralyzed for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 10 ft. of the dragon must succeed on a DC 22 Dexterity saving throw or take 15 (2d6 + 8) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Adult White Dragon","size":"Huge","type":"Dragon","alignment":"chaotic evil","AC":"18 (natural armor)","HP":"200 (16d12+96)","speed":"40 ft., burrow 30 ft., fly 80 ft., swim 40 ft.","strength":22,"dexterity":10,"constitution":22,"intelligence":8,"wisdom":12,"charisma":12,"savingThrows":"Dex +5, Con +11, Wis +6, Cha +6","skills":"Perception +11, Stealth +5","damageImmunities":"cold","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"13","traits":[{"name":"Ice Walk","text":"The dragon can move across and climb icy surfaces without needing to make an ability check. Additionally, difficult terrain composed of ice or snow doesn't cost it extra moment."},{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +11 to hit, reach 10 ft., one target. Hit: 17 (2d10 + 6) piercing damage plus 4 (1d8) cold damage."},{"name":"Claw","text":"Melee Weapon Attack: +11 to hit, reach 5 ft., one target. Hit: 13 (2d6 + 6) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +11 to hit, reach 15 ft., one target. Hit: 15 (2d8 + 6) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 ft. of the dragon and aware of it must succeed on a DC 14 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Cold Breath","text":"The dragon exhales an icy blast in a 60-foot cone. Each creature in that area must make a DC 19 Constitution saving throw, taking 54 (12d8) cold damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 10 ft. of the dragon must succeed on a DC 19 Dexterity saving throw or take 13 (2d6 + 6) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Air Elemental","size":"Large","type":"Elemental","alignment":"neutral","AC":"15","HP":"90 (12d10+24)","speed":"0 ft., fly 90 ft. (hover)","strength":14,"dexterity":20,"constitution":14,"intelligence":6,"wisdom":10,"charisma":6,"damageResistances":"lightning; thunder; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"poison","conditionImmunities":"exhaustion, grappled, paralyzed, petrified, poisoned, prone, restrained, unconscious","senses":"darkvision 60 ft.","languages":"Auran","challenge":"5","traits":[{"name":"Air Form","text":"The elemental can enter a hostile creature's space and stop there. It can move through a space as narrow as 1 inch wide without squeezing."}],"actions":[{"name":"Multiattack","text":"The elemental makes two slam attacks."},{"name":"Slam","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one target. Hit: 14 (2d8 + 5) bludgeoning damage."},{"name":"Whirlwind","text":"Each creature in the elemental's space must make a DC 13 Strength saving throw. On a failure, a target takes 15 (3d8 + 2) bludgeoning damage and is flung up 20 feet away from the elemental in a random direction and knocked prone. If a thrown target strikes an object, such as a wall or floor, the target takes 3 (1d6) bludgeoning damage for every 10 feet it was thrown. If the target is thrown at another creature, that creature must succeed on a DC 13 Dexterity saving throw or take the same damage and be knocked prone.\nIf the saving throw is successful, the target takes half the bludgeoning damage and isn't flung away or knocked prone.","recharge":"Recharge 4-6"}]},{"name":"Ancient Black Dragon","size":"Gargantuan","type":"Dragon","alignment":"chaotic evil","AC":"22 (natural armor)","HP":"367 (21d20+147)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":27,"dexterity":14,"constitution":25,"intelligence":16,"wisdom":15,"charisma":19,"savingThrows":"Dex +9, Con +14, Wis +9, Cha +11","skills":"Perception +16, Stealth +9","damageImmunities":"acid","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"21","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."},{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +15 to hit, reach 15 ft., one target. Hit: 19 (2d10 + 8) piercing damage plus 9 (2d8) acid damage."},{"name":"Claw","text":"Melee Weapon Attack: +15 to hit, reach 10 ft., one target. Hit: 15 (2d6 + 8) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +15 to hit, reach 20 ft., one target. Hit: 17 (2d8 + 8) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 19 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Acid Breath","text":"The dragon exhales acid in a 90-foot line that is 10 feet wide. Each creature in that line must make a DC 22 Dexterity saving throw, taking 67 (15d8) acid damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 15 ft. of the dragon must succeed on a DC 23 Dexterity saving throw or take 15 (2d6 + 8) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Ancient Blue Dragon","size":"Gargantuan","type":"Dragon","alignment":"lawful evil","AC":"22 (natural armor)","HP":"481 (26d20+208)","speed":"40 ft., burrow 40 ft., fly 80 ft.","strength":29,"dexterity":10,"constitution":27,"intelligence":18,"wisdom":17,"charisma":21,"savingThrows":"Dex +7, Con +15, Wis +10, Cha +12","skills":"Perception +17, Stealth +7","damageImmunities":"lightning","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"23","actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +16 to hit, reach 15 ft., one target. Hit: 20 (2d10 + 9) piercing damage plus 11 (2d10) lightning damage."},{"name":"Claw","text":"Melee Weapon Attack: +16 to hit, reach 10 ft., one target. Hit: 16 (2d6 + 9) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +16 to hit, reach 20 ft., one target. Hit: 18 (2d8 + 9) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 20 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Lightning Breath","text":"The dragon exhales lightning in a 120-foot line that is 10 feet wide. Each creature in that line must make a DC 23 Dexterity saving throw, taking 88 (16d10) lightning damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 15 ft. of the dragon must succeed on a DC 24 Dexterity saving throw or take 16 (2d6 + 9) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Ancient Brass Dragon","size":"Gargantuan","type":"Dragon","alignment":"chaotic good","AC":"20 (natural armor)","HP":"297 (17d20+119)","speed":"40 ft., burrow 40 ft., fly 80 ft.","strength":27,"dexterity":10,"constitution":25,"intelligence":16,"wisdom":15,"charisma":19,"savingThrows":"Dex +6, Con +13, Wis +8, Cha +10","skills":"History +9, Perception +14, Persuasion +10, Stealth +6","damageImmunities":"fire","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"20","traits":[{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +14 to hit, reach 15 ft., one target. Hit: 19 (2d10 + 8) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +14 to hit, reach 10 ft., one target. Hit: 15 (2d6 + 8) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +14 to hit, reach 20 ft., one target. Hit: 17 (2d8 + 8) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 18 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons:","recharge":"Recharge 5-6"},{"name":"Fire Breath","text":"The dragon exhales fire in an 90-foot line that is 10 feet wide. Each creature in that line must make a DC 21 Dexterity saving throw, taking 56 (16d6) fire damage on a failed save, or half as much damage on a successful one."},{"name":"Sleep Breath","text":"The dragon exhales sleep gas in a 90-foot cone. Each creature in that area must succeed on a DC 21 Constitution saving throw or fall unconscious for 10 minutes. This effect ends for a creature if the creature takes damage or someone uses an action to wake it."},{"name":"Change Shape","text":"The dragon magically polymorphs into a humanoid or beast that has a challenge rating no higher than its own, or back into its true form. It reverts to its true form if it dies. Any equipment it is wearing or carrying is absorbed or borne by the new form (the dragon's choice).\nIn a new form, the dragon retains its alignment, hit points, Hit Dice, ability to speak, proficiencies, Legendary Resistance, lair actions, and Intelligence, Wisdom, and Charisma scores, as well as this action. Its statistics and capabilities are otherwise replaced by those of the new form, except any class features or legendary actions of that form."}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 15 ft. of the dragon must succeed on a DC 22 Dexterity saving throw or take 15 (2d6 + 8) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Ancient Bronze Dragon","size":"Gargantuan","type":"Dragon","alignment":"lawful good","AC":"22 (natural armor)","HP":"444 (24d20+192)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":29,"dexterity":10,"constitution":27,"intelligence":18,"wisdom":17,"charisma":21,"savingThrows":"Dex +7, Con +15, Wis +10, Cha +12","skills":"Insight +10, Perception +17, Stealth +7","damageImmunities":"lightning","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"22","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."},{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +16 to hit, reach 15 ft., one target. Hit: 20 (2d10 + 9) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +16 to hit, reach 10 ft., one target. Hit: 16 (2d6 + 9) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +16 to hit, reach 20 ft., one target. Hit: 18 (2d8 + 9) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 20 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Lightning Breath","text":"The dragon exhales lightning in a 120-foot line that is 10 feet wide. Each creature in that line must make a DC 23 Dexterity saving throw, taking 88 (16d10) lightning damage on a failed save, or half as much damage on a successful one."},{"name":"Repulsion Breath","text":"The dragon exhales repulsion energy in a 30-foot cone. Each creature in that area must succeed on a DC 23 Strength saving throw. On a failed save, the creature is pushed 60 feet away from the dragon."},{"name":"Change Shape","text":"The dragon magically polymorphs into a humanoid or beast that has a challenge rating no higher than its own, or back into its true form. It reverts to its true form if it dies. Any equipment it is wearing or carrying is absorbed or borne by the new form (the dragon's choice).\nIn a new form, the dragon retains its alignment, hit points, Hit Dice, ability to speak, proficiencies, Legendary Resistance, lair actions, and Intelligence, Wisdom, and Charisma scores, as well as this action. Its statistics and capabilities are otherwise replaced by those of the new form, except any class features or legendary actions of that form."}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 15 ft. of the dragon must succeed on a DC 24 Dexterity saving throw or take 16 (2d6 + 9) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Ancient Copper Dragon","size":"Gargantuan","type":"Dragon","alignment":"chaotic good","AC":"21 (natural armor)","HP":"350 (20d20+140)","speed":"40 ft., climb 40 ft., fly 80 ft.","strength":27,"dexterity":12,"constitution":25,"intelligence":20,"wisdom":17,"charisma":19,"savingThrows":"Dex +8, Con +14, Wis +10, Cha +11","skills":"Deception +11, Perception +17, Stealth +8","damageImmunities":"acid","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"21","traits":[{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +15 to hit, reach 15 ft., one target. Hit: 19 (2d10 + 8) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +15 to hit, reach 10 ft., one target. Hit: 15 (2d6 + 8) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +15 to hit, reach 20 ft., one target. Hit: 17 (2d8 + 8) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 19 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Acid Breath","text":"The dragon exhales acid in an 90-foot line that is 10 feet wide. Each creature in that line must make a DC 22 Dexterity saving throw, taking 63 (14d8) acid damage on a failed save, or half as much damage on a successful one."},{"name":"Slowing Breath","text":"The dragon exhales gas in a 90-foot cone. Each creature in that area must succeed on a DC 22 Constitution saving throw. On a failed save, the creature can't use reactions, its speed is halved, and it can't make more than one attack on its turn. In addition, the creature can use either an action or a bonus action on its turn, but not both. These effects last for 1 minute. The creature can repeat the saving throw at the end of each of its turns, ending the effect on itself with a successful save."},{"name":"Change Shape","text":"The dragon magically polymorphs into a humanoid or beast that has a challenge rating no higher than its own, or back into its true form. It reverts to its true form if it dies. Any equipment it is wearing or carrying is absorbed or borne by the new form (the dragon's choice).\nIn a new form, the dragon retains its alignment, hit points, Hit Dice, ability to speak, proficiencies, Legendary Resistance, lair actions, and Intelligence, Wisdom, and Charisma scores, as well as this action. Its statistics and capabilities are otherwise replaced by those of the new form, except any class features or legendary actions of that form."}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 15 ft. of the dragon must succeed on a DC 23 Dexterity saving throw or take 15 (2d6 + 8) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Ancient Gold Dragon","size":"Gargantuan","type":"Dragon","alignment":"lawful good","AC":"22 (natural armor)","HP":"546 (28d20+252)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":30,"dexterity":14,"constitution":29,"intelligence":18,"wisdom":17,"charisma":28,"savingThrows":"Dex +9, Con +16, Wis +10, Cha +16","skills":"Insight +10, Perception +17, Persuasion +16, Stealth +9","damageImmunities":"fire","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"24","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."},{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +17 to hit, reach 15 ft., one target. Hit: 21 (2d10 + 10) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +17 to hit, reach 10 ft., one target. Hit: 17 (2d6 + 10) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +17 to hit, reach 20 ft., one target. Hit: 19 (2d8 + 10) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 24 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Fire Breath","text":"The dragon exhales fire in a 90-foot cone. Each creature in that area must make a DC 24 Dexterity saving throw, taking 71 (13d10) fire damage on a failed save, or half as much damage on a successful one."},{"name":"Weakening Breath","text":"The dragon exhales gas in a 90-foot cone. Each creature in that area must succeed on a DC 24 Strength saving throw or have disadvantage on Strength-based attack rolls, Strength checks, and Strength saving throws for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."},{"name":"Change Shape","text":"The dragon magically polymorphs into a humanoid or beast that has a challenge rating no higher than its own, or back into its true form. It reverts to its true form if it dies. Any equipment it is wearing or carrying is absorbed or borne by the new form (the dragon's choice).\nIn a new form, the dragon retains its alignment, hit points, Hit Dice, ability to speak, proficiencies, Legendary Resistance, lair actions, and Intelligence, Wisdom, and Charisma scores, as well as this action. Its statistics and capabilities are otherwise replaced by those of the new form, except any class features or legendary actions of that form."}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 15 ft. of the dragon must succeed on a DC 25 Dexterity saving throw or take 17 (2d6 + 10) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Ancient Green Dragon","size":"Gargantuan","type":"Dragon","alignment":"lawful evil","AC":"21 (natural armor)","HP":"385 (22d20+154)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":27,"dexterity":12,"constitution":25,"intelligence":20,"wisdom":17,"charisma":19,"savingThrows":"Dex +8, Con +14, Wis +10, Cha +11","skills":"Deception +11, Insight +10, Perception +17, Persuasion +11, Stealth +8","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"22","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."},{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +15 to hit, reach 15 ft., one target. Hit: 19 (2d10 + 8) piercing damage plus 10 (3d6) poison damage."},{"name":"Claw","text":"Melee Weapon Attack: +15 to hit, reach 10 ft., one target. Hit: 22 (4d6 + 8) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +15 to hit, reach 20 ft., one target. Hit: 17 (2d8 + 8) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 19 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Poison Breath","text":"The dragon exhales poisonous gas in a 90-foot cone. Each creature in that area must make a DC 22 Constitution saving throw, taking 77 (22d6) poison damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 15 ft. of the dragon must succeed on a DC 23 Dexterity saving throw or take 15 (2d6 + 8) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Ancient Red Dragon","size":"Gargantuan","type":"Dragon","alignment":"chaotic evil","AC":"22 (natural armor)","HP":"546 (28d20+252)","speed":"40 ft., climb 40 ft., fly 80 ft.","strength":30,"dexterity":10,"constitution":29,"intelligence":18,"wisdom":15,"charisma":23,"savingThrows":"Dex +7, Con +16, Wis +9, Cha +13","skills":"Perception +16, Stealth +7","damageImmunities":"fire","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"24","traits":[{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +17 to hit, reach 15 ft., one target. Hit: 21 (2d10 + 10) piercing damage plus 14 (4d6) fire damage."},{"name":"Claw","text":"Melee Weapon Attack: +17 to hit, reach 10 ft., one target. Hit: 17 (2d6 + 10) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +17 to hit, reach 20 ft., one target. Hit: 19 (2d8 + 10) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 21 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Fire Breath","text":"The dragon exhales fire in a 90-foot cone. Each creature in that area must make a DC 24 Dexterity saving throw, taking 91 (26d6) fire damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 15 ft. of the dragon must succeed on a DC 25 Dexterity saving throw or take 17 (2d6 + 10) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Ancient Silver Dragon","size":"Gargantuan","type":"Dragon","alignment":"lawful good","AC":"22 (natural armor)","HP":"487 (25d20+225)","speed":"40 ft., fly 80 ft.","strength":30,"dexterity":10,"constitution":29,"intelligence":18,"wisdom":15,"charisma":23,"savingThrows":"Dex +7, Con +16, Wis +9, Cha +13","skills":"Arcana +11, History +11, Perception +16, Stealth +7","damageImmunities":"cold","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"23","traits":[{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +17 to hit, reach 15 ft., one target. Hit: 21 (2d10 + 10) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +17 to hit, reach 10 ft., one target. Hit: 17 (2d6 + 10) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +17 to hit, reach 20 ft., one target. Hit: 19 (2d8 + 10) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 21 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Cold Breath","text":"The dragon exhales an icy blast in a 90-foot cone. Each creature in that area must make a DC 24 Constitution saving throw, taking 67 (15d8) cold damage on a failed save, or half as much damage on a successful one."},{"name":"Paralyzing Breath","text":"The dragon exhales paralyzing gas in a 90- foot cone. Each creature in that area must succeed on a DC 24 Constitution saving throw or be paralyzed for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."},{"name":"Change Shape","text":"The dragon magically polymorphs into a humanoid or beast that has a challenge rating no higher than its own, or back into its true form. It reverts to its true form if it dies. Any equipment it is wearing or carrying is absorbed or borne by the new form (the dragon's choice).\nIn a new form, the dragon retains its alignment, hit points, Hit Dice, ability to speak, proficiencies, Legendary Resistance, lair actions, and Intelligence, Wisdom, and Charisma scores, as well as this action. Its statistics and capabilities are otherwise replaced by those of the new form, except any class features or legendary actions of that form."}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 15 ft. of the dragon must succeed on a DC 25 Dexterity saving throw or take 17 (2d6 + 10) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Ancient White Dragon","size":"Gargantuan","type":"Dragon","alignment":"chaotic evil","AC":"20 (natural armor)","HP":"333 (18d20+144)","speed":"40 ft., burrow 40 ft., fly 80 ft., swim 40 ft.","strength":26,"dexterity":10,"constitution":26,"intelligence":10,"wisdom":13,"charisma":14,"savingThrows":"Dex +6, Con +14, Wis +7, Cha +8","skills":"Perception +13, Stealth +6","damageImmunities":"cold","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"20","traits":[{"name":"Ice Walk","text":"The dragon can move across and climb icy surfaces without needing to make an ability check. Additionally, difficult terrain composed of ice or snow doesn't cost it extra moment."},{"name":"Legendary Resistance","text":"If the dragon fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"}],"actions":[{"name":"Multiattack","text":"The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +14 to hit, reach 15 ft., one target. Hit: 19 (2d10 + 8) piercing damage plus 9 (2d8) cold damage."},{"name":"Claw","text":"Melee Weapon Attack: +14 to hit, reach 10 ft., one target. Hit: 15 (2d6 + 8) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +14 to hit, reach 20 ft., one target. Hit: 17 (2d8 + 8) bludgeoning damage."},{"name":"Frightful Presence","text":"Each creature of the dragon's choice that is within 120 feet of the dragon and aware of it must succeed on a DC 16 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the dragon's Frightful Presence for the next 24 hours ."},{"name":"Cold Breath","text":"The dragon exhales an icy blast in a 90-foot cone. Each creature in that area must make a DC 22 Constitution saving throw, taking 72 (l6d8) cold damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"legendaryPoints":3,"legendaryActions":[{"name":"Detect","text":"The dragon makes a Wisdom (Perception) check.","cost":1},{"name":"Tail Attack","text":"The dragon makes a tail attack.","cost":1},{"name":"Wing Attack","text":"The dragon beats its wings. Each creature within 15 ft. of the dragon must succeed on a DC 22 Dexterity saving throw or take 15 (2d6 + 8) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.","cost":2}]},{"name":"Androsphinx","size":"Large","type":"Monstrosity","alignment":"lawful neutral","AC":"17 (natural armor)","HP":"199 (19d10+95)","speed":"40 ft., fly 60 ft.","strength":22,"dexterity":10,"constitution":20,"intelligence":16,"wisdom":18,"charisma":23,"savingThrows":"Dex +6, Con +11, Int +9, Wis +10","skills":"Arcana +9, Perception +10, Religion +15","damageImmunities":"psychic; bludgeoning, piercing, and slashing from nonmagical attacks","conditionImmunities":"charmed, frightened","senses":"truesight 120 ft.","languages":"Common, Sphinx","challenge":"17","traits":[{"name":"Inscrutable","text":"The sphinx is immune to any effect that would sense its emotions or read its thoughts, as well as any divination spell that it refuses. Wisdom (Insight) checks made to ascertain the sphinx's intentions or sincerity have disadvantage."},{"name":"Magic Weapons","text":"The sphinx's weapon attacks are magical."},{"name":"Spellcasting","text":"The sphinx is a 12th-level spellcaster. Its spellcasting ability is Wisdom (spell save DC 18, +10 to hit with spell attacks). It requires no material components to cast its spells. The sphinx has the following cleric spells prepared:\nCantrips (at will): sacred flame, spare the dying, thaumaturgy\n1st level (4 slots): command, detect evil and good, detect magic\n2nd level (3 slots): lesser restoration, zone of truth\n3rd level (3 slots): dispel magic, tongues\n4th level (3 slots): banishment, freedom of movement\n5th level (2 slots): flame strike, greater restoration\n6th level (1 slot): heroes' feast"}],"actions":[{"name":"Multiattack","text":"The sphinx makes two claw attacks."},{"name":"Claw","text":"Melee Weapon Attack: +12 to hit, reach 5 ft., one target. Hit: 17 (2d10 + 6) slashing damage."},{"name":"Roar","text":"The sphinx emits a magical roar. Each time it roars before finishing a long rest, the roar is louder and the effect is different, as detailed below. Each creature within 500 feet of the sphinx and able to hear the roar must make a saving throw.","recharge":"3/Day"},{"name":"First Roar","text":"Each creature that fails a DC 18 Wisdom saving throw is frightened for 1 minute. A frightened creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."},{"name":"Second Roar","text":"Each creature that fails a DC 18 Wisdom saving throw is deafened and frightened for 1 minute. A frightened creature is paralyzed and can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."},{"name":"Third Roar","text":"Each creature makes a DC 18 Constitution saving throw. On a failed save, a creature takes 44 (8d10) thunder damage and is knocked prone. On a successful save, the creature takes half as much damage and isn 't knocked prone."}],"legendaryPoints":3,"legendaryActions":[{"name":"Claw Attack","text":"The sphinx makes one claw attack.","cost":1},{"name":"Teleport","text":"The sphinx magically teleports, along with any equipment it is wearing or carrying, up to 120 feet to an unoccupied space it can see.","cost":2},{"name":"Cast a Spell","text":"The sphinx casts a spell from its list of prepared spells, using a spell slot as normal.","cost":3}],"spells":"sacred flame, spare the dying, thaumaturgy, command, detect evil and good, detect magic, lesser restoration, zone of truth, dispel magic, tongues, banishment, freedom of movement, flame strike, greater restoration, heroes' feast"},{"name":"Animated Armor","size":"Medium","type":"Construct","alignment":"unaligned","AC":"18 (natural armor)","HP":"33 (6d8+6)","speed":"25 ft.","strength":14,"dexterity":11,"constitution":13,"intelligence":1,"wisdom":3,"charisma":1,"damageImmunities":"poison, psychic","conditionImmunities":"blinded, charmed, deafened, exhaustion, frightened, paralyzed, petrified, poisoned","senses":"blindsight 60 ft. (blind beyond this radius)","challenge":"1","traits":[{"name":"Antimagic Susceptibility","text":"The armor is incapacitated while in the area of an antimagic field. If targeted by dispel magic, the armor must succeed on a Constitution saving throw against the caster's spell save DC or fall unconscious for 1 minute."},{"name":"False Appearance","text":"While the armor remains motionless, it is indistinguishable from a normal suit of armor."}],"actions":[{"name":"Multiattack","text":"The armor makes two melee attacks."},{"name":"Slam","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) bludgeoning damage."}]},{"name":"Ankheg","size":"Large","type":"Monstrosity","alignment":"unaligned","AC":"14 (natural armor, 11 while prone)","HP":"39 (6d10+6)","speed":"30 ft., burrow 10 ft.","strength":17,"dexterity":11,"constitution":13,"intelligence":1,"wisdom":13,"charisma":6,"senses":"darkvision 60 ft., tremorsense 60 ft.","challenge":"2","actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) slashing damage plus 3 (1d6) acid damage. If the target is a Large or smaller creature, it is grappled (escape DC 13). Until this grapple ends, the ankheg can bite only the grappled creature and has advantage on attack rolls to do so."},{"name":"Acid Spray","text":"The ankheg spits acid in a line that is 30 ft. long and 5 ft. wide, provided that it has no creature grappled. Each creature in that line must make a DC 13 Dexterity saving throw, taking 10 (3d6) acid damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 6"}]},{"name":"Ape","size":"Medium","type":"Beast","alignment":"unaligned","AC":"12","HP":"19 (3d8+6)","speed":"30 ft., climb 30 ft.","strength":16,"dexterity":14,"constitution":14,"intelligence":6,"wisdom":12,"charisma":7,"skills":"Athletics +5, Perception +3","challenge":"1/2","actions":[{"name":"Multiattack","text":"The ape makes two fist attacks."},{"name":"Fist","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) bludgeoning damage."},{"name":"Rock","text":"Ranged Weapon Attack: +5 to hit, range 25/50 ft., one target. Hit: 6 (1d6 + 3) bludgeoning damage."}]},{"name":"Archmage","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"12 (15 with mage armor)","HP":"99 (18d8+18)","speed":"30 ft.","strength":10,"dexterity":14,"constitution":12,"intelligence":20,"wisdom":15,"charisma":16,"savingThrows":"Int +9, Wis +6","skills":"Arcana +13, History +13","damageResistances":"damage from spells; non magical bludgeoning, piercing, and slashing (from stoneskin)","languages":"any six languages","challenge":"12","traits":[{"name":"Magic Resistance","text":"The archmage has advantage on saving throws against spells and other magical effects."},{"name":"Spellcasting","text":"The archmage is an 18th-level spellcaster. Its spellcasting ability is Intelligence (spell save DC 17, +9 to hit with spell attacks). The archmage can cast disguise self and invisibility at will and has the following wizard spells prepared:\nCantrips (at will): fire bolt, light, mage hand, prestidigitation, shocking grasp\n1st level (4 slots): detect magic, identify, mage armor*, magic missile\n2nd level (3 slots): detect thoughts, mirror image, misty step\n3rd level (3 slots): counterspell,fly, lightning bolt\n4th level (3 slots): banishment, fire shield, stoneskin*\n5th level (3 slots): cone of cold, scrying, wall of force\n6th level (1 slot): globe of invulnerability\n7th level (1 slot): teleport\n8th level (1 slot): mind blank*\n9th level (1 slot): time stop\n* The archmage casts these spells on itself before combat"}],"actions":[{"name":"Dagger","text":"Melee or Ranged Weapon Attack: +6 to hit, reach 5 ft. or range 20/60 ft., one target. Hit: 4 (1d4 + 2) piercing damage."}],"spells":"fire bolt, light, mage hand, prestidigitation, shocking grasp, detect magic, identify, mage armor, magic missile, detect thoughts, mirror image, misty step, counterspell, fly, lightning bolt, banishment, fire shield, stoneskin, cone of cold, scrying, wall of force, globe of invulnerability, teleport, mind blank, time stop"},{"name":"Assassin","size":"Medium","type":"Humanoid (any race)","alignment":"any non-good alignment","AC":"15 (studded leather)","HP":"78 (12d8+24)","speed":"30 ft.","strength":11,"dexterity":16,"constitution":14,"intelligence":13,"wisdom":11,"charisma":10,"savingThrows":"Dex +6, Int +4","skills":"Acrobatics +6, Deception +3, Perception +3, Stealth +9","damageResistances":"poison","languages":"Thieves' cant plus any two languages","challenge":"8","traits":[{"name":"Assassinate","text":"During its first turn, the assassin has advantage on attack rolls against any creature that hasn't taken a turn. Any hit the assassin scores against a surprised creature is a critical hit."},{"name":"Evasion","text":"If the assassin is subjected to an effect that allows it to make a Dexterity saving throw to take only half damage, the assassin instead takes no damage if it succeeds on the saving throw, and only half damage if it fails."},{"name":"Sneak Attack","text":"The assassin deals an extra 14 (4d6) damage when it hits a target with a weapon attack and has advantage on the attack roll, or when the target is within 5 ft. of an ally of the assassin that isn't incapacitated and the assassin doesn't have disadvantage on the attack roll.","recharge":"1/Turn"}],"actions":[{"name":"Multiattack","text":"The assassin makes two shortsword attacks."},{"name":"Shortsword","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) piercing damage, and the target must make a DC 15 Constitution saving throw, taking 24 (7d6) poison damage on a failed save, or half as much damage on a successful one."},{"name":"Light Crossbow","text":"Ranged Weapon Attack: +6 to hit, range 80/320 ft., one target. Hit: 7 (1d8 + 3) piercing damage, and the target must make a DC 15 Constitution saving throw, taking 24 (7d6) poison damage on a failed save, or half as much damage on a successful one."}]},{"name":"Awakened Shrub","size":"Small","type":"Plant","alignment":"unaligned","AC":"9","HP":"10 (3d6)","speed":"20 ft.","strength":3,"dexterity":8,"constitution":11,"intelligence":10,"wisdom":10,"charisma":6,"damageResistances":"piercing","damageVulnerabilities":"fire","languages":"one language known by its creator","challenge":"0","traits":[{"name":"False Appearance","text":"While the shrub remains motionless, it is indistinguishable from a normal shrub."}],"actions":[{"name":"Rake","text":"Melee Weapon Attack: +1 to hit, reach 5 ft., one target. Hit: 1 (1d4 - 1) slashing damage."}]},{"name":"Awakened Tree","size":"Huge","type":"Plant","alignment":"unaligned","AC":"13 (natural armor)","HP":"59 (7d12+14)","speed":"20 ft.","strength":19,"dexterity":6,"constitution":15,"intelligence":10,"wisdom":10,"charisma":7,"damageResistances":"bludgeoning, piercing","damageVulnerabilities":"fire","languages":"one language known by its creator","challenge":"2","traits":[{"name":"False Appearance","text":"While the tree remains motionless, it is indistinguishable from a normal tree."}],"actions":[{"name":"Slam","text":"Melee Weapon Attack: +6 to hit, reach 10 ft., one target. Hit: 14 (3d6 + 4) bludgeoning damage."}]},{"name":"Axe Beak","size":"Large","type":"Beast","alignment":"unaligned","AC":"11","HP":"19 (3d10+3)","speed":"50 ft.","strength":14,"dexterity":12,"constitution":12,"intelligence":2,"wisdom":10,"charisma":5,"challenge":"1/4","actions":[{"name":"Beak","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 6 (1d8 + 2) slashing damage."}]},{"name":"Azer","size":"Medium","type":"Elemental","alignment":"lawful neutral","AC":"17 (natural armor, shield)","HP":"39 (6d8+12)","speed":"30 ft.","strength":17,"dexterity":12,"constitution":15,"intelligence":12,"wisdom":13,"charisma":10,"savingThrows":"Con +4","damageImmunities":"fire, poison","conditionImmunities":"poisoned","languages":"Ignan","challenge":"2","traits":[{"name":"Heated Body","text":"A creature that touches the azer or hits it with a melee attack while within 5 ft. of it takes 5 (1d10) fire damage."},{"name":"Heated Weapons","text":"When the azer hits with a metal melee weapon, it deals an extra 3 (1d6) fire damage (included in the attack)."},{"name":"Illumination","text":"The azer sheds bright light in a 10-foot radius and dim light for an additional 10 ft.."}],"actions":[{"name":"Warhammer","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 7 (1d8 + 3) bludgeoning damage, or 8 (1d10 + 3) bludgeoning damage if used with two hands to make a melee attack, plus 3 (1d6) fire damage."}]},{"name":"Baboon","size":"Small","type":"Beast","alignment":"unaligned","AC":"12","HP":"3 (1d6)","speed":"30 ft., climb 30 ft.","strength":8,"dexterity":14,"constitution":11,"intelligence":4,"wisdom":12,"charisma":6,"challenge":"0","traits":[{"name":"Pack Tactics","text":"The baboon has advantage on an attack roll against a creature if at least one of the baboon's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +1 to hit, reach 5 ft., one target. Hit: 1 (1d4 - 1) piercing damage."}]},{"name":"Badger","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"10","HP":"3 (1d4+1)","speed":"20 ft., burrow 5 ft.","strength":4,"dexterity":11,"constitution":12,"intelligence":2,"wisdom":12,"charisma":5,"senses":"darkvision 30 ft.","challenge":"0","traits":[{"name":"Keen Smell","text":"The badger has advantage on Wisdom (Perception) checks that rely on smell."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one target. Hit: 1 piercing damage."}]},{"name":"Balor","size":"Huge","type":"Fiend (demon)","alignment":"chaotic evil","AC":"19 (natural armor)","HP":"262 (21d12+126)","speed":"40 ft., fly 80 ft.","strength":26,"dexterity":15,"constitution":22,"intelligence":20,"wisdom":16,"charisma":22,"savingThrows":"Str +14, Con +12, Wis +9, Cha +12","damageResistances":"cold, lightning; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"truesight 120 ft.","languages":"Abyssal, telepathy 120 ft.","challenge":"19","traits":[{"name":"Death Throes","text":"When the balor dies, it explodes, and each creature within 30 feet of it must make a DC 20 Dexterity saving throw, taking 70 (20d6) fire damage on a failed save, or half as much damage on a successful one. The explosion ignites flammable objects in that area that aren't being worn or carried, and it destroys the balor's weapons."},{"name":"Fire Aura","text":"At the start of each of the balor's turns, each creature within 5 feet of it takes 10 (3d6) fire damage, and flammable objects in the aura that aren't being worn or carried ignite. A creature that touches the balor or hits it with a melee attack while within 5 feet of it takes 10 (3d6) fire damage."},{"name":"Magic Resistance","text":"The balor has advantage on saving throws against spells and other magical effects."},{"name":"Magic Weapons","text":"The balor's weapon attacks are magical."}],"actions":[{"name":"Multiattack","text":"The balor makes two attacks: one with its longsword and one with its whip."},{"name":"Longsword","text":"Melee Weapon Attack: +14 to hit, reach 10 ft., one target. Hit: 21 (3d8 + 8) slashing damage plus 13 (3d8) lightning damage. If the balor scores a critical hit, it rolls damage dice three times, instead of twice."},{"name":"Whip","text":"Melee Weapon Attack: +14 to hit, reach 30 ft., one target. Hit: 15 (2d6 + 8) slashing damage plus 10 (3d6) fire damage, and the target must succeed on a DC 20 Strength saving throw or be pulled up to 25 feet toward the balor."},{"name":"Teleport","text":"The balor magically teleports, along with any equipment it is wearing or carrying, up to 120 feet to an unoccupied space it can see."},{"name":"Variant: Summon Demon","text":"The demon chooses what to summon and attempts a magical summoning.\nA balor has a 50 percent chance of summoning 1d8 vrocks, 1d6 hezrous, 1d4 glabrezus, 1d3 nalfeshnees, 1d2 mariliths, or one goristro.\nA summoned demon appears in an unoccupied space within 60 feet of its summoner, acts as an ally of its summoner, and can't summon other demons. It remains for 1 minute, until it or its summoner dies, or until its summoner dismisses it as an action.","recharge":"1/Day"}]},{"name":"Bandit","size":"Medium","type":"Humanoid (any race)","alignment":"any non-lawful alignment","AC":"12 (leather armor)","HP":"11 (2d8+2)","speed":"30 ft.","strength":11,"dexterity":12,"constitution":12,"intelligence":10,"wisdom":10,"charisma":10,"languages":"any one language (usually Common)","challenge":"1/8","actions":[{"name":"Scimitar","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 4 (1d6 + 1) slashing damage."},{"name":"Light Crossbow","text":"Ranged Weapon Attack: +3 to hit, range 80 ft./320 ft., one target. Hit: 5 (1d8 + 1) piercing damage."}]},{"name":"Bandit Captain","size":"Medium","type":"Humanoid (any race)","alignment":"any non-lawful alignment","AC":"15 (studded leather)","HP":"65 (10d8+20)","speed":"30 ft.","strength":15,"dexterity":16,"constitution":14,"intelligence":14,"wisdom":11,"charisma":14,"savingThrows":"Str +4, Dex +5, Wis +2","skills":"Athletics +4, Deception +4","languages":"any two languages","challenge":"2","actions":[{"name":"Multiattack","text":"The captain makes three melee attacks: two with its scimitar and one with its dagger. Or the captain makes two ranged attacks with its daggers."},{"name":"Scimitar","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) slashing damage."},{"name":"Dagger","text":"Melee or Ranged Weapon Attack: +5 to hit, reach 5 ft. or range 20/60 ft., one target. Hit: 5 (1d4 + 3) piercing damage."}],"reactions":[{"name":"Parry","text":"The captain adds 2 to its AC against one melee attack that would hit it. To do so, the captain must see the attacker and be wielding a melee weapon."}]},{"name":"Barbed Devil","size":"Medium","type":"Fiend (devil)","alignment":"lawful evil","AC":"15 (natural armor)","HP":"110 (13d8+52)","speed":"30 ft.","strength":16,"dexterity":17,"constitution":18,"intelligence":12,"wisdom":14,"charisma":14,"savingThrows":"Str +6, Con +7, Wis +5, Cha +5","skills":"Deception +5, Insight +5, Perception +8","damageResistances":"cold; bludgeoning, piercing, and slashing from nonmagical attacks that aren't silvered","damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"darkvision 120 ft.","languages":"Infernal, telepathy 120 ft.","challenge":"5","traits":[{"name":"Barbed Hide","text":"At the start of each of its turns, the barbed devil deals 5 (1d10) piercing damage to any creature grappling it."},{"name":"Devil's Sight","text":"Magical darkness doesn't impede the devil's darkvision."},{"name":"Magic Resistance","text":"The devil has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The devil makes three melee attacks: one with its tail and two with its claws. Alternatively, it can use Hurl Flame twice."},{"name":"Claw","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) piercing damage."},{"name":"Tail","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) piercing damage."},{"name":"Hurl Flame","text":"Ranged Spell Attack: +5 to hit, range 150 ft., one target. Hit: 10 (3d6) fire damage. If the target is a flammable object that isn't being worn or carried, it also catches fire."}]},{"name":"Basilisk","size":"Medium","type":"Monstrosity","alignment":"unaligned","AC":"12 (natural armor)","HP":"52 (8d8+16)","speed":"20 ft.","strength":16,"dexterity":8,"constitution":15,"intelligence":2,"wisdom":8,"charisma":7,"senses":"darkvision 60 ft.","challenge":"3","traits":[{"name":"Petrifying Gaze","text":"If a creature starts its turn within 30 ft. of the basilisk and the two of them can see each other, the basilisk can force the creature to make a DC 12 Constitution saving throw if the basilisk isn't incapacitated. On a failed save, the creature magically begins to turn to stone and is restrained. It must repeat the saving throw at the end of its next turn. On a success, the effect ends. On a failure, the creature is petrified until freed by the greater restoration spell or other magic.\nA creature that isn't surprised can avert its eyes to avoid the saving throw at the start of its turn. If it does so, it can't see the basilisk until the start of its next turn, when it can avert its eyes again. If it looks at the basilisk in the meantime, it must immediately make the save.\nIf the basilisk sees its reflection within 30 ft. of it in bright light, it mistakes itself for a rival and targets itself with its gaze."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) piercing damage plus 7 (2d6) poison damage."}]},{"name":"Bat","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"12","HP":"1 (1d4-1)","speed":"5 ft., fly 30 ft.","strength":2,"dexterity":15,"constitution":8,"intelligence":2,"wisdom":12,"charisma":4,"senses":"blindsight 60 ft.","challenge":"0","traits":[{"name":"Echolocation","text":"The bat can't use its blindsight while deafened."},{"name":"Keen Hearing","text":"The bat has advantage on Wisdom (Perception) checks that rely on hearing."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +0 to hit, reach 5 ft., one creature. Hit: 1 piercing damage."}]},{"name":"Bearded Devil","size":"Medium","type":"Fiend (devil)","alignment":"lawful evil","AC":"13 (natural armor)","HP":"52 (8d8+16)","speed":"30 ft.","strength":16,"dexterity":15,"constitution":15,"intelligence":9,"wisdom":11,"charisma":11,"savingThrows":"Str +5, Con +4, Wis +2","damageResistances":"cold; bludgeoning, piercing, and slashing from nonmagical attacks that aren't silvered","damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"darkvision 120 ft.","languages":"Infernal, telepathy 120 ft.","challenge":"3","traits":[{"name":"Devil's Sight","text":"Magical darkness doesn't impede the devil's darkvision."},{"name":"Magic Resistance","text":"The devil has advantage on saving throws against spells and other magical effects."},{"name":"Steadfast","text":"The devil can't be frightened while it can see an allied creature within 30 feet of it."}],"actions":[{"name":"Multiattack","text":"The devil makes two attacks: one with its beard and one with its glaive."},{"name":"Beard","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one creature. Hit: 6 (1d8 + 2) piercing damage, and the target must succeed on a DC 12 Constitution saving throw or be poisoned for 1 minute. While poisoned in this way, the target can't regain hit points. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."},{"name":"Glaive","text":"Melee Weapon Attack: +5 to hit, reach 10 ft., one target. Hit: 8 (1d10 + 3) slashing damage. If the target is a creature other than an undead or a construct, it must succeed on a DC 12 Constitution saving throw or lose 5 (1d10) hit points at the start of each of its turns due to an infernal wound. Each time the devil hits the wounded target with this attack, the damage dealt by the wound increases by 5 (1d10). Any creature can take an action to stanch the wound with a successful DC 12 Wisdom (Medicine) check. The wound also closes if the target receives magical healing."}]},{"name":"Behir","size":"Huge","type":"Monstrosity","alignment":"neutral evil","AC":"17 (natural armor)","HP":"168 (16d12+64)","speed":"50 ft., climb 40 ft.","strength":23,"dexterity":16,"constitution":18,"intelligence":7,"wisdom":14,"charisma":12,"skills":"Perception +6, Stealth +7","damageImmunities":"lightning","senses":"darkvision 90 ft.","languages":"Draconic","challenge":"11","actions":[{"name":"Multiattack","text":"The behir makes two attacks: one with its bite and one to constrict."},{"name":"Bite","text":"Melee Weapon Attack: +10 to hit, reach 10 ft., one target. Hit: 22 (3d10 + 6) piercing damage."},{"name":"Constrict","text":"Melee Weapon Attack: +10 to hit, reach 5 ft., one Large or smaller creature. Hit: 17 (2d10 + 6) bludgeoning damage plus 17 (2d10 + 6) slashing damage. The target is grappled (escape DC 16) if the behir isn't already constricting a creature, and the target is restrained until this grapple ends."},{"name":"Lightning Breath","text":"The behir exhales a line of lightning that is 20 ft. long and 5 ft. wide. Each creature in that line must make a DC 16 Dexterity saving throw, taking 66 (12d10) lightning damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"},{"name":"Swallow","text":"The behir makes one bite attack against a Medium or smaller target it is grappling. If the attack hits, the target is also swallowed, and the grapple ends. While swallowed, the target is blinded and restrained, it has total cover against attacks and other effects outside the behir, and it takes 21 (6d6) acid damage at the start of each of the behir's turns. A behir can have only one creature swallowed at a time. \n If the behir takes 30 damage or more on a single turn from the swallowed creature, the behir must succeed on a DC 14 Constitution saving throw at the end of that turn or regurgitate the creature, which falls prone in a space within 10 ft. of the behir. If the behir dies, a swallowed creature is no longer restrained by it and can escape from the corpse by using 15 ft. of movement, exiting prone."}]},{"name":"Berserker","size":"Medium","type":"Humanoid (any race)","alignment":"any chaotic alignment","AC":"13 (hide armor)","HP":"67 (9d8+27)","speed":"30 ft.","strength":16,"dexterity":12,"constitution":17,"intelligence":9,"wisdom":11,"charisma":9,"languages":"any one language (usually Common)","challenge":"2","traits":[{"name":"Reckless","text":"At the start of its turn, the berserker can gain advantage on all melee weapon attack rolls during that turn, but attack rolls against it have advantage until the start of its next turn."}],"actions":[{"name":"Greataxe","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 9 (1d12 + 3) slashing damage."}]},{"name":"Black Bear","size":"Medium","type":"Beast","alignment":"unaligned","AC":"11 (natural armor)","HP":"19 (3d8+6)","speed":"40 ft., climb 30 ft.","strength":15,"dexterity":10,"constitution":14,"intelligence":2,"wisdom":12,"charisma":7,"skills":"Perception +3","challenge":"1/2","traits":[{"name":"Keen Smell","text":"The bear has advantage on Wisdom (Perception) checks that rely on smell."}],"actions":[{"name":"Multiattack","text":"The bear makes two attacks: one with its bite and one with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 7 (2d4 + 2) slashing damage."}]},{"name":"Black Dragon Wyrmling","size":"Medium","type":"Dragon","alignment":"chaotic evil","AC":"17 (natural armor)","HP":"33 (6d8+6)","speed":"30 ft., fly 60 ft., swim 30 ft.","strength":15,"dexterity":14,"constitution":13,"intelligence":10,"wisdom":11,"charisma":13,"savingThrows":"Dex +4, Con +3, Wis +2, Cha +3","skills":"Perception +4, Stealth +4","damageImmunities":"acid","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"Draconic","challenge":"2","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (1d10 + 2) piercing damage plus 2 (1d4) acid damage."},{"name":"Acid Breath","text":"The dragon exhales acid in a 15-foot line that is 5 feet wide. Each creature in that line must make a DC 11 Dexterity saving throw, taking 22 (Sd8) acid damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Black Pudding","size":"Large","type":"Ooze","alignment":"unaligned","AC":"7","HP":"85 (10d10+30)","speed":"20 ft., climb 20 ft.","strength":16,"dexterity":5,"constitution":16,"intelligence":1,"wisdom":6,"charisma":1,"damageImmunities":"acid, cold, lightning, slashing","conditionImmunities":"blinded, charmed, deafened, exhaustion, frightened, prone","senses":"blindsight 60 ft. (blind beyond this radius)","challenge":"4","traits":[{"name":"Amorphous","text":"The pudding can move through a space as narrow as 1 inch wide without squeezing."},{"name":"Corrosive Form","text":"A creature that touches the pudding or hits it with a melee attack while within 5 feet of it takes 4 (1d8) acid damage. Any nonmagical weapon made of metal or wood that hits the pudding corrodes. After dealing damage, the weapon takes a permanent and cumulative -1 penalty to damage rolls. If its penalty drops to -5, the weapon is destroyed. Nonmagical ammunition made of metal or wood that hits the pudding is destroyed after dealing damage. The pudding can eat through 2-inch-thick, nonmagical wood or metal in 1 round."},{"name":"Spider Climb","text":"The pudding can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."}],"actions":[{"name":"Pseudopod","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) bludgeoning damage plus 18 (4d8) acid damage. In addition, nonmagical armor worn by the target is partly dissolved and takes a permanent and cumulative -1 penalty to the AC it offers. The armor is destroyed if the penalty reduces its AC to 10."}]},{"name":"Blink Dog","size":"Medium","type":"Fey","alignment":"lawful good","AC":"13","HP":"22 (4d8+4)","speed":"40 ft.","strength":12,"dexterity":17,"constitution":12,"intelligence":10,"wisdom":13,"charisma":11,"skills":"Perception +3, Stealth +5","languages":"Blink Dog, understands Sylvan but can't speak it","challenge":"1/4","traits":[{"name":"Keen Hearing and Smell","text":"The dog has advantage on Wisdom (Perception) checks that rely on hearing or smell."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 4 (1d6 + 1) piercing damage."},{"name":"Teleport","text":"The dog magically teleports, along with any equipment it is wearing or carrying, up to 40 ft. to an unoccupied space it can see. Before or after teleporting, the dog can make one bite attack.","recharge":"Recharge 4-6"}]},{"name":"Blood Hawk","size":"Small","type":"Beast","alignment":"unaligned","AC":"12","HP":"7 (2d6)","speed":"10 ft., fly 60 ft.","strength":6,"dexterity":14,"constitution":10,"intelligence":3,"wisdom":14,"charisma":5,"skills":"Perception +4","challenge":"1/8","traits":[{"name":"Keen Sight","text":"The hawk has advantage on Wisdom (Perception) checks that rely on sight."},{"name":"Pack Tactics","text":"The hawk has advantage on an attack roll against a creature if at least one of the hawk's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Beak","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 4 (1d4 + 2) piercing damage."}]},{"name":"Blue Dragon Wyrmling","size":"Medium","type":"Dragon","alignment":"lawful evil","AC":"17 (natural armor)","HP":"52 (8d8+16)","speed":"30 ft., burrow 15 ft., fly 60 ft.","strength":17,"dexterity":10,"constitution":15,"intelligence":12,"wisdom":11,"charisma":15,"savingThrows":"Dex +2, Con +4, Wis +2, Cha +4","skills":"Perception +4, Stealth +2","damageImmunities":"lightning","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"Draconic","challenge":"3","actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 8 (1d10 + 3) piercing damage plus 3 (1d6) lightning damage."},{"name":"Lightning Breath","text":"The dragon exhales lightning in a 30-foot line that is 5 feet wide. Each creature in that line must make a DC 12 Dexterity saving throw, taking 22 (4d10) lightning damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Boar","size":"Medium","type":"Beast","alignment":"unaligned","AC":"11 (natural armor)","HP":"11 (2d8+2)","speed":"40 ft.","strength":13,"dexterity":11,"constitution":12,"intelligence":2,"wisdom":9,"charisma":5,"challenge":"1/4","traits":[{"name":"Charge","text":"If the boar moves at least 20 ft. straight toward a target and then hits it with a tusk attack on the same turn, the target takes an extra 3 (1d6) slashing damage. If the target is a creature, it must succeed on a DC 11 Strength saving throw or be knocked prone."},{"name":"Relentless","text":"If the boar takes 7 damage or less that would reduce it to 0 hit points, it is reduced to 1 hit point instead.","recharge":"Recharges after a Short or Long Rest"}],"actions":[{"name":"Tusk","text":"Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 4 (1d6 + 1) slashing damage."}]},{"name":"Bone Devil","size":"Large","type":"Fiend (devil)","alignment":"lawful evil","AC":"19 (natural armor)","HP":"142 (15d10+60)","speed":"40 ft., fly 40 ft.","strength":18,"dexterity":16,"constitution":18,"intelligence":13,"wisdom":14,"charisma":16,"savingThrows":"Int +5, Wis +6, Cha +7","skills":"Deception +7, Insight +6","damageResistances":"cold; bludgeoning, piercing, and slashing from nonmagical attacks that aren't silvered","damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"darkvision 120 ft.","languages":"Infernal, telepathy 120 ft.","challenge":"12","traits":[{"name":"Devil's Sight","text":"Magical darkness doesn't impede the devil's darkvision."},{"name":"Magic Resistance","text":"The devil has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The devil makes three attacks: two with its claws and one with its sting."},{"name":"Multiattack","text":"The devil makes three attacks: two with its claws and one with its sting."},{"name":"Claw","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one target. Hit: 8 (1d8 + 4) slashing damage."},{"name":"Claw","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one target. Hit: 8 (1d8 + 4) slashing damage."},{"name":"Sting","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one target. Hit: 13 (2d8 + 4) piercing damage plus 17 (5d6) poison damage, and the target must succeed on a DC 14 Constitution saving throw or become poisoned for 1 minute. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success ."},{"name":"Sting","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one target. Hit: 13 (2d8 + 4) piercing damage plus 17 (5d6) poison damage, and the target must succeed on a DC 14 Constitution saving throw or become poisoned for 1 minute. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success ."}]},{"name":"Brass Dragon Wyrmling","size":"Medium","type":"Dragon","alignment":"chaotic good","AC":"16 (natural armor)","HP":"16 (3d8+3)","speed":"30 ft., burrow 15 ft., fly 60 ft.","strength":15,"dexterity":10,"constitution":13,"intelligence":10,"wisdom":11,"charisma":13,"savingThrows":"Dex +2, Con +3, Wis +2, Cha +3","skills":"Perception +4, Stealth +2","damageImmunities":"fire","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"Draconic","challenge":"1","actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (1d10 + 2) piercing damage."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Fire Breath","text":"The dragon exhales fire in an 20-foot line that is 5 feet wide. Each creature in that line must make a DC 11 Dexterity saving throw, taking 14 (4d6) fire damage on a failed save, or half as much damage on a successful one."},{"name":"Sleep Breath","text":"The dragon exhales sleep gas in a 15-foot cone. Each creature in that area must succeed on a DC 11 Constitution saving throw or fall unconscious for 1 minute. This effect ends for a creature if the creature takes damage or someone uses an action to wake it."}]},{"name":"Bronze Dragon Wyrmling","size":"Medium","type":"Dragon","alignment":"lawful good","AC":"17 (natural armor)","HP":"32 (5d8+10)","speed":"30 ft., fly 60 ft., swim 30 ft.","strength":17,"dexterity":10,"constitution":15,"intelligence":12,"wisdom":11,"charisma":15,"savingThrows":"Dex +2, Con +4, Wis +2, Cha +4","skills":"Perception +4, Stealth +2","damageImmunities":"lightning","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"Draconic","challenge":"2","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 8 (1d10 + 3) piercing damage."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Lightning Breath","text":"The dragon exhales lightning in a 40-foot line that is 5 feet wide. Each creature in that line must make a DC 12 Dexterity saving throw, taking 16 (3d10) lightning damage on a failed save, or half as much damage on a successful one."},{"name":"Repulsion Breath","text":"The dragon exhales repulsion energy in a 30-foot cone. Each creature in that area must succeed on a DC 12 Strength saving throw. On a failed save, the creature is pushed 30 feet away from the dragon."}]},{"name":"Brown Bear","size":"Large","type":"Beast","alignment":"unaligned","AC":"11 (natural armor)","HP":"34 (4d10+12)","speed":"40 ft., climb 30 ft.","strength":19,"dexterity":10,"constitution":16,"intelligence":2,"wisdom":13,"charisma":7,"skills":"Perception +3","challenge":"1","traits":[{"name":"Keen Smell","text":"The bear has advantage on Wisdom (Perception) checks that rely on smell."}],"actions":[{"name":"Multiattack","text":"The bear makes two attacks: one with its bite and one with its claws."},{"name":"Bite","text":"Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 8 (1d8 + 4) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) slashing damage."}]},{"name":"Bugbear","size":"Medium","type":"Humanoid (goblinoid)","alignment":"chaotic evil","AC":"16 (hide armor, shield)","HP":"27 (5d8+5)","speed":"30 ft.","strength":15,"dexterity":14,"constitution":13,"intelligence":8,"wisdom":11,"charisma":9,"skills":"Stealth +6, Survival +2","senses":"darkvision 60 ft.","languages":"Common, Goblin","challenge":"1","traits":[{"name":"Brute","text":"A melee weapon deals one extra die of its damage when the bugbear hits with it (included in the attack)."},{"name":"Surprise Attack","text":"If the bugbear surprises a creature and hits it with an attack during the first round of combat, the target takes an extra 7 (2d6) damage from the attack."}],"actions":[{"name":"Morningstar","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 11 (2d8 + 2) piercing damage."},{"name":"Javelin","text":"Melee or Ranged Weapon Attack: +4 to hit, reach 5 ft. or range 30/120 ft., one target. Hit: 9 (2d6 + 2) piercing damage in melee or 5 (1d6 + 2) piercing damage at range."}]},{"name":"Bulette","size":"Large","type":"Monstrosity","alignment":"unaligned","AC":"17 (natural armor)","HP":"94 (9d10+45)","speed":"40 ft., burrow 40 ft.","strength":19,"dexterity":11,"constitution":21,"intelligence":2,"wisdom":10,"charisma":5,"skills":"Perception +6","senses":"darkvision 60 ft., tremorsense 60 ft.","challenge":"5","traits":[{"name":"Standing Leap","text":"The bulette's long jump is up to 30 ft. and its high jump is up to 15 ft., with or without a running start."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 30 (4d12 + 4) piercing damage."},{"name":"Deadly Leap","text":"If the bulette jumps at least 15 ft. as part of its movement, it can then use this action to land on its ft. in a space that contains one or more other creatures. Each of those creatures must succeed on a DC 16 Strength or Dexterity saving throw (target's choice) or be knocked prone and take 14 (3d6 + 4) bludgeoning damage plus 14 (3d6 + 4) slashing damage. On a successful save, the creature takes only half the damage, isn't knocked prone, and is pushed 5 ft. out of the bulette's space into an unoccupied space of the creature's choice. If no unoccupied space is within range, the creature instead falls prone in the bulette's space."}]},{"name":"Camel","size":"Large","type":"Beast","alignment":"unaligned","AC":"9","HP":"15 (2d10+4)","speed":"50 ft.","strength":16,"dexterity":8,"constitution":14,"intelligence":2,"wisdom":8,"charisma":5,"challenge":"1/8","actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 2 (1d4) bludgeoning damage."}]},{"name":"Carrion Crawler","size":"Large","type":"Monstrosity","alignment":"unaligned","AC":"13 (natural armor)","HP":"51 (6d10+18)","speed":"30 ft., climb 30 ft.","strength":14,"dexterity":13,"constitution":16,"intelligence":1,"wisdom":12,"charisma":5,"skills":"Perception +3","senses":"darkvision 60 ft.","challenge":"2","traits":[{"name":"Keen Smell","text":"The carrion crawler has advantage on Wisdom (Perception) checks that rely on smell."},{"name":"Spider Climb","text":"The carrion crawler can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."}],"actions":[{"name":"Multiattack","text":"The carrion crawler makes two attacks: one with its tentacles and one with its bite."},{"name":"Tentacles","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one creature. Hit: 4 (1d4 + 2) poison damage, and the target must succeed on a DC 13 Constitution saving throw or be poisoned for 1 minute. Until this poison ends, the target is paralyzed. The target can repeat the saving throw at the end of each of its turns, ending the poison on itself on a success."},{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (2d4 + 2) piercing damage."}]},{"name":"Cat","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"12","HP":"2 (1d4)","speed":"40 ft., climb 30 ft.","strength":3,"dexterity":15,"constitution":10,"intelligence":3,"wisdom":12,"charisma":7,"skills":"Perception +3, Stealth +4","challenge":"0","traits":[{"name":"Keen Smell","text":"The cat has advantage on Wisdom (Perception) checks that rely on smell."}],"actions":[{"name":"Claws","text":"Melee Weapon Attack: +0 to hit, reach 5 ft., one target. Hit: 1 slashing damage."}]},{"name":"Cave Bear","size":"Large","type":"Beast","alignment":"unaligned","AC":"12 (natural armor)","HP":"42 (5d10+15)","speed":"40 ft., swim 30 ft.","strength":20,"dexterity":10,"constitution":16,"intelligence":2,"wisdom":13,"charisma":7,"skills":"Perception +3","senses":"darkvision 60 ft.","challenge":"2","traits":[{"name":"Keen Smell","text":"The bear has advantage on Wisdom (Perception) checks that rely on smell."}],"actions":[{"name":"Multiattack","text":"The bear makes two attacks: one with its bite and one with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 9 (1d8 + 5) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 12 (2d6 + 5) slashing damage."}]},{"name":"Centaur","size":"Large","type":"Monstrosity","alignment":"neutral good","AC":"12","HP":"45 (6d10+12)","speed":"50 ft.","strength":18,"dexterity":14,"constitution":14,"intelligence":9,"wisdom":13,"charisma":11,"skills":"Athletics +6, Perception +3, Survival +3","languages":"Elvish, Sylvan","challenge":"2","traits":[{"name":"Charge","text":"If the centaur moves at least 30 ft. straight toward a target and then hits it with a pike attack on the same turn, the target takes an extra 10 (3d6) piercing damage."}],"actions":[{"name":"Multiattack","text":"The centaur makes two attacks: one with its pike and one with its hooves or two with its longbow."},{"name":"Pike","text":"Melee Weapon Attack: +6 to hit, reach 10 ft., one target. Hit: 9 (1d10 + 4) piercing damage."},{"name":"Hooves","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) bludgeoning damage."},{"name":"Longbow","text":"Ranged Weapon Attack: +4 to hit, range 150/600 ft., one target. Hit: 6 (1d8 + 2) piercing damage."}]},{"name":"Chain Devil","size":"Medium","type":"Fiend (devil)","alignment":"lawful evil","AC":"16 (natural armor)","HP":"85 (10d8+40)","speed":"30 ft.","strength":18,"dexterity":15,"constitution":18,"intelligence":11,"wisdom":12,"charisma":14,"savingThrows":"Con +7, Wis +4, Cha +5","damageResistances":"cold; bludgeoning, piercing, and slashing from nonmagical attacks that aren't silvered","damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"darkvision 120 ft.","languages":"Infernal, telepathy 120 ft.","challenge":"8","traits":[{"name":"Devil's Sight","text":"Magical darkness doesn't impede the devil's darkvision."},{"name":"Magic Resistance","text":"The devil has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The devil makes two attacks with its chains."},{"name":"Chain","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one target. Hit: 11 (2d6 + 4) slashing damage. The target is grappled (escape DC 14) if the devil isn't already grappling a creature. Until this grapple ends, the target is restrained and takes 7 (2d6) piercing damage at the start of each of its turns."},{"name":"Animate Chains","text":"Up to four chains the devil can see within 60 feet of it magically sprout razor-edged barbs and animate under the devil's control, provided that the chains aren't being worn or carried.\nEach animated chain is an object with AC 20, 20 hit points, resistance to piercing damage, and immunity to psychic and thunder damage. When the devil uses Multiattack on its turn, it can use each animated chain to make one additional chain attack. An animated chain can grapple one creature of its own but can't make attacks while grappling. An animated chain reverts to its inanimate state if reduced to 0 hit points or if the devil is incapacitated or dies.","recharge":"Recharges after a Short or Long Rest"}],"reactions":[{"name":"Unnerving Mask","text":"When a creature the devil can see starts its turn within 30 feet of the devil, the devil can create the illusion that it looks like one of the creature's departed loved ones or bitter enemies. If the creature can see the devil, it must succeed on a DC 14 Wisdom saving throw or be frightened until the end of its turn."}]},{"name":"Chimera","size":"Large","type":"Monstrosity","alignment":"chaotic evil","AC":"14 (natural armor)","HP":"114 (12d10+48)","speed":"30 ft., fly 60 ft.","strength":19,"dexterity":11,"constitution":19,"intelligence":3,"wisdom":14,"charisma":10,"skills":"Perception +8","senses":"darkvision 60 ft.","languages":"understands Draconic but can't speak","challenge":"6","actions":[{"name":"Multiattack","text":"The chimera makes three attacks: one with its bite, one with its horns, and one with its claws. When its fire breath is available, it can use the breath in place of its bite or horns."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) piercing damage."},{"name":"Horns","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 10 (1d12 + 4) bludgeoning damage."},{"name":"Claws","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) slashing damage."},{"name":"Fire Breath","text":"The dragon head exhales fire in a 15-foot cone. Each creature in that area must make a DC 15 Dexterity saving throw, taking 31 (7d8) fire damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Chuul","size":"Large","type":"Aberration","alignment":"chaotic evil","AC":"16 (natural armor)","HP":"93 (11d10+33)","speed":"30 ft., swim 30 ft.","strength":19,"dexterity":10,"constitution":16,"intelligence":5,"wisdom":11,"charisma":5,"skills":"Perception +4","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"understands Deep Speech but can't speak","challenge":"4","traits":[{"name":"Amphibious","text":"The chuul can breathe air and water."},{"name":"Sense Magic","text":"The chuul senses magic within 120 feet of it at will. This trait otherwise works like the detect magic spell but isn't itself magical."}],"actions":[{"name":"Multiattack","text":"The chuul makes two pincer attacks. If the chuul is grappling a creature, the chuul can also use its tentacles once."},{"name":"Pincer","text":"Melee Weapon Attack: +6 to hit, reach 10 ft., one target. Hit: 11 (2d6 + 4) bludgeoning damage. The target is grappled (escape DC 14) if it is a Large or smaller creature and the chuul doesn't have two other creatures grappled."},{"name":"Tentacles","text":"One creature grappled by the chuul must succeed on a DC 13 Constitution saving throw or be poisoned for 1 minute. Until this poison ends, the target is paralyzed. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."}]},{"name":"Clay Golem","size":"Large","type":"Construct","alignment":"unaligned","AC":"14 (natural armor)","HP":"133 (14d10+56)","speed":"20 ft.","strength":20,"dexterity":9,"constitution":18,"intelligence":3,"wisdom":8,"charisma":1,"damageImmunities":"acid, poison, psychic; bludgeoning, piercing, and slashing from nonmagical attacks that aren't adamantine","conditionImmunities":"charmed, exhaustion, frightened, paralyzed, petrified, poisoned","senses":"darkvision 60 ft.","languages":"understands the languages of its creator but can't speak","challenge":"9","traits":[{"name":"Acid Absorption","text":"Whenever the golem is subjected to acid damage, it takes no damage and instead regains a number of hit points equal to the acid damage dealt."},{"name":"Berserk","text":"Whenever the golem starts its turn with 60 hit points or fewer, roll a d6. On a 6, the golem goes berserk. On each of its turns while berserk, the golem attacks the nearest creature it can see. If no creature is near enough to move to and attack, the golem attacks an object, with preference for an object smaller than itself. Once the golem goes berserk, it continues to do so until it is destroyed or regains all its hit points."},{"name":"Immutable Form","text":"The golem is immune to any spell or effect that would alter its form."},{"name":"Magic Resistance","text":"The golem has advantage on saving throws against spells and other magical effects."},{"name":"Magic Weapons","text":"The golem's weapon attacks are magical."}],"actions":[{"name":"Multiattack","text":"The golem makes two slam attacks."},{"name":"Slam","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one target. Hit: 16 (2d10 + 5) bludgeoning damage. If the target is a creature, it must succeed on a DC 15 Constitution saving throw or have its hit point maximum reduced by an amount equal to the damage taken. The target dies if this attack reduces its hit point maximum to 0. The reduction lasts until removed by the greater restoration spell or other magic."},{"name":"Haste","text":"Until the end of its next turn, the golem magically gains a +2 bonus to its AC, has advantage on Dexterity saving throws, and can use its slam attack as a bonus action.","recharge":"Recharge 5-6"}]},{"name":"Cloaker","size":"Large","type":"Aberration","alignment":"chaotic neutral","AC":"14 (natural armor)","HP":"78 (12d10+12)","speed":"10 ft., fly 40 ft.","strength":17,"dexterity":15,"constitution":12,"intelligence":13,"wisdom":12,"charisma":14,"skills":"Stealth +5","senses":"darkvision 60 ft.","languages":"Deep Speech, Undercommon","challenge":"8","traits":[{"name":"Damage Transfer","text":"While attached to a creature, the cloaker takes only half the damage dealt to it (rounded down). and that creature takes the other half."},{"name":"False Appearance","text":"While the cloaker remains motionless without its underside exposed, it is indistinguishable from a dark leather cloak."},{"name":"Light Sensitivity","text":"While in bright light, the cloaker has disadvantage on attack rolls and Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Multiattack","text":"The cloaker makes two attacks: one with its bite and one with its tail."},{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one creature. Hit: 10 (2d6 + 3) piercing damage, and if the target is Large or smaller, the cloaker attaches to it. If the cloaker has advantage against the target, the cloaker attaches to the target's head, and the target is blinded and unable to breathe while the cloaker is attached. While attached, the cloaker can make this attack only against the target and has advantage on the attack roll. The cloaker can detach itself by spending 5 feet of its movement. A creature, including the target, can take its action to detach the cloaker by succeeding on a DC 16 Strength check."},{"name":"Tail","text":"Melee Weapon Attack: +6 to hit, reach 10 ft., one creature. Hit: 7 (1d8 + 3) slashing damage."},{"name":"Moan","text":"Each creature within 60 feet of the cloaker that can hear its moan and that isn't an aberration must succeed on a DC 13 Wisdom saving throw or become frightened until the end of the cloaker's next turn. If a creature's saving throw is successful, the creature is immune to the cloaker's moan for the next 24 hours."},{"name":"Phantasms","text":"The cloaker magically creates three illusory duplicates of itself if it isn't in bright light. The duplicates move with it and mimic its actions, shifting position so as to make it impossible to track which cloaker is the real one. If the cloaker is ever in an area of bright light, the duplicates disappear.\nWhenever any creature targets the cloaker with an attack or a harmful spell while a duplicate remains, that creature rolls randomly to determine whether it targets the cloaker or one of the duplicates. A creature is unaffected by this magical effect if it can't see or if it relies on senses other than sight.\nA duplicate has the cloaker's AC and uses its saving throws. If an attack hits a duplicate, or if a duplicate fails a saving throw against an effect that deals damage, the duplicate disappears.","recharge":"Recharges after a Short or Long Rest"}]},{"name":"Cloud Giant","size":"Huge","type":"Giant","alignment":"neutral good (50%) or neutral evil (50%)","AC":"14 (natural armor)","HP":"200 (16d12+96)","speed":"40 ft.","strength":27,"dexterity":10,"constitution":22,"intelligence":12,"wisdom":16,"charisma":16,"savingThrows":"Con +10, Wis +7, Cha +7","skills":"Insight +7, Perception +7","languages":"Common, Giant","challenge":"9","traits":[{"name":"Keen Smell","text":"The giant has advantage on Wisdom (Perception) checks that rely on smell."},{"name":"Innate Spellcasting","text":"The giant's innate spellcasting ability is Charisma. It can innately cast the following spells, requiring no material components:\nAt will: detect magic, fog cloud, light\n3/day each: feather fall, fly, misty step, telekinesis\n1/day each: control weather, gaseous form"}],"actions":[{"name":"Multiattack","text":"The giant makes two morningstar attacks."},{"name":"Morningstar","text":"Melee Weapon Attack: +12 to hit, reach 10 ft., one target. Hit: 21 (3d8 + 8) piercing damage."},{"name":"Rock","text":"Ranged Weapon Attack: +12 to hit, range 60/240 ft., one target. Hit: 30 (4d10 + 8) bludgeoning damage."}],"spells":"detect magic, fog cloud, light, feather fall, fly, misty step, telekinesis, control weather, gaseous form"},{"name":"Cockatrice","size":"Small","type":"Monstrosity","alignment":"unaligned","AC":"11","HP":"27 (6d6+6)","speed":"20 ft., fly 40 ft.","strength":6,"dexterity":12,"constitution":12,"intelligence":2,"wisdom":13,"charisma":5,"senses":"darkvision 60 ft.","challenge":"1/2","actions":[{"name":"Bite","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one creature. Hit: 3 (1d4 + 1) piercing damage, and the target must succeed on a DC 11 Constitution saving throw against being magically petrified. On a failed save, the creature begins to turn to stone and is restrained. It must repeat the saving throw at the end of its next turn. On a success, the effect ends. On a failure, the creature is petrified for 24 hours."}]},{"name":"Commoner","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"10","HP":"4 (1d8)","speed":"30 ft.","strength":10,"dexterity":10,"constitution":10,"intelligence":10,"wisdom":10,"charisma":10,"languages":"any one language (usually Common)","challenge":"0","actions":[{"name":"Club","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one target. Hit: 2 (1d4) bludgeoning damage."}]},{"name":"Constrictor Snake","size":"Large","type":"Beast","alignment":"unaligned","AC":"12","HP":"13 (2d10+2)","speed":"30 ft., swim 30 ft.","strength":15,"dexterity":14,"constitution":12,"intelligence":1,"wisdom":10,"charisma":3,"senses":"blindsight 10 ft.","challenge":"1/4","actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 5 (1d6 + 2) piercing damage."},{"name":"Constrict","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 6 (1d8 + 2) bludgeoning damage, and the target is grappled (escape DC 14). Until this grapple ends, the creature is restrained, and the snake can't constrict another target."}]},{"name":"Copper Dragon Wyrmling","size":"Medium","type":"Dragon","alignment":"chaotic good","AC":"16 (natural armor)","HP":"22 (4d8+4)","speed":"30 ft., climb 30 ft., fly 60 ft.","strength":15,"dexterity":12,"constitution":13,"intelligence":14,"wisdom":11,"charisma":13,"savingThrows":"Dex +3, Con +3, Wis +2, Cha +3","skills":"Perception +4, Stealth +3","damageImmunities":"acid","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"Draconic","challenge":"1","actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (1d10 + 2) piercing damage."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Acid Breath","text":"The dragon exhales acid in an 20-foot line that is 5 feet wide. Each creature in that line must make a DC 11 Dexterity saving throw, taking 18 (4d8) acid damage on a failed save, or half as much damage on a successful one."},{"name":"Slowing Breath","text":"The dragon exhales gas in a 1 5-foot cone. Each creature in that area must succeed on a DC 11 Constitution saving throw. On a failed save, the creature can't use reactions, its speed is halved, and it can't make more than one attack on its turn. In addition, the creature can use either an action or a bonus action on its turn, but not both. These effects last for 1 minute. The creature can repeat the saving throw at the end of each of its turns, ending the effect on itself with a successful save."}]},{"name":"Couatl","size":"Medium","type":"Celestial","alignment":"lawful good","AC":"19 (natural armor)","HP":"97 (13d8+39)","speed":"30 ft., fly 90 ft.","strength":16,"dexterity":20,"constitution":17,"intelligence":18,"wisdom":20,"charisma":18,"savingThrows":"Con +5, Wis +7, Cha +6","damageResistances":"radiant","damageImmunities":"psychic; bludgeoning, piercing, and slashing from nonmagical attacks","senses":"truesight 120 ft.","languages":"all, telepathy 120 ft.","challenge":"4","traits":[{"name":"Innate Spellcasting","text":"The couatl's spellcasting ability is Charisma (spell save DC 14). It can innately cast the following spells, requiring only verbal components:\nAt will: detect evil and good, detect magic, detect thoughts\n3/day each: bless, create food and water, cure wounds, lesser restoration, protection from poison, sanctuary, shield\n1/day each: dream, greater restoration, scrying"},{"name":"Magic Weapons","text":"The couatl's weapon attacks are magical."},{"name":"Shielded Mind","text":"The couatl is immune to scrying and to any effect that would sense its emotions, read its thoughts, or detect its location."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one creature. Hit: 8 (1d6 + 5) piercing damage, and the target must succeed on a DC 13 Constitution saving throw or be poisoned for 24 hours. Until this poison ends, the target is unconscious. Another creature can use an action to shake the target awake."},{"name":"Constrict","text":"Melee Weapon Attack: +6 to hit, reach 10 ft., one Medium or smaller creature. Hit: 10 (2d6 + 3) bludgeoning damage, and the target is grappled (escape DC 15). Until this grapple ends, the target is restrained, and the couatl can't constrict another target."},{"name":"Change Shape","text":"The couatl magically polymorphs into a humanoid or beast that has a challenge rating equal to or less than its own, or back into its true form. It reverts to its true form if it dies. Any equipment it is wearing or carrying is absorbed or borne by the new form (the couatl's choice).\nIn a new form, the couatl retains its game statistics and ability to speak, but its AC, movement modes, Strength, Dexterity, and other actions are replaced by those of the new form, and it gains any statistics and capabilities (except class features, legendary actions, and lair actions) that the new form has but that it lacks. If the new form has a bite attack, the couatl can use its bite in that form."}],"spells":"detect evil and good, detect magic, detect thoughts, bless, create food and water, cure wounds, lesser restoration, protection from poison, sanctuary, shield, dream, greater restoration, scrying"},{"name":"Crab","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"11 (natural armor)","HP":"2 (1d4)","speed":"20 ft., swim 20 ft.","strength":2,"dexterity":11,"constitution":10,"intelligence":1,"wisdom":8,"charisma":2,"skills":"Stealth +2","senses":"blindsight 30 ft.","challenge":"0","traits":[{"name":"Amphibious","text":"The crab can breathe air and water."}],"actions":[{"name":"Claw","text":"Melee Weapon Attack: +0 to hit, reach 5 ft., one target. Hit: 1 bludgeoning damage."}]},{"name":"Crocodile","size":"Large","type":"Beast","alignment":"unaligned","AC":"12 (natural armor)","HP":"19 (3d10+3)","speed":"20 ft., swim 20 ft.","strength":15,"dexterity":10,"constitution":13,"intelligence":2,"wisdom":10,"charisma":5,"skills":"Stealth +2","challenge":"1/2","traits":[{"name":"Hold Breath","text":"The crocodile can hold its breath for 15 minutes."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 7 (1d10 + 2) piercing damage, and the target is grappled (escape DC 12). Until this grapple ends, the target is restrained, and the crocodile can't bite another target"}]},{"name":"Cult Fanatic","size":"Medium","type":"Humanoid (any race)","alignment":"any non-good alignment","AC":"13 (leather armor)","HP":"22 (6d8+6)","speed":"30 ft.","strength":11,"dexterity":14,"constitution":12,"intelligence":10,"wisdom":13,"charisma":14,"skills":"Deception +4, Persuasion +4, Religion +2","languages":"any one language (usually Common)","challenge":"2","traits":[{"name":"Dark Devotion","text":"The fanatic has advantage on saving throws against being charmed or frightened."},{"name":"Spellcasting","text":"The fanatic is a 4th-level spellcaster. Its spellcasting ability is Wisdom (spell save DC 11, +3 to hit with spell attacks). The fanatic has the following cleric spells prepared:\nCantrips (at will): light, sacred flame, thaumaturgy\n1st level (4 slots): command, inflict wounds, shield of faith\n2nd level (3 slots): hold person, spiritual weapon"}],"actions":[{"name":"Multiattack","text":"The fanatic makes two melee attacks."},{"name":"Dagger","text":"Melee or Ranged Weapon Attack: +4 to hit, reach 5 ft. or range 20/60 ft., one creature. Hit: 4 (1d4 + 2) piercing damage."}],"spells":"light, sacred flame, thaumaturgy, command, inflict wounds, shield of faith, hold person, spiritual weapon"},{"name":"Cultist","size":"Medium","type":"Humanoid (any race)","alignment":"any non-good alignment","AC":"12 (leather armor)","HP":"9 (2d8)","speed":"30 ft.","strength":11,"dexterity":12,"constitution":10,"intelligence":10,"wisdom":11,"charisma":10,"skills":"Deception +2, Religion +2","languages":"any one language (usually Common)","challenge":"1/8","traits":[{"name":"Dark Devotion","text":"The cultist has advantage on saving throws against being charmed or frightened."}],"actions":[{"name":"Scimitar","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one creature. Hit: 4 (1d6 + 1) slashing damage."}]},{"name":"Darkmantle","size":"Small","type":"Monstrosity","alignment":"unaligned","AC":"11","HP":"22 (5d6+5)","speed":"10 ft., fly 30 ft.","strength":16,"dexterity":12,"constitution":13,"intelligence":2,"wisdom":10,"charisma":5,"skills":"Stealth +3","senses":"blindsight 60 ft.","challenge":"1/2","traits":[{"name":"Echolocation","text":"The darkmantle can't use its blindsight while deafened."},{"name":"False Appearance","text":"While the darkmantle remains motionless, it is indistinguishable from a cave formation such as a stalactite or stalagmite."}],"actions":[{"name":"Crush","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one creature. Hit: 6 (1d6 + 3) bludgeoning damage, and the darkmantle attaches to the target. If the target is Medium or smaller and the darkmantle has advantage on the attack roll, it attaches by engulfing the target's head, and the target is also blinded and unable to breathe while the darkmantle is attached in this way.\nWhile attached to the target, the darkmantle can attack no other creature except the target but has advantage on its attack rolls. The darkmantle's speed also becomes 0, it can't benefit from any bonus to its speed, and it moves with the target.\nA creature can detach the darkmantle by making a successful DC 13 Strength check as an action. On its turn, the darkmantle can detach itself from the target by using 5 feet of movement."},{"name":"Darkness Aura","text":"A 15-foot radius of magical darkness extends out from the darkmantle, moves with it, and spreads around corners. The darkness lasts as long as the darkmantle maintains concentration, up to 10 minutes (as if concentrating on a spell). Darkvision can't penetrate this darkness, and no natural light can illuminate it. If any of the darkness overlaps with an area of light created by a spell of 2nd level or lower, the spell creating the light is dispelled.","recharge":"1/day"}]},{"name":"Death Dog","size":"Medium","type":"Monstrosity","alignment":"neutral evil","AC":"12","HP":"39 (6d8+12)","speed":"40 ft.","strength":15,"dexterity":14,"constitution":14,"intelligence":3,"wisdom":13,"charisma":6,"skills":"Perception +5, Stealth +4","senses":"darkvision 120 ft.","challenge":"1","traits":[{"name":"Two-Headed","text":"The dog has advantage on Wisdom (Perception) checks and on saving throws against being blinded, charmed, deafened, frightened, stunned, or knocked unconscious."}],"actions":[{"name":"Multiattack","text":"The dog makes two bite attacks."},{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage. If the target is a creature, it must succeed on a DC 12 Constitution saving throw against disease or become poisoned until the disease is cured. Every 24 hours that elapse, the creature must repeat the saving throw, reducing its hit point maximum by 5 (1d10) on a failure. This reduction lasts until the disease is cured. The creature dies if the disease reduces its hit point maximum to 0."}]},{"name":"Deep Gnome (Svirfneblin)","size":"Small","type":"Humanoid (gnome)","alignment":"neutral good","AC":"15 (chain shirt)","HP":"16 (3d6+6)","speed":"20 ft.","strength":15,"dexterity":14,"constitution":14,"intelligence":12,"wisdom":10,"charisma":9,"skills":"Investigation +3, Perception +2, Stealth +4","senses":"darkvision 120 ft.","languages":"Gnomish, Terran, Undercommon","challenge":"1/2","traits":[{"name":"Stone Camouflage","text":"The gnome has advantage on Dexterity (Stealth) checks made to hide in rocky terrain."},{"name":"Gnome Cunning","text":"The gnome has advantage on Intelligence, Wisdom, and Charisma saving throws against magic."},{"name":"Innate Spellcasting","text":"The gnome's innate spellcasting ability is Intelligence (spell save DC 11). It can innately cast the following spells, requiring no material components:\nAt will: nondetection (self only)\n1/day each: blindness/deafness, blur, disguise self"}],"actions":[{"name":"War Pick","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 6 (1d8 + 2) piercing damage."},{"name":"Poisoned Dart","text":"Ranged Weapon Attack: +4 to hit, range 30/120 ft., one creature. Hit: 4 (1d4 + 2) piercing damage, and the target must succeed on a DC 12 Constitution saving throw or be poisoned for 1 minute. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success"}],"spells":"nondetection, blindness/deafness, blur, disguise self"},{"name":"Deer","size":"Medium","type":"Beast","alignment":"unaligned","AC":"13","HP":"4 (1d8)","speed":"50 ft.","strength":11,"dexterity":16,"constitution":11,"intelligence":2,"wisdom":14,"charisma":5,"challenge":"0","actions":[{"name":"Bite","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one target. Hit: 2 (1d4) piercing damage."}]},{"name":"Deva","size":"Medium","type":"Celestial","alignment":"lawful good","AC":"17 (natural armor)","HP":"136 (16d8+64)","speed":"30 ft., fly 90 ft.","strength":18,"dexterity":18,"constitution":18,"intelligence":17,"wisdom":20,"charisma":20,"savingThrows":"Wis +9, Cha +9","skills":"Insight +9, Perception +9","damageResistances":"radiant; bludgeoning, piercing, and slashing from nonmagical attacks","conditionImmunities":"charmed, exhaustion, frightened","senses":"darkvision 120 ft.","languages":"all, telepathy 120 ft.","challenge":"10","traits":[{"name":"Angelic Weapons","text":"The deva's weapon attacks are magical. When the deva hits with any weapon, the weapon deals an extra 4d8 radiant damage (included in the attack)."},{"name":"Innate Spellcasting","text":"The deva's spellcasting ability is Charisma (spell save DC 17). The deva can innately cast the following spells, requiring only verbal components:\nAt will: detect evil and good\n1/day each: commune, raise dead"},{"name":"Magic Resistance","text":"The deva has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The deva makes two melee attacks."},{"name":"Mace","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one target. Hit: 7 (1d6 + 4) bludgeoning damage plus 18 (4d8) radiant damage."},{"name":"Healing Touch","text":"The deva touches another creature. The target magically regains 20 (4d8 + 2) hit points and is freed from any curse, disease, poison, blindness, or deafness.","recharge":"3/Day"},{"name":"Change Shape","text":"The deva magically polymorphs into a humanoid or beast that has a challenge rating equal to or less than its own, or back into its true form. It reverts to its true form if it dies. Any equipment it is wearing or carrying is absorbed or borne by the new form (the deva's choice).\nIn a new form, the deva retains its game statistics and ability to speak, but its AC, movement modes, Strength, Dexterity, and special senses are replaced by those of the new form, and it gains any statistics and capabilities (except class features, legendary actions, and lair actions) that the new form has but that it lacks."}],"spells":"detect evil and good, commune, raise dead"},{"name":"Dire Wolf","size":"Large","type":"Beast","alignment":"unaligned","AC":"14 (natural armor)","HP":"37 (5d10+10)","speed":"50 ft.","strength":17,"dexterity":15,"constitution":15,"intelligence":3,"wisdom":12,"charisma":7,"skills":"Perception +3, Stealth +4","challenge":"1","traits":[{"name":"Keen Hearing and Smell","text":"The wolf has advantage on Wisdom (Perception) checks that rely on hearing or smell."},{"name":"Pack Tactics","text":"The wolf has advantage on an attack roll against a creature if at least one of the wolf's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) piercing damage. If the target is a creature, it must succeed on a DC 13 Strength saving throw or be knocked prone."}]},{"name":"Djinni","size":"Large","type":"Elemental","alignment":"chaotic good","AC":"17 (natural armor)","HP":"161 (14d10+84)","speed":"30 ft., fly 90 ft.","strength":21,"dexterity":15,"constitution":22,"intelligence":15,"wisdom":16,"charisma":20,"savingThrows":"Dex +6, Wis +7, Cha +9","damageImmunities":"lightning, thunder","senses":"darkvision 120 ft.","languages":"Auran","challenge":"11","traits":[{"name":"Elemental Demise","text":"If the djinni dies, its body disintegrates into a warm breeze, leaving behind only equipment the djinni was wearing or carrying."},{"name":"Innate Spellcasting","text":"The djinni's innate spellcasting ability is Charisma (spell save DC 17, +9 to hit with spell attacks). It can innately cast the following spells, requiring no material components:\nAt will: detect evil and good, detect magic, thunderwave • 3/day each: create food and water (can create wine instead of water), tongues, wind walk\n1/day each: conjure elemental (air elemental only), creation, gaseous form, invisibility, major image, plane shift"},{"name":"Variant: Genie Powers","text":"Genies have a variety of magical capabilities, including spells. A few have even greater powers that allow them to alter their appearance or the nature of reality.\nDisguises. Some genies can veil themselves in illusion to pass as other similarly shaped creatures. Such genies can innately cast the disguise self spell at will, often with a longer duration than is normal for that spell. Mightier genies can cast the true polymorph spell one to three times per day, possibly with a longer duration than normal. Such genies can change only their own shape, but a rare few can use the spell on other creatures and objects as well.\nWishes. The genie power to grant wishes is legendary among mortals. Only the most potent genies, such as those among the nobility, can do so. A particular genie that has this power can grant one to three wishes to a creature that isn't a genie. Once a genie has granted its limit of wishes, it can't grant wishes again for some amount of time (usually 1 year). and cosmic law dictates that the same genie can expend its limit of wishes on a specific creature only once in that creature's existence.\nTo be granted a wish, a creature within 60 feet of the genie states a desired effect to it. The genie can then cast the wish spell on the creature's behalf to bring about the effect. Depending on the genie's nature, the genie might try to pervert the intent of the wish by exploiting the wish's poor wording. The perversion of the wording is usually crafted to be to the genie's benefit."}],"actions":[{"name":"Multiattack","text":"The djinni makes three scimitar attacks."},{"name":"Scimitar","text":"Melee Weapon Attack: +9 to hit, reach 5 ft., one target. Hit: 12 (2d6 + 5) slashing damage plus 3 (1d6) lightning or thunder damage (djinni's choice)."},{"name":"Create Whirlwind","text":"A 5-foot-radius, 30-foot-tall cylinder of swirling air magically forms on a point the djinni can see within 120 feet of it. The whirlwind lasts as long as the djinni maintains concentration (as if concentrating on a spell). Any creature but the djinni that enters the whirlwind must succeed on a DC 18 Strength saving throw or be restrained by it. The djinni can move the whirlwind up to 60 feet as an action, and creatures restrained by the whirlwind move with it. The whirlwind ends if the djinni loses sight of it.\nA creature can use its action to free a creature restrained by the whirlwind, including itself, by succeeding on a DC 18 Strength check. If the check succeeds, the creature is no longer restrained and moves to the nearest space outside the whirlwind."}],"spells":"detect evil and good, detect magic, thunderwave, conjure elemental, creation, gaseous form, invisibility, major image, plane shift"},{"name":"Doppelganger","size":"Medium","type":"Monstrosity (shapechanger)","alignment":"unaligned","AC":"14","HP":"52 (8d8+16)","speed":"30 ft.","strength":11,"dexterity":18,"constitution":14,"intelligence":11,"wisdom":12,"charisma":14,"skills":"Deception +6, Insight +3","damageImmunities":"charmed","senses":"darkvision 60 ft.","languages":"Common","challenge":"3","traits":[{"name":"Shapechanger","text":"The doppelganger can use its action to polymorph into a Small or Medium humanoid it has seen, or back into its true form. Its statistics, other than its size, are the same in each form. Any equipment it is wearing or carrying isn't transformed. It reverts to its true form if it dies."},{"name":"Ambusher","text":"The doppelganger has advantage on attack rolls against any creature it has surprised."},{"name":"Surprise Attack","text":"If the doppelganger surprises a creature and hits it with an attack during the first round of combat, the target takes an extra 10 (3d6) damage from the attack."}],"actions":[{"name":"Multiattack","text":"The doppelganger makes two melee attacks."},{"name":"Slam","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 7 (1d6 + 4) bludgeoning damage."},{"name":"Read Thoughts","text":"The doppelganger magically reads the surface thoughts of one creature within 60 ft. of it. The effect can penetrate barriers, but 3 ft. of wood or dirt, 2 ft. of stone, 2 inches of metal, or a thin sheet of lead blocks it. While the target is in range, the doppelganger can continue reading its thoughts, as long as the doppelganger's concentration isn't broken (as if concentrating on a spell). While reading the target's mind, the doppelganger has advantage on Wisdom (Insight) and Charisma (Deception, Intimidation, and Persuasion) checks against the target."}]},{"name":"Draft Horse","size":"Large","type":"Beast","alignment":"unaligned","AC":"10","HP":"19 (3d10+3)","speed":"40 ft.","strength":18,"dexterity":10,"constitution":12,"intelligence":2,"wisdom":11,"charisma":7,"challenge":"1/4","actions":[{"name":"Hooves","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 9 (2d4 + 4) bludgeoning damage."}]},{"name":"Dragon Turtle","size":"Gargantuan","type":"Dragon","alignment":"neutral","AC":"20 (natural armor)","HP":"341 (22d20+10)","speed":"20 ft., swim 40 ft.","strength":25,"dexterity":10,"constitution":20,"intelligence":10,"wisdom":12,"charisma":12,"savingThrows":"Dex +6, Con +11, Wis +7","damageResistances":"fire","senses":"darkvision 120 ft.","languages":"Aquan, Draconic","challenge":"17","traits":[{"name":"Amphibious","text":"The dragon turtle can breathe air and water."}],"actions":[{"name":"Multiattack","text":"The dragon turtle makes three attacks: one with its bite and two with its claws. It can make one tail attack in place of its two claw attacks."},{"name":"Bite","text":"Melee Weapon Attack: +13 to hit, reach 15 ft., one target. Hit: 26 (3d12 + 7) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +13 to hit, reach 10 ft., one target. Hit: 16 (2d8 + 7) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +13 to hit, reach 15 ft., one target. Hit: 26 (3d12 + 7) bludgeoning damage. If the target is a creature, it must succeed on a DC 20 Strength saving throw or be pushed up to 10 feet away from the dragon turtle and knocked prone."},{"name":"Steam Breath","text":"The dragon turtle exhales scalding steam in a 60-foot cone. Each creature in that area must make a DC 18 Constitution saving throw, taking 52 (15d6) fire damage on a failed save, or half as much damage on a successful one. Being underwater doesn't grant resistance against this damage.","recharge":"Recharge 5-6"}]},{"name":"Dretch","size":"Small","type":"Fiend (demon)","alignment":"chaotic evil","AC":"11 (natural armor)","HP":"18 (4d6+4)","speed":"20 ft.","strength":11,"dexterity":11,"constitution":12,"intelligence":5,"wisdom":8,"charisma":3,"damageResistances":"cold, fire, lightning","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"Abyssal, telepathy 60 ft. (works only with creatures that understand Abyssal)","challenge":"1/4","actions":[{"name":"Multiattack","text":"The dretch makes two attacks: one with its bite and one with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one target. Hit: 3 (1d6) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one target. Hit: 5 (2d4) slashing damage."},{"name":"Fetid Cloud","text":"A 10-foot radius of disgusting green gas extends out from the dretch. The gas spreads around corners, and its area is lightly obscured. It lasts for 1 minute or until a strong wind disperses it. Any creature that starts its turn in that area must succeed on a DC 11 Constitution saving throw or be poisoned until the start of its next turn. While poisoned in this way, the target can take either an action or a bonus action on its turn, not both, and can't take reactions.","recharge":"1/Day"}]},{"name":"Drider","size":"Large","type":"Monstrosity","alignment":"chaotic evil","AC":"19 (natural armor)","HP":"123 (13d10+52)","speed":"30 ft., climb 30 ft.","strength":16,"dexterity":16,"constitution":18,"intelligence":13,"wisdom":14,"charisma":12,"skills":"Perception +5, Stealth +9","senses":"darkvision 120 ft.","languages":"Elvish, Undercommon","challenge":"6","traits":[{"name":"Fey Ancestry","text":"The drider has advantage on saving throws against being charmed, and magic can't put the drider to sleep."},{"name":"Innate Spellcasting","text":"The drider's innate spellcasting ability is Wisdom (spell save DC 13). The drider can innately cast the following spells, requiring no material components:\nAt will: dancing lights\n1/day each: darkness, faerie fire"},{"name":"Spider Climb","text":"The drider can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."},{"name":"Sunlight Sensitivity","text":"While in sunlight, the drider has disadvantage on attack rolls, as well as on Wisdom (Perception) checks that rely on sight."},{"name":"Web Walker","text":"The drider ignores movement restrictions caused by webbing."}],"actions":[{"name":"Multiattack","text":"The drider makes three attacks, either with its longsword or its longbow. It can replace one of those attacks with a bite attack."},{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one creature. Hit: 2 (1d4) piercing damage plus 9 (2d8) poison damage."},{"name":"Longsword","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 7 (1d8 + 3) slashing damage, or 8 (1d10 + 3) slashing damage if used with two hands."},{"name":"Longbow","text":"Ranged Weapon Attack: +6 to hit, range 150/600 ft., one target. Hit: 7 (1d8 + 3) piercing damage plus 4 (1d8) poison damage."}],"spells":"dancing lights, darkness, faerie fire"},{"name":"Drow","size":"Medium","type":"Humanoid (elf)","alignment":"neutral evil","AC":"15 (chain shirt)","HP":"13 (3d8)","speed":"30 ft.","strength":10,"dexterity":14,"constitution":10,"intelligence":11,"wisdom":11,"charisma":12,"skills":"Perception +2, Stealth +4","senses":"darkvision 120 ft.","languages":"Elvish, Undercommon","challenge":"1/4","traits":[{"name":"Fey Ancestry","text":"The drow has advantage on saving throws against being charmed, and magic can't put the drow to sleep."},{"name":"Innate Spellcasting","text":"The drow's spellcasting ability is Charisma (spell save DC 11). It can innately cast the following spells, requiring no material components:\nAt will: dancing lights\n1/day each: darkness, faerie fire"},{"name":"Sunlight Sensitivity","text":"While in sunlight, the drow has disadvantage on attack rolls, as well as on Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Shortsword","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage."},{"name":"Hand Crossbow","text":"Ranged Weapon Attack: +4 to hit, range 30/120 ft., one target. Hit: 5 (1d6 + 2) piercing damage, and the target must succeed on a DC 13 Constitution saving throw or be poisoned for 1 hour. If the saving throw fails by 5 or more, the target is also unconscious while poisoned in this way. The target wakes up if it takes damage or if another creature takes an action to shake it awake."}],"spells":"dancing lights, darkness, faerie fire"},{"name":"Druid","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"11 (16 with barkskin)","HP":"27 (5d8+5)","speed":"30 ft.","strength":10,"dexterity":12,"constitution":13,"intelligence":12,"wisdom":15,"charisma":11,"skills":"Medicine +4, Nature +3, Perception +4","languages":"Druidic plus any two languages","challenge":"2","traits":[{"name":"Spellcasting","text":"The druid is a 4th-level spellcaster. Its spellcasting ability is Wisdom (spell save DC 12, +4 to hit with spell attacks). It has the following druid spells prepared:\nCantrips (at will): druidcraft, produce flame, shillelagh\n1st level (4 slots): entangle, longstrider, speak with animals, thunderwave\n2nd level (3 slots): animal messenger, barkskin"}],"actions":[{"name":"Quarterstaff","text":"Melee Weapon Attack: +2 to hit (+4 to hit with shillelagh), reach 5 ft., one target. Hit: 3 (1d6) bludgeoning damage, or 6 (1d8 + 2) bludgeoning damage with shillelagh or if wielded with two hands."}],"spells":"druidcraft, produce flame, shillelagh, entangle, longstrider, speak with animals, thunderwave, animal messenger, barkskin"},{"name":"Dryad","size":"Medium","type":"Fey","alignment":"neutral","AC":"11 (16 with barkskin)","HP":"22 (5d8)","speed":"30 ft.","strength":10,"dexterity":12,"constitution":11,"intelligence":14,"wisdom":15,"charisma":18,"skills":"Perception +4, Stealth +5","senses":"darkvision 60 ft.","languages":"Elvish, Sylvan","challenge":"1","traits":[{"name":"Innate Spellcasting","text":"The dryad's innate spellcasting ability is Charisma (spell save DC 14). The dryad can innately cast the following spells, requiring no material components:\nAt will: druidcraft\n3/day each: entangle, goodberry\n1/day each: barkskin, pass without trace, shillelagh"},{"name":"Magic Resistance","text":"The dryad has advantage on saving throws against spells and other magical effects."},{"name":"Speak with Beasts and Plants","text":"The dryad can communicate with beasts and plants as if they shared a language."},{"name":"Tree Stride","text":"Once on her turn, the dryad can use 10 ft. of her movement to step magically into one living tree within her reach and emerge from a second living tree within 60 ft. of the first tree, appearing in an unoccupied space within 5 ft. of the second tree. Both trees must be large or bigger."}],"actions":[{"name":"Club","text":"Melee Weapon Attack: +2 to hit (+6 to hit with shillelagh), reach 5 ft., one target. Hit: 2 (1 d4) bludgeoning damage, or 8 (1d8 + 4) bludgeoning damage with shillelagh."},{"name":"Fey Charm","text":"The dryad targets one humanoid or beast that she can see within 30 feet of her. If the target can see the dryad, it must succeed on a DC 14 Wisdom saving throw or be magically charmed. The charmed creature regards the dryad as a trusted friend to be heeded and protected. Although the target isn't under the dryad's control, it takes the dryad's requests or actions in the most favorable way it can.\nEach time the dryad or its allies do anything harmful to the target, it can repeat the saving throw, ending the effect on itself on a success. Otherwise, the effect lasts 24 hours or until the dryad dies, is on a different plane of existence from the target, or ends the effect as a bonus action. If a target's saving throw is successful, the target is immune to the dryad's Fey Charm for the next 24 hours.\nThe dryad can have no more than one humanoid and up to three beasts charmed at a time."}],"spells":"druidcraft, entangle, goodberry, barkskin, pass without trace, shillelagh"},{"name":"Duergar","size":"Medium","type":"Humanoid (dwarf)","alignment":"lawful evil","AC":"16 (scale mail, shield)","HP":"26 (4d8+4)","speed":"25 ft.","strength":14,"dexterity":11,"constitution":14,"intelligence":11,"wisdom":10,"charisma":9,"damageResistances":"poison","senses":"darkvision 120 ft.","languages":"Dwarvish, Undercommon","challenge":"1","traits":[{"name":"Duergar Resilience","text":"The duergar has advantage on saving throws against poison, spells, and illusions, as well as to resist being charmed or paralyzed."},{"name":"Sunlight Sensitivity","text":"While in sunlight, the duergar has disadvantage on attack rolls, as well as on Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Enlarge","text":"For 1 minute, the duergar magically increases in size, along with anything it is wearing or carrying. While enlarged, the duergar is Large, doubles its damage dice on Strength-based weapon attacks (included in the attacks), and makes Strength checks and Strength saving throws with advantage. If the duergar lacks the room to become Large, it attains the maximum size possible in the space available.","recharge":"Recharges after a Short or Long Rest"},{"name":"War Pick","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 6 (1d8 + 2) piercing damage, or 11 (2d8 + 2) piercing damage while enlarged."},{"name":"Javelin","text":"Melee or Ranged Weapon Attack: +4 to hit, reach 5 ft. or range 30/120 ft., one target. Hit: 5 (1d6 + 2) piercing damage, or 9 (2d6 + 2) piercing damage while enlarged."},{"name":"Invisibility","text":"The duergar magically turns invisible until it attacks, casts a spell, or uses its Enlarge, or until its concentration is broken, up to 1 hour (as if concentrating on a spell). Any equipment the duergar wears or carries is invisible with it .","recharge":"Recharges after a Short or Long Rest"}]},{"name":"Dust Mephit","size":"Small","type":"Elemental","alignment":"neutral evil","AC":"12","HP":"17 (5d6)","speed":"30 ft., fly 30 ft.","strength":5,"dexterity":14,"constitution":10,"intelligence":9,"wisdom":11,"charisma":10,"skills":"Perception +2, Stealth +4","damageVulnerabilities":"fire","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"Auran, Terran","challenge":"1/2","traits":[{"name":"Death Burst","text":"When the mephit dies, it explodes in a burst of dust. Each creature within 5 ft. of it must then succeed on a DC 10 Constitution saving throw or be blinded for 1 minute. A blinded creature can repeat the saving throw on each of its turns, ending the effect on itself on a success."},{"name":"Innate Spellcasting","text":"The mephit can innately cast sleep, requiring no material components. Its innate spellcasting ability is Charisma.","recharge":"1/Day"}],"actions":[{"name":"Claws","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 4 (1d4 + 2) slashing damage."},{"name":"Blinding Breath","text":"The mephit exhales a 15-foot cone of blinding dust. Each creature in that area must succeed on a DC 10 Dexterity saving throw or be blinded for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success.","recharge":"Recharge 6"},{"name":"Variant: Summon Mephits","text":"The mephit has a 25 percent chance of summoning 1d4 mephits of its kind. A summoned mephit appears in an unoccupied space within 60 feet of its summoner, acts as an ally of its summoner, and can't summon other mephits. It remains for 1 minute, until it or its summoner dies, or until its summoner dismisses it as an action.","recharge":"1/Day"}]},{"name":"Eagle","size":"Small","type":"Beast","alignment":"unaligned","AC":"12","HP":"3 (1d6)","speed":"10 ft., fly 60 ft.","strength":6,"dexterity":15,"constitution":10,"intelligence":2,"wisdom":14,"charisma":7,"skills":"Perception +4","challenge":"0","traits":[{"name":"Keen Sight","text":"The eagle has advantage on Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Talons","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 4 (1d4 + 2) slashing damage."}]},{"name":"Earth Elemental","size":"Large","type":"Elemental","alignment":"neutral","AC":"17 (natural armor)","HP":"126 (12d10+60)","speed":"30 ft., burrow 30 ft.","strength":20,"dexterity":8,"constitution":20,"intelligence":5,"wisdom":10,"charisma":5,"damageResistances":"bludgeoning, piercing, and slashing from nonmagical attacks","damageVulnerabilities":"thunder","damageImmunities":"poison","conditionImmunities":"exhaustion, paralyzed, petrified, poisoned, unconscious","senses":"darkvision 60 ft., tremorsense 60 ft.","languages":"Terran","challenge":"5","traits":[{"name":"Earth Glide","text":"The elemental can burrow through nonmagical, unworked earth and stone. While doing so, the elemental doesn't disturb the material it moves through."},{"name":"Siege Monster","text":"The elemental deals double damage to objects and structures."}],"actions":[{"name":"Multiattack","text":"The elemental makes two slam attacks."},{"name":"Slam","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one target. Hit: 14 (2d8 + 5) bludgeoning damage."}]},{"name":"Efreeti","size":"Large","type":"Elemental","alignment":"lawful evil","AC":"17 (natural armor)","HP":"200 (16d10+112)","speed":"40 ft., fly 60 ft.","strength":22,"dexterity":12,"constitution":24,"intelligence":16,"wisdom":15,"charisma":16,"savingThrows":"Int +7, Wis +6, Cha +7","damageImmunities":"fire","senses":"darkvision 120 ft.","languages":"Ignan","challenge":"11","traits":[{"name":"Elemental Demise","text":"If the efreeti dies, its body disintegrates in a flash of fire and puff of smoke, leaving behind only equipment the djinni was wearing or carrying."},{"name":"Innate Spellcasting","text":"The efreeti's innate spellcasting ability is Charisma (spell save DC 15, +7 to hit with spell attacks). It can innately cast the following spells, requiring no material components:\nAt will: detect magic\n3/day: enlarge/reduce, tongues\n1/day each: conjure elemental (fire elemental only), gaseous form, invisibility, major image, plane shift, wall of fire"},{"name":"Variant: Genie Powers","text":"Genies have a variety of magical capabilities, including spells. A few have even greater powers that allow them to alter their appearance or the nature of reality.\nDisguises. Some genies can veil themselves in illusion to pass as other similarly shaped creatures. Such genies can innately cast the disguise self spell at will, often with a longer duration than is normal for that spell. Mightier genies can cast the true polymorph spell one to three times per day, possibly with a longer duration than normal. Such genies can change only their own shape, but a rare few can use the spell on other creatures and objects as well.\nWishes. The genie power to grant wishes is legendary among mortals. Only the most potent genies, such as those among the nobility, can do so. A particular genie that has this power can grant one to three wishes to a creature that isn't a genie. Once a genie has granted its limit of wishes, it can't grant wishes again for some amount of time (usually 1 year). and cosmic law dictates that the same genie can expend its limit of wishes on a specific creature only once in that creature's existence.\nTo be granted a wish, a creature within 60 feet of the genie states a desired effect to it. The genie can then cast the wish spell on the creature's behalf to bring about the effect. Depending on the genie's nature, the genie might try to pervert the intent of the wish by exploiting the wish's poor wording. The perversion of the wording is usually crafted to be to the genie's benefit."}],"actions":[{"name":"Multiattack","text":"The efreeti makes two scimitar attacks or uses its Hurl Flame twice."},{"name":"Scimitar","text":"Melee Weapon Attack: +10 to hit, reach 5 ft., one target. Hit: 13 (2d6 + 6) slashing damage plus 7 (2d6) fire damage."},{"name":"Hurl Flame","text":"Ranged Spell Attack: +7 to hit, range 120 ft., one target. Hit: 17 (5d6) fire damage."}],"spells":"detect magic, enlarge/reduce, tongues, conjure elemental, gaseous form, invisibility, major image, plane shift, wall of fire"},{"name":"Elephant","size":"Huge","type":"Beast","alignment":"unaligned","AC":"12 (natural armor)","HP":"76 (8d12+24)","speed":"40 ft.","strength":22,"dexterity":9,"constitution":17,"intelligence":3,"wisdom":11,"charisma":6,"challenge":"4","traits":[{"name":"Trampling Charge","text":"If the elephant moves at least 20 ft. straight toward a creature and then hits it with a gore attack on the same turn, that target must succeed on a DC 12 Strength saving throw or be knocked prone. If the target is prone, the elephant can make one stomp attack against it as a bonus action."}],"actions":[{"name":"Gore","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one target. Hit: 19 (3d8 + 6) piercing damage."},{"name":"Stomp","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one prone creature. Hit: 22 (3d10 + 6) bludgeoning damage."}]},{"name":"Elk","size":"Large","type":"Beast","alignment":"unaligned","AC":"10","HP":"13 (2d10+2)","speed":"50 ft.","strength":16,"dexterity":10,"constitution":12,"intelligence":2,"wisdom":10,"charisma":6,"challenge":"1/4","traits":[{"name":"Charge","text":"If the elk moves at least 20 ft. straight toward a target and then hits it with a ram attack on the same turn, the target takes an extra 7 (2d6) damage. If the target is a creature, it must succeed on a DC 13 Strength saving throw or be knocked prone."}],"actions":[{"name":"Ram","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) bludgeoning damage."},{"name":"Hooves","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one prone creature. Hit: 8 (2d4 + 3) bludgeoning damage."}]},{"name":"Erinyes","size":"Medium","type":"Fiend (devil)","alignment":"lawful evil","AC":"18 (plate)","HP":"153 (18d8+72)","speed":"30 ft., fly 60 ft.","strength":18,"dexterity":16,"constitution":18,"intelligence":14,"wisdom":14,"charisma":18,"savingThrows":"Dex +7, Con +8, Wis +6, Cha +8","damageResistances":"cold; bludgeoning, piercing, and slashing from nonmagical attacks that aren't silvered","damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"truesight 120 ft.","languages":"Infernal, telepathy 120 ft.","challenge":"12","traits":[{"name":"Hellish Weapons","text":"The erinyes's weapon attacks are magical and deal an extra 13 (3d8) poison damage on a hit (included in the attacks)."},{"name":"Magic Resistance","text":"The erinyes has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The erinyes makes three attacks"},{"name":"Longsword","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one target. Hit: 8 (1d8 + 4) slashing damage, or 9 (1d10 + 4) slashing damage if used with two hands, plus 13 (3d8) poison damage."},{"name":"Longbow","text":"Ranged Weapon Attack: +7 to hit, range 150/600 ft., one target. Hit: 7 (1d8 + 3) piercing damage plus 13 (3d8) poison damage, and the target must succeed on a DC 14 Constitution saving throw or be poisoned. The poison lasts until it is removed by the lesser restoration spell or similar magic."},{"name":"Variant: Rope of Entanglement","text":"Some erinyes carry a rope of entanglement (detailed in the Dungeon Master's Guide). When such an erinyes uses its Multiattack, the erinyes can use the rope in place of two of the attacks."}],"reactions":[{"name":"Parry","text":"The erinyes adds 4 to its AC against one melee attack that would hit it. To do so, the erinyes must see the attacker and be wielding a melee weapon."}]},{"name":"Ettercap","size":"Medium","type":"Monstrosity","alignment":"neutral evil","AC":"13 (natural armor)","HP":"44 (8d8+8)","speed":"30 ft., climb 30 ft.","strength":14,"dexterity":15,"constitution":13,"intelligence":7,"wisdom":12,"charisma":8,"skills":"Perception +3, Stealth +4, Survival +3","senses":"darkvision 60 ft.","challenge":"2","traits":[{"name":"Spider Climb","text":"The ettercap can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."},{"name":"Web Sense","text":"While in contact with a web, the ettercap knows the exact location of any other creature in contact with the same web."},{"name":"Web Walker","text":"The ettercap ignores movement restrictions caused by webbing."}],"actions":[{"name":"Multiattack","text":"The ettercap makes two attacks: one with its bite and one with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 6 (1d8 + 2) piercing damage plus 4 (1d8) poison damage. The target must succeed on a DC 11 Constitution saving throw or be poisoned for 1 minute. The creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."},{"name":"Claws","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (2d4 + 2) slashing damage."},{"name":"Web","text":"Ranged Weapon Attack: +4 to hit, range 30/60 ft., one Large or smaller creature. Hit: The creature is restrained by webbing. As an action, the restrained creature can make a DC 11 Strength check, escaping from the webbing on a success. The effect ends if the webbing is destroyed. The webbing has AC 10, 5 hit points, is vulnerable to fire damage and immune to bludgeoning damage, and immunity to poison and psychic damage.","recharge":"Recharge 5-6"},{"name":"Variant: Web Garrote","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one Medium or Small creature against which the ettercap has advantage on the attack roll. Hit: 4 (1d4 + 2) bludgeoning damage, and the target is grappled (escape DC 12). Until this grapple ends, the target can't breathe, and the ettercap has advantage on attack rolls against it."}]},{"name":"Ettin","size":"Large","type":"Giant","alignment":"chaotic evil","AC":"12 (natural armor)","HP":"85 (10d10+30)","speed":"40 ft.","strength":21,"dexterity":8,"constitution":17,"intelligence":6,"wisdom":10,"charisma":8,"skills":"Perception +4","senses":"darkvision 60 ft.","languages":"Giant, Orc","challenge":"4","traits":[{"name":"Two Heads","text":"The ettin has advantage on Wisdom (Perception) checks and on saving throws against being blinded, charmed, deafened, frightened, stunned, and knocked unconscious."},{"name":"Wakeful","text":"When one of the ettin's heads is asleep, its other head is awake."}],"actions":[{"name":"Multiattack","text":"The ettin makes two attacks: one with its battleaxe and one with its morningstar."},{"name":"Battleaxe","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 14 (2d8 + 5) slashing damage."},{"name":"Morningstar","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 14 (2d8 + 5) piercing damage."}]},{"name":"Fire Elemental","size":"Large","type":"Elemental","alignment":"neutral","AC":"13","HP":"102 (12d10+36)","speed":"50 ft.","strength":10,"dexterity":17,"constitution":16,"intelligence":6,"wisdom":10,"charisma":7,"damageResistances":"bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"fire, poison","conditionImmunities":"exhaustion, grappled, paralyzed, petrified, poisoned, prone, restrained, unconscious","senses":"darkvision 60 ft.","languages":"Ignan","challenge":"5","traits":[{"name":"Fire Form","text":"The elemental can move through a space as narrow as 1 inch wide without squeezing. A creature that touches the elemental or hits it with a melee attack while within 5 ft. of it takes 5 (1d10) fire damage. In addition, the elemental can enter a hostile creature's space and stop there. The first time it enters a creature's space on a turn, that creature takes 5 (1d10) fire damage and catches fire; until someone takes an action to douse the fire, the creature takes 5 (1d10) fire damage at the start of each of its turns."},{"name":"Illumination","text":"The elemental sheds bright light in a 30-foot radius and dim light in an additional 30 ft.."},{"name":"Water Susceptibility","text":"For every 5 ft. the elemental moves in water, or for every gallon of water splashed on it, it takes 1 cold damage."}],"actions":[{"name":"Multiattack","text":"The elemental makes two touch attacks."},{"name":"Touch","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) fire damage. If the target is a creature or a flammable object, it ignites. Until a creature takes an action to douse the fire, the target takes 5 (1d10) fire damage at the start of each of its turns."}]},{"name":"Fire Giant","size":"Huge","type":"Giant","alignment":"lawful evil","AC":"18 (plate)","HP":"162 (13d12+78)","speed":"30 ft.","strength":25,"dexterity":9,"constitution":23,"intelligence":10,"wisdom":14,"charisma":13,"savingThrows":"Dex +3, Con +10, Cha +5","skills":"Athletics +11, Perception +6","damageImmunities":"fire","languages":"Giant","challenge":"9","actions":[{"name":"Multiattack","text":"The giant makes two greatsword attacks."},{"name":"Greatsword","text":"Melee Weapon Attack: +11 to hit, reach 10 ft., one target. Hit: 28 (6d6 + 7) slashing damage."},{"name":"Rock","text":"Ranged Weapon Attack: +11 to hit, range 60/240 ft., one target. Hit: 29 (4d10 + 7) bludgeoning damage."}]},{"name":"Flesh Golem","size":"Medium","type":"Construct","alignment":"neutral","AC":"9","HP":"93 (11d8+44)","speed":"30 ft.","strength":19,"dexterity":9,"constitution":18,"intelligence":6,"wisdom":10,"charisma":5,"damageImmunities":"lightning, poison; bludgeoning, piercing, and slashing from nonmagical attacks that aren't adamantine","conditionImmunities":"charmed, exhaustion, frightened, paralyzed, petrified, poisoned","senses":"darkvision 60 ft.","languages":"understands the languages of its creator but can't speak","challenge":"5","traits":[{"name":"Berserk","text":"Whenever the golem starts its turn with 40 hit points or fewer, roll a d6. On a 6, the golem goes berserk. On each of its turns while berserk, the golem attacks the nearest creature it can see. If no creature is near enough to move to and attack, the golem attacks an object, with preference for an object smaller than itself. Once the golem goes berserk, it continues to do so until it is destroyed or regains all its hit points.\nThe golem's creator, if within 60 feet of the berserk golem, can try to calm it by speaking firmly and persuasively. The golem must be able to hear its creator, who must take an action to make a DC 15 Charisma (Persuasion) check. If the check succeeds, the golem ceases being berserk. If it takes damage while still at 40 hit points or fewer, the golem might go berserk again."},{"name":"Aversion of Fire","text":"If the golem takes fire damage, it has disadvantage on attack rolls and ability checks until the end of its next turn."},{"name":"Immutable Form","text":"The golem is immune to any spell or effect that would alter its form."},{"name":"Lightning Absorption","text":"Whenever the golem is subjected to lightning damage, it takes no damage and instead regains a number of hit points equal to the lightning damage dealt."},{"name":"Magic Resistance","text":"The golem has advantage on saving throws against spells and other magical effects."},{"name":"Magic Weapons","text":"The golem's weapon attacks are magical."}],"actions":[{"name":"Multiattack","text":"The golem makes two slam attacks."},{"name":"Slam","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) bludgeoning damage."}]},{"name":"Flying Snake","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"14","HP":"5 (2d4)","speed":"30 ft., fly 60 ft., swim 30 ft.","strength":4,"dexterity":18,"constitution":11,"intelligence":2,"wisdom":12,"charisma":5,"senses":"blindsight 10 ft.","challenge":"1/8","traits":[{"name":"Flyby","text":"The snake doesn't provoke opportunity attacks when it flies out of an enemy's reach."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 1 piercing damage plus 7 (3d4) poison damage."}]},{"name":"Flying Sword","size":"Small","type":"Construct","alignment":"unaligned","AC":"17 (natural armor)","HP":"17 (5d6)","speed":"0 ft., fly 50 ft. (hover)","strength":12,"dexterity":15,"constitution":11,"intelligence":1,"wisdom":5,"charisma":1,"savingThrows":"Dex +4","damageImmunities":"poison, psychic","conditionImmunities":"blinded, charmed, deafened, frightened, paralyzed, petrified, poisoned","senses":"blindsight 60 ft. (blind beyond this radius)","challenge":"1/4","traits":[{"name":"Antimagic Susceptibility","text":"The sword is incapacitated while in the area of an antimagic field. If targeted by dispel magic, the sword must succeed on a Constitution saving throw against the caster's spell save DC or fall unconscious for 1 minute."},{"name":"False Appearance","text":"While the sword remains motionless and isn't flying, it is indistinguishable from a normal sword."}],"actions":[{"name":"Longsword","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 5 (1d8 + 1) slashing damage."}]},{"name":"Frog","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"11","HP":"1 (1d4-1)","speed":"20 ft., swim 20 ft.","strength":1,"dexterity":13,"constitution":8,"intelligence":1,"wisdom":8,"charisma":3,"skills":"Perception +1, Stealth +3","senses":"darkvision 30 ft.","challenge":"0","traits":[{"name":"Amphibious","text":"The frog can breathe air and water"},{"name":"Standing Leap","text":"The frog's long jump is up to 10 ft. and its high jump is up to 5 ft., with or without a running start."}]},{"name":"Frost Giant","size":"Huge","type":"Giant","alignment":"neutral evil","AC":"15 (patchwork armor)","HP":"138 (12d12+60)","speed":"40 ft.","strength":23,"dexterity":9,"constitution":21,"intelligence":9,"wisdom":10,"charisma":12,"savingThrows":"Con +8, Wis +3, Cha +4","skills":"Athletics +9, Perception +3","damageImmunities":"cold","languages":"Giant","challenge":"8","actions":[{"name":"Multiattack","text":"The giant makes two greataxe attacks."},{"name":"Greataxe","text":"Melee Weapon Attack: +9 to hit, reach 10 ft., one target. Hit: 25 (3d12 + 6) slashing damage."},{"name":"Rock","text":"Ranged Weapon Attack: +9 to hit, range 60/240 ft., one target. Hit: 28 (4d10 + 6) bludgeoning damage."}]},{"name":"Gargoyle","size":"Medium","type":"Elemental","alignment":"chaotic evil","AC":"15 (natural armor)","HP":"52 (7d8+21)","speed":"30 ft., fly 60 ft.","strength":15,"dexterity":11,"constitution":16,"intelligence":6,"wisdom":11,"charisma":7,"damageResistances":"bludgeoning, piercing, and slashing from nonmagical attacks that aren't adamantine","damageImmunities":"poison","conditionImmunities":"exhaustion, petrified, poisoned","senses":"darkvision 60 ft.","languages":"Terran","challenge":"2","traits":[{"name":"False Appearance","text":"While the gargoyle remains motion less, it is indistinguishable from an inanimate statue."}],"actions":[{"name":"Multiattack","text":"The gargoyle makes two attacks: one with its bite and one with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) slashing damage."}]},{"name":"Gelatinous Cube","size":"Large","type":"Ooze","alignment":"unaligned","AC":"6","HP":"84 (8d10+40)","speed":"15 ft.","strength":14,"dexterity":3,"constitution":20,"intelligence":1,"wisdom":6,"charisma":1,"conditionImmunities":"blinded, charmed, deafened, exhaustion, frightened, prone","senses":"blindsight 60 ft. (blind beyond this radius)","challenge":"2","traits":[{"name":"Ooze Cube","text":"The cube takes up its entire space. Other creatures can enter the space, but a creature that does so is subjected to the cube's Engulf and has disadvantage on the saving throw.\nCreatures inside the cube can be seen but have total cover.\nA creature within 5 feet of the cube can take an action to pull a creature or object out of the cube. Doing so requires a successful DC 12 Strength check, and the creature making the attempt takes 10 (3d6) acid damage.\nThe cube can hold only one Large creature or up to four Medium or smaller creatures inside it at a time."},{"name":"Transparent","text":"Even when the cube is in plain sight, it takes a successful DC 15 Wisdom (Perception) check to spot a cube that has neither moved nor attacked. A creature that tries to enter the cube's space while unaware of the cube is surprised by the cube."}],"actions":[{"name":"Pseudopod","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 10 (3d6) acid damage."},{"name":"Engulf","text":"The cube moves up to its speed. While doing so, it can enter Large or smaller creatures' spaces. Whenever the cube enters a creature's space, the creature must make a DC 12 Dexterity saving throw.\nOn a successful save, the creature can choose to be pushed 5 feet back or to the side of the cube. A creature that chooses not to be pushed suffers the consequences of a failed saving throw.\nOn a failed save, the cube enters the creature's space, and the creature takes 10 (3d6) acid damage and is engulfed. The engulfed creature can't breathe, is restrained, and takes 21 (6d6) acid damage at the start of each of the cube's turns. When the cube moves, the engulfed creature moves with it.\nAn engulfed creature can try to escape by taking an action to make a DC 12 Strength check. On a success, the creature escapes and enters a space of its choice within 5 feet of the cube."}]},{"name":"Ghast","size":"Medium","type":"Undead","alignment":"chaotic evil","AC":"13","HP":"36 (8d8)","speed":"30 ft.","strength":16,"dexterity":17,"constitution":10,"intelligence":11,"wisdom":10,"charisma":8,"damageImmunities":"necrotic","conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"Common","challenge":"2","traits":[{"name":"Stench","text":"Any creature that starts its turn within 5 ft. of the ghast must succeed on a DC 10 Constitution saving throw or be poisoned until the start of its next turn. On a successful saving throw, the creature is immune to the ghast's Stench for 24 hours."},{"name":"Turn Defiance","text":"The ghast and any ghouls within 30 ft. of it have advantage on saving throws against effects that turn undead."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one creature. Hit: 12 (2d8 + 3) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) slashing damage. If the target is a creature other than an undead, it must succeed on a DC 10 Constitution saving throw or be paralyzed for 1 minute. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."}]},{"name":"Ghost","size":"Medium","type":"Undead","alignment":"any alignment","AC":"11","HP":"45 (10d8)","speed":"0 ft., fly 40 ft. (hover)","strength":7,"dexterity":13,"constitution":10,"intelligence":10,"wisdom":12,"charisma":17,"damageResistances":"acid, fire, lightning, thunder; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"cold, necrotic, poison","conditionImmunities":"charmed, exhaustion, frightened, grappled, paralyzed, petrified, poisoned, prone, restrained","senses":"darkvision 60 ft.","languages":"any languages it knew in life","challenge":"4","traits":[{"name":"Ethereal Sight","text":"The ghost can see 60 ft. into the Ethereal Plane when it is on the Material Plane, and vice versa."},{"name":"Incorporeal Movement","text":"The ghost can move through other creatures and objects as if they were difficult terrain. It takes 5 (1d10) force damage if it ends its turn inside an object."}],"actions":[{"name":"Withering Touch","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 17 (4d6 + 3) necrotic damage."},{"name":"Etherealness","text":"The ghost enters the Ethereal Plane from the Material Plane, or vice versa. It is visible on the Material Plane while it is in the Border Ethereal, and vice versa, yet it can't affect or be affected by anything on the other plane."},{"name":"Horrifying Visage","text":"Each non-undead creature within 60 ft. of the ghost that can see it must succeed on a DC 13 Wisdom saving throw or be frightened for 1 minute. If the save fails by 5 or more, the target also ages 1d4 _ 10 years. A frightened target can repeat the saving throw at the end of each of its turns, ending the frightened condition on itself on a success. If a target's saving throw is successful or the effect ends for it, the target is immune to this ghost's Horrifying Visage for the next 24 hours. The aging effect can be reversed with a greater restoration spell, but only within 24 hours of it occurring."},{"name":"Possession","text":"One humanoid that the ghost can see within 5 ft. of it must succeed on a DC 13 Charisma saving throw or be possessed by the ghost; the ghost then disappears, and the target is incapacitated and loses control of its body. The ghost now controls the body but doesn't deprive the target of awareness. The ghost can't be targeted by any attack, spell, or other effect, except ones that turn undead, and it retains its alignment, Intelligence, Wisdom, Charisma, and immunity to being charmed and frightened. It otherwise uses the possessed target's statistics, but doesn't gain access to the target's knowledge, class features, or proficiencies.\nThe possession lasts until the body drops to 0 hit points, the ghost ends it as a bonus action, or the ghost is turned or forced out by an effect like the dispel evil and good spell. When the possession ends, the ghost reappears in an unoccupied space within 5 ft. of the body. The target is immune to this ghost's Possession for 24 hours after succeeding on the saving throw or after the possession ends.","recharge":"Recharge 6"}]},{"name":"Ghoul","size":"Medium","type":"Undead","alignment":"chaotic evil","AC":"12","HP":"22 (5d8)","speed":"30 ft.","strength":13,"dexterity":15,"constitution":10,"intelligence":7,"wisdom":10,"charisma":6,"conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"Common","challenge":"1","actions":[{"name":"Bite","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one creature. Hit: 9 (2d6 + 2) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (2d4 + 2) slashing damage. If the target is a creature other than an elf or undead, it must succeed on a DC 10 Constitution saving throw or be paralyzed for 1 minute. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."}]},{"name":"Giant Ape","size":"Huge","type":"Beast","alignment":"unaligned","AC":"12","HP":"157 (15d12+60)","speed":"40 ft., climb 40 ft.","strength":23,"dexterity":14,"constitution":18,"intelligence":7,"wisdom":12,"charisma":7,"skills":"Athletics +9, Perception +4","challenge":"7","actions":[{"name":"Multiattack","text":"The ape makes two fist attacks."},{"name":"Fist","text":"Melee Weapon Attack: +9 to hit, reach 10 ft., one target. Hit: 22 (3d10 + 6) bludgeoning damage."},{"name":"Rock","text":"Ranged Weapon Attack: +9 to hit, range 50/100 ft., one target. Hit: 30 (7d6 + 6) bludgeoning damage."}]},{"name":"Giant Badger","size":"Medium","type":"Beast","alignment":"unaligned","AC":"10","HP":"13 (2d8+4)","speed":"30 ft., burrow 10 ft.","strength":13,"dexterity":10,"constitution":15,"intelligence":2,"wisdom":12,"charisma":5,"senses":"darkvision 30 ft.","challenge":"1/4","traits":[{"name":"Keen Smell","text":"The badger has advantage on Wisdom (Perception) checks that rely on smell."}],"actions":[{"name":"Multiattack","text":"The badger makes two attacks: one with its bite and one with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 4 (1d6 + 1) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 6 (2d4 + 1) slashing damage."}]},{"name":"Giant Bat","size":"Large","type":"Beast","alignment":"unaligned","AC":"13","HP":"22 (4d10)","speed":"10 ft., fly 60 ft.","strength":15,"dexterity":16,"constitution":11,"intelligence":2,"wisdom":12,"charisma":6,"senses":"blindsight 60 ft.","challenge":"1/4","traits":[{"name":"Echolocation","text":"The bat can't use its blindsight while deafened."},{"name":"Keen Hearing","text":"The bat has advantage on Wisdom (Perception) checks that rely on hearing."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 5 (1d6 + 2) piercing damage."}]},{"name":"Giant Boar","size":"Large","type":"Beast","alignment":"unaligned","AC":"12 (natural armor)","HP":"42 (5d10+5)","speed":"40 ft.","strength":17,"dexterity":10,"constitution":16,"intelligence":2,"wisdom":7,"charisma":5,"challenge":"2","traits":[{"name":"Charge","text":"If the boar moves at least 20 ft. straight toward a target and then hits it with a tusk attack on the same turn, the target takes an extra 7 (2d6) slashing damage. If the target is a creature, it must succeed on a DC 13 Strength saving throw or be knocked prone."},{"name":"Relentless","text":"If the boar takes 10 damage or less that would reduce it to 0 hit points, it is reduced to 1 hit point instead.","recharge":"Recharges after a Short or Long Rest"}],"actions":[{"name":"Tusk","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) slashing damage."}]},{"name":"Giant Centipede","size":"Small","type":"Beast","alignment":"unaligned","AC":"13 (natural armor)","HP":"4 (1d6+1)","speed":"30 ft., climb 30 ft.","strength":5,"dexterity":14,"constitution":12,"intelligence":1,"wisdom":7,"charisma":3,"senses":"blindsight 30 ft.","challenge":"1/4","actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 4 (1d4 + 2) piercing damage, and the target must succeed on a DC 11 Constitution saving throw or take 10 (3d6) poison damage. If the poison damage reduces the target to 0 hit points, the target is stable but poisoned for 1 hour, even after regaining hit points, and is paralyzed while poisoned in this way."}]},{"name":"Giant Constrictor Snake","size":"Huge","type":"Beast","alignment":"unaligned","AC":"12","HP":"60 (8d12+8)","speed":"30 ft., swim 30 ft.","strength":19,"dexterity":14,"constitution":12,"intelligence":1,"wisdom":10,"charisma":3,"skills":"Perception +2","senses":"blindsight 10 ft.","challenge":"2","actions":[{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 10 ft., one creature. Hit: 11 (2d6 + 4) piercing damage."},{"name":"Constrict","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one creature. Hit: 13 (2d8 + 4) bludgeoning damage, and the target is grappled (escape DC 16). Until this grapple ends, the creature is restrained, and the snake can't constrict another target."}]},{"name":"Giant Crab","size":"Medium","type":"Beast","alignment":"unaligned","AC":"15 (natural armor)","HP":"13 (3d8)","speed":"30 ft., swim 30 ft.","strength":13,"dexterity":15,"constitution":11,"intelligence":1,"wisdom":9,"charisma":3,"skills":"Stealth +4","senses":"blindsight 30 ft.","challenge":"1/8","traits":[{"name":"Amphibious","text":"The crab can breathe air and water."}],"actions":[{"name":"Claw","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 4 (1d6 + 1) bludgeoning damage, and the target is grappled (escape DC 11). The crab has two claws, each of which can grapple only one target."}]},{"name":"Giant Crocodile","size":"Huge","type":"Beast","alignment":"unaligned","AC":"14 (natural armor)","HP":"85 (9d12+27)","speed":"30 ft., swim 50 ft.","strength":21,"dexterity":9,"constitution":17,"intelligence":2,"wisdom":10,"charisma":7,"skills":"Stealth +5","challenge":"5","traits":[{"name":"Hold Breath","text":"The crocodile can hold its breath for 30 minutes."}],"actions":[{"name":"Multiattack","text":"The crocodile makes two attacks: one with its bite and one with its tail."},{"name":"Bite","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one target. Hit: 21 (3d10 + 5) piercing damage, and the target is grappled (escape DC 16). Until this grapple ends, the target is restrained, and the crocodile can't bite another target."},{"name":"Tail","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one target not grappled by the crocodile. Hit: 14 (2d8 + 5) bludgeoning damage. If the target is a creature, it must succeed on a DC 16 Strength saving throw or be knocked prone."}]},{"name":"Giant Eagle","size":"Large","type":"Beast","alignment":"neutral good","AC":"13","HP":"26 (4d10+4)","speed":"10 ft., fly 80 ft.","strength":16,"dexterity":17,"constitution":13,"intelligence":8,"wisdom":14,"charisma":10,"skills":"Perception +4","languages":"Giant Eagle, understands Common and Auran but can't speak","challenge":"1","traits":[{"name":"Keen Sight","text":"The eagle has advantage on Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Multiattack","text":"The eagle makes two attacks: one with its beak and one with its talons."},{"name":"Beak","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) piercing damage."},{"name":"Talons","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) slashing damage."}]},{"name":"Giant Elk","size":"Huge","type":"Beast","alignment":"unaligned","AC":"15 (natural armor)","HP":"42 (5d12+10)","speed":"60 ft.","strength":19,"dexterity":16,"constitution":14,"intelligence":7,"wisdom":14,"charisma":10,"skills":"Perception +4","languages":"Giant Elk, understands Common, Elvish, and Sylvan but can't speak","challenge":"2","traits":[{"name":"Charge","text":"If the elk moves at least 20 ft. straight toward a target and then hits it with a ram attack on the same turn, the target takes an extra 7 (2d6) damage. If the target is a creature, it must succeed on a DC 14 Strength saving throw or be knocked prone."}],"actions":[{"name":"Ram","text":"Melee Weapon Attack: +6 to hit, reach 10 ft., one target. Hit: 11 (2d6 + 4) bludgeoning damage."},{"name":"Hooves","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one prone creature. Hit: 22 (4d8 + 4) bludgeoning damage."}]},{"name":"Giant Fire Beetle","size":"Small","type":"Beast","alignment":"unaligned","AC":"13 (natural armor)","HP":"4 (1d6+1)","speed":"30 ft.","strength":8,"dexterity":10,"constitution":12,"intelligence":1,"wisdom":7,"charisma":3,"senses":"blindsight 30 ft.","challenge":"0","traits":[{"name":"Illumination","text":"The beetle sheds bright light in a 10-foot radius and dim light for an additional 10 ft.."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +1 to hit, reach 5 ft., one target. Hit: 2 (1d6 - 1) slashing damage."}]},{"name":"Giant Frog","size":"Medium","type":"Beast","alignment":"unaligned","AC":"11","HP":"18 (4d8)","speed":"30 ft., swim 30 ft.","strength":12,"dexterity":13,"constitution":11,"intelligence":2,"wisdom":10,"charisma":3,"skills":"Perception +2, Stealth +3","senses":"darkvision 30 ft.","challenge":"1/4","traits":[{"name":"Amphibious","text":"The frog can breathe air and water"},{"name":"Standing Leap","text":"The frog's long jump is up to 20 ft. and its high jump is up to 10 ft., with or without a running start."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 4 (1d6 + 1) piercing damage, and the target is grappled (escape DC 11). Until this grapple ends, the target is restrained, and the frog can't bite another target."},{"name":"Swallow","text":"The frog makes one bite attack against a Small or smaller target it is grappling. If the attack hits, the target is swallowed, and the grapple ends. The swallowed target is blinded and restrained, it has total cover against attacks and other effects outside the frog, and it takes 5 (2d4) acid damage at the start of each of the frog's turns. The frog can have only one target swallowed at a time. If the frog dies, a swallowed creature is no longer restrained by it and can escape from the corpse using 5 ft. of movement, exiting prone."}]},{"name":"Giant Goat","size":"Large","type":"Beast","alignment":"unaligned","AC":"11 (natural armor)","HP":"19 (3d10+3)","speed":"40 ft.","strength":17,"dexterity":11,"constitution":12,"intelligence":3,"wisdom":12,"charisma":6,"challenge":"1/2","traits":[{"name":"Charge","text":"If the goat moves at least 20 ft. straight toward a target and then hits it with a ram attack on the same turn, the target takes an extra 5 (2d4) bludgeoning damage. If the target is a creature, it must succeed on a DC 13 Strength saving throw or be knocked prone."},{"name":"Sure-Footed","text":"The goat has advantage on Strength and Dexterity saving throws made against effects that would knock it prone."}],"actions":[{"name":"Ram","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 8 (2d4 + 3) bludgeoning damage."}]},{"name":"Giant Hyena","size":"Large","type":"Beast","alignment":"unaligned","AC":"12","HP":"45 (6d10+12)","speed":"50 ft.","strength":16,"dexterity":14,"constitution":14,"intelligence":2,"wisdom":12,"charisma":7,"skills":"Perception +3","challenge":"1","traits":[{"name":"Rampage","text":"When the hyena reduces a creature to 0 hit points with a melee attack on its turn, the hyena can take a bonus action to move up to half its speed and make a bite attack."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) piercing damage."}]},{"name":"Giant Lizard","size":"Large","type":"Beast","alignment":"unaligned","AC":"12 (natural armor)","HP":"19 (3d10+3)","speed":"30 ft., climb 30 ft.","strength":15,"dexterity":12,"constitution":13,"intelligence":2,"wisdom":10,"charisma":5,"senses":"darkvision 30 ft.","challenge":"1/4","traits":[{"name":"Variant: Hold Breath","text":"The lizard can hold its breath for 15 minutes. (A lizard that has this trait also has a swimming speed of 30 feet.)"},{"name":"Variant: Spider Climb","text":"The lizard can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 6 (1d8 + 2) piercing damage."}]},{"name":"Giant Octopus","size":"Large","type":"Beast","alignment":"unaligned","AC":"11","HP":"52 (8d10+8)","speed":"10 ft., swim 60 ft.","strength":17,"dexterity":13,"constitution":13,"intelligence":4,"wisdom":10,"charisma":4,"skills":"Perception +4, Stealth +5","senses":"darkvision 60 ft.","challenge":"1","traits":[{"name":"Hold Breath","text":"While out of water, the octopus can hold its breath for 1 hour."},{"name":"Underwater Camouflage","text":"The octopus has advantage on Dexterity (Stealth) checks made while underwater."},{"name":"Water Breathing","text":"The octopus can breathe only underwater."}],"actions":[{"name":"Tentacles","text":"Melee Weapon Attack: +5 to hit, reach 15 ft., one target. Hit: 10 (2d6 + 3) bludgeoning damage. If the target is a creature, it is grappled (escape DC 16). Until this grapple ends, the target is restrained, and the octopus can't use its tentacles on another target."},{"name":"Ink Cloud","text":"A 20-foot-radius cloud of ink extends all around the octopus if it is underwater. The area is heavily obscured for 1 minute, although a significant current can disperse the ink. After releasing the ink, the octopus can use the Dash action as a bonus action.","recharge":"Recharges after a Short or Long Rest"}]},{"name":"Giant Owl","size":"Large","type":"Beast","alignment":"neutral","AC":"12","HP":"19 (3d10+3)","speed":"5 ft., fly 60 ft.","strength":13,"dexterity":15,"constitution":12,"intelligence":8,"wisdom":13,"charisma":10,"skills":"Perception +5, Stealth +4","senses":"darkvision 120 ft.","languages":"Giant Owl, understands Common, Elvish, and Sylvan but can't speak","challenge":"1/4","traits":[{"name":"Flyby","text":"The owl doesn't provoke opportunity attacks when it flies out of an enemy's reach."},{"name":"Keen Hearing and Sight","text":"The owl has advantage on Wisdom (Perception) checks that rely on hearing or sight."}],"actions":[{"name":"Talons","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 8 (2d6 + 1) slashing damage."}]},{"name":"Giant Poisonous Snake","size":"Medium","type":"Beast","alignment":"unaligned","AC":"14","HP":"11 (2d8+2)","speed":"30 ft., swim 30 ft.","strength":10,"dexterity":18,"constitution":13,"intelligence":2,"wisdom":10,"charisma":3,"skills":"Perception +2","senses":"blindsight 10 ft.","challenge":"1/4","actions":[{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 10 ft., one target. Hit: 6 (1d4 + 4) piercing damage, and the target must make a DC 11 Constitution saving throw, taking 10 (3d6) poison damage on a failed save, or half as much damage on a successful one."}]},{"name":"Giant Rat","size":"Small","type":"Beast","alignment":"unaligned","AC":"12","HP":"7 (2d6)","speed":"30 ft.","strength":7,"dexterity":15,"constitution":11,"intelligence":2,"wisdom":10,"charisma":4,"senses":"darkvision 60 ft.","challenge":"1/8","traits":[{"name":"Keen Smell","text":"The rat has advantage on Wisdom (Perception) checks that rely on smell."},{"name":"Pack Tactics","text":"The rat has advantage on an attack roll against a creature if at least one of the rat's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 4 (1d4 + 2) piercing damage."}]},{"name":"Giant Rat (Diseased)","size":"Small","type":"Beast","alignment":"unaligned","AC":"12","HP":"7 (2d6)","speed":"30 ft.","strength":7,"dexterity":15,"constitution":11,"intelligence":2,"wisdom":10,"charisma":4,"senses":"darkvision 60 ft.","challenge":"1/8","actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 4 (1d4 + 2) piercing damage. If the target is a creature, it must succeed on a DC 10 Constitution saving throw or contract a disease. Until the disease is cured, the target can't regain hit points except by magical means, and the target's hit point maximum decreases by 3 (1d6) every 24 hours. If the target's hit point maximum drops to 0 as a result of this disease, the target dies."}]},{"name":"Giant Scorpion","size":"Large","type":"Beast","alignment":"unaligned","AC":"15 (natural armor)","HP":"52 (7d10+14)","speed":"40 ft.","strength":15,"dexterity":13,"constitution":15,"intelligence":1,"wisdom":9,"charisma":3,"senses":"blindsight 60 ft.","challenge":"3","actions":[{"name":"Claw","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 6 (1d8 + 2) bludgeoning damage, and the target is grappled (escape DC 12). The scorpion has two claws, each of which can grapple only one target."},{"name":"Multiattack","text":"The scorpion makes three attacks: two with its claws and one with its sting."},{"name":"Sting","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 7 (1d10 + 2) piercing damage, and the target must make a DC 12 Constitution saving throw, taking 22 (4d10) poison damage on a failed save, or half as much damage on a successful one."}]},{"name":"Giant Sea Horse","size":"Large","type":"Beast","alignment":"unaligned","AC":"13 (natural armor)","HP":"16 (3d10)","speed":"0 ft., swim 40 ft.","strength":12,"dexterity":15,"constitution":11,"intelligence":2,"wisdom":12,"charisma":5,"challenge":"1/2","traits":[{"name":"Charge","text":"If the sea horse moves at least 20 ft. straight toward a target and then hits it with a ram attack on the same turn, the target takes an extra 7 (2d6) bludgeoning damage. If the target is a creature, it must succeed on a DC 11 Strength saving throw or be knocked prone."},{"name":"Water Breathing","text":"The sea horse can breathe only underwater."}],"actions":[{"name":"Ram","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 4 (1d6 + 1) bludgeoning damage."}]},{"name":"Giant Shark","size":"Huge","type":"Beast","alignment":"unaligned","AC":"13 (natural armor)","HP":"126 (11d12+55)","speed":"0 ft., swim 50 ft.","strength":23,"dexterity":11,"constitution":21,"intelligence":1,"wisdom":10,"charisma":5,"skills":"Perception +3","senses":"blindsight 60 ft.","challenge":"5","traits":[{"name":"Blood Frenzy","text":"The shark has advantage on melee attack rolls against any creature that doesn't have all its hit points."},{"name":"Water Breathing","text":"The shark can breathe only underwater."}],"actions":[{"name":"Bite","text":"Weapon Attack: +9 to hit, reach 5 ft., one target. Hit: 22 (3d10 + 6) piercing damage."}]},{"name":"Giant Spider","size":"Large","type":"Beast","alignment":"unaligned","AC":"14 (natural armor)","HP":"26 (4d10+4)","speed":"30 ft., climb 30 ft.","strength":14,"dexterity":16,"constitution":12,"intelligence":2,"wisdom":11,"charisma":4,"skills":"Stealth +7","senses":"blindsight 10 ft., darkvision 60 ft.","challenge":"1","traits":[{"name":"Spider Climb","text":"The spider can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."},{"name":"Web Sense","text":"While in contact with a web, the spider knows the exact location of any other creature in contact with the same web."},{"name":"Web Walker","text":"The spider ignores movement restrictions caused by webbing."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one creature. Hit: 7 (1d8 + 3) piercing damage, and the target must make a DC 11 Constitution saving throw, taking 9 (2d8) poison damage on a failed save, or half as much damage on a successful one. If the poison damage reduces the target to 0 hit points, the target is stable but poisoned for 1 hour, even after regaining hit points, and is paralyzed while poisoned in this way."},{"name":"Web","text":"Ranged Weapon Attack: +5 to hit, range 30/60 ft., one creature. Hit: The target is restrained by webbing. As an action, the restrained target can make a DC 12 Strength check, bursting the webbing on a success. The webbing can also be attacked and destroyed (AC 10; hp 5; vulnerability to fire damage; immunity to bludgeoning, poison, and psychic damage).","recharge":"Recharge 5-6"}]},{"name":"Giant Toad","size":"Large","type":"Beast","alignment":"unaligned","AC":"11","HP":"39 (6d10+6)","speed":"20 ft., swim 40 ft.","strength":15,"dexterity":13,"constitution":13,"intelligence":2,"wisdom":10,"charisma":3,"senses":"darkvision 30 ft.","challenge":"1","traits":[{"name":"Amphibious","text":"The toad can breathe air and water"},{"name":"Standing Leap","text":"The toad's long jump is up to 20 ft. and its high jump is up to 10 ft., with or without a running start."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (1d10 + 2) piercing damage plus 5 (1d10) poison damage, and the target is grappled (escape DC 13). Until this grapple ends, the target is restrained, and the toad can't bite another target."},{"name":"Swallow","text":"The toad makes one bite attack against a Medium or smaller target it is grappling. If the attack hits, the target is swallowed, and the grapple ends. The swallowed target is blinded and restrained, it has total cover against attacks and other effects outside the toad, and it takes 10 (3d6) acid damage at the start of each of the toad's turns. The toad can have only one target swallowed at a time.\nIf the toad dies, a swallowed creature is no longer restrained by it and can escape from the corpse using 5 feet of movement, exiting prone."}]},{"name":"Giant Vulture","size":"Large","type":"Beast","alignment":"neutral evil","AC":"10","HP":"22 (3d10+6)","speed":"10 ft., fly 60 ft.","strength":15,"dexterity":10,"constitution":15,"intelligence":6,"wisdom":12,"charisma":7,"skills":"Perception +3","languages":"understands Common but can't speak","challenge":"1","traits":[{"name":"Keen Sight and Smell","text":"The vulture has advantage on Wisdom (Perception) checks that rely on sight or smell."},{"name":"Pack Tactics","text":"The vulture has advantage on an attack roll against a creature if at least one of the vulture's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Multiattack","text":"The vulture makes two attacks: one with its beak and one with its talons."},{"name":"Beak","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (2d4 + 2) piercing damage."},{"name":"Talons","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 9 (2d6 + 2) slashing damage."}]},{"name":"Giant Wasp","size":"Medium","type":"Beast","alignment":"unaligned","AC":"12","HP":"13 (3d8)","speed":"10 ft., fly 50 ft., swim 50 ft.","strength":10,"dexterity":14,"constitution":10,"intelligence":1,"wisdom":10,"charisma":3,"challenge":"1/2","actions":[{"name":"Sting","text":"Sting. Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 5 (1d6 + 2) piercing damage, and the target must make a DC 11 Constitution saving throw, taking 10 (3d6) poison damage on a failed save, or half as much damage on a successful one. If the poison damage reduces the target to 0 hit points, the target is stable but poisoned for 1 hour, even after regaining hit points, and is paralyzed while poisoned in this way."}]},{"name":"Giant Weasel","size":"Medium","type":"Beast","alignment":"unaligned","AC":"13","HP":"9 (2d8)","speed":"40 ft.","strength":11,"dexterity":16,"constitution":10,"intelligence":4,"wisdom":12,"charisma":5,"skills":"Perception +3, Stealth +5","senses":"darkvision 60 ft.","challenge":"1/8","traits":[{"name":"Keen Hearing and Smell","text":"The weasel has advantage on Wisdom (Perception) checks that rely on hearing or smell."}],"actions":[{"name":"Bite","text":"Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 5 (1d4 + 3) piercing damage."}]},{"name":"Giant Wolf Spider","size":"Medium","type":"Beast","alignment":"unaligned","AC":"13","HP":"11 (2d8+2)","speed":"40 ft., climb 40 ft.","strength":12,"dexterity":16,"constitution":13,"intelligence":3,"wisdom":12,"charisma":4,"skills":"Perception +3, Stealth +7","senses":"blindsight 10 ft., darkvision 60 ft.","challenge":"1/4","traits":[{"name":"Spider Climb","text":"The spider can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."},{"name":"Web Sense","text":"While in contact with a web, the spider knows the exact location of any other creature in contact with the same web."},{"name":"Web Walker","text":"The spider ignores movement restrictions caused by webbing."}],"actions":[{"name":"Bite","text":"Weapon Attack: +3 to hit, reach 5 ft., one creature. Hit: 4 (1d6 + 1) piercing damage, and the target must make a DC 11 Constitution saving throw, taking 7 (2d6) poison damage on a failed save, or half as much damage on a successful one. If the poison damage reduces the target to 0 hit points, the target is stable but poisoned for 1 hour, even after regaining hit points, and is paralyzed while poisoned in this way."}]},{"name":"Gibbering Mouther","size":"Medium","type":"Aberration","alignment":"neutral","AC":"9","HP":"67 (9d8+27)","speed":"10 ft., swim 10 ft.","strength":10,"dexterity":8,"constitution":16,"intelligence":3,"wisdom":10,"charisma":6,"conditionImmunities":"prone","senses":"darkvision 60 ft.","challenge":"2","traits":[{"name":"Aberrant Ground","text":"The ground in a 10-foot radius around the mouther is doughlike difficult terrain. Each creature that starts its turn in that area must succeed on a DC 10 Strength saving throw or have its speed reduced to 0 until the start of its next turn."},{"name":"Gibbering","text":"The mouther babbles incoherently while it can see any creature and isn't incapacitated. Each creature that starts its turn within 20 feet of the mouther and can hear the gibbering must succeed on a DC 10 Wisdom saving throw. On a failure, the creature can't take reactions until the start of its next turn and rolls a d8 to determine what it does during its turn. On a 1 to 4, the creature does nothing. On a 5 or 6, the creature takes no action or bonus action and uses all its movement to move in a randomly determined direction. On a 7 or 8, the creature makes a melee attack against a randomly determined creature within its reach or does nothing if it can't make such an attack."}],"actions":[{"name":"Multiattack","text":"The gibbering mouther makes one bite attack and, if it can, uses its Blinding Spittle."},{"name":"Bites","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one creature. Hit: 17 (5d6) piercing damage. If the target is Medium or smaller, it must succeed on a DC 10 Strength saving throw or be knocked prone. If the target is killed by this damage, it is absorbed into the mouther."},{"name":"Blinding Spittle","text":"The mouther spits a chemical glob at a point it can see within 15 feet of it. The glob explodes in a blinding flash of light on impact. Each creature within 5 feet of the flash must succeed on a DC 13 Dexterity saving throw or be blinded until the end of the mouther's next turn.","recharge":"Recharge 5-6"}]},{"name":"Glabrezu","size":"Large","type":"Fiend (demon)","alignment":"chaotic evil","AC":"17 (natural armor)","HP":"157 (15d10+75)","speed":"40 ft.","strength":20,"dexterity":15,"constitution":21,"intelligence":19,"wisdom":17,"charisma":16,"savingThrows":"Str +9, Con +9, Wis +7, Cha +7","damageResistances":"cold, fire, lightning; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"truesight 120 ft.","languages":"Abyssal, telepathy 120 ft.","challenge":"9","traits":[{"name":"Innate Spellcasting","text":"The glabrezu's spellcasting ability is Intelligence (spell save DC 16). The glabrezu can innately cast the following spells, requiring no material components:\nAt will: darkness, detect magic, dispel magic\n1/day each: confusion, fly, power word stun"},{"name":"Magic Resistance","text":"The glabrezu has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The glabrezu makes four attacks: two with its pincers and two with its fists. Alternatively, it makes two attacks with its pincers and casts one spell."},{"name":"Pincer","text":"Melee Weapon Attack: +9 to hit, reach 10 ft., one target. Hit: 16 (2d10 + 5) bludgeoning damage. If the target is a Medium or smaller creature, it is grappled (escape DC 15). The glabrezu has two pincers, each of which can grapple only one target."},{"name":"Fist","text":"Melee Weapon Attack: +9 to hit, reach 5 ft., one target. Hit: 7 (2d4 + 2) bludgeoning damage."},{"name":"Variant: Summon Demon","text":"The demon chooses what to summon and attempts a magical summoning.\nA glabrezu has a 30 percent chance of summoning 1d3 vrocks, 1d2 hezrous, or one glabrezu.\nA summoned demon appears in an unoccupied space within 60 feet of its summoner, acts as an ally of its summoner, and can't summon other demons. It remains for 1 minute, until it or its summoner dies, or until its summoner dismisses it as an action.","recharge":"1/Day"}],"spells":"darkness, detect magic, dispel magic, confusion, fly, power word stun"},{"name":"Gladiator","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"16 (studded leather, shield)","HP":"112 (15d8+45)","speed":"30 ft.","strength":18,"dexterity":15,"constitution":16,"intelligence":10,"wisdom":12,"charisma":15,"savingThrows":"Str +7, Dex +5, Con +6","skills":"Athletics +10, Intimidation +5","languages":"any one language (usually Common)","challenge":"5","traits":[{"name":"Brave","text":"The gladiator has advantage on saving throws against being frightened."},{"name":"Brute","text":"A melee weapon deals one extra die of its damage when the gladiator hits with it (included in the attack)."}],"actions":[{"name":"Multiattack","text":"The gladiator makes three melee attacks or two ranged attacks."},{"name":"Spear","text":"Melee or Ranged Weapon Attack: +7 to hit, reach 5 ft. and range 20/60 ft., one target. Hit: 11 (2d6 + 4) piercing damage, or 13 (2d8 + 4) piercing damage if used with two hands to make a melee attack."},{"name":"Shield Bash","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one creature. Hit: 9 (2d4 + 4) bludgeoning damage. If the target is a Medium or smaller creature, it must succeed on a DC 15 Strength saving throw or be knocked prone."}],"reactions":[{"name":"Parry","text":"The gladiator adds 3 to its AC against one melee attack that would hit it. To do so, the gladiator must see the attacker and be wielding a melee weapon."}]},{"name":"Gnoll","size":"Medium","type":"Humanoid (gnoll)","alignment":"chaotic evil","AC":"15 (hide armor, shield)","HP":"22 (5d8)","speed":"30 ft.","strength":14,"dexterity":12,"constitution":11,"intelligence":6,"wisdom":10,"charisma":7,"senses":"darkvision 60 ft.","languages":"Gnoll","challenge":"1/2","traits":[{"name":"Rampage","text":"When the gnoll reduces a creature to 0 hit points with a melee attack on its turn, the gnoll can take a bonus action to move up to half its speed and make a bite attack."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 4 (1d4 + 2) piercing damage."},{"name":"Spear","text":"Melee or Ranged Weapon Attack: +4 to hit, reach 5 ft. or range 20/60 ft., one target. Hit: 5 (1d6 + 2) piercing damage, or 6 (1d8 + 2) piercing damage if used with two hands to make a melee attack."},{"name":"Longbow","text":"Ranged Weapon Attack: +3 to hit, range 150/600 ft., one target. Hit: 5 (1d8 + 1) piercing damage."}]},{"name":"Goat","size":"Medium","type":"Beast","alignment":"unaligned","AC":"10","HP":"4 (1d8)","speed":"40 ft.","strength":12,"dexterity":10,"constitution":11,"intelligence":2,"wisdom":10,"charisma":5,"challenge":"0","traits":[{"name":"Charge","text":"If the goat moves at least 20 ft. straight toward a target and then hits it with a ram attack on the same turn, the target takes an extra 2 (1d4) bludgeoning damage. If the target is a creature, it must succeed on a DC 10 Strength saving throw or be knocked prone."},{"name":"Sure-Footed","text":"The goat has advantage on Strength and Dexterity saving throws made against effects that would knock it prone."}],"actions":[{"name":"Ram","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 3 (1d4 + 1) bludgeoning damage."}]},{"name":"Goblin","size":"Small","type":"Humanoid (goblinoid)","alignment":"neutral evil","AC":"15 (leather armor, shield)","HP":"7 (2d6)","speed":"30 ft.","strength":8,"dexterity":14,"constitution":10,"intelligence":10,"wisdom":8,"charisma":8,"skills":"Stealth +6","senses":"darkvision 60 ft.","languages":"Common, Goblin","challenge":"1/4","traits":[{"name":"Nimble Escape","text":"The goblin can take the Disengage or Hide action as a bonus action on each of its turns."}],"actions":[{"name":"Scimitar","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) slashing damage."},{"name":"Shortbow","text":"Ranged Weapon Attack: +4 to hit, range 80/320 ft., one target. Hit: 5 (1d6 + 2) piercing damage."}]},{"name":"Gold Dragon Wyrmling","size":"Medium","type":"Dragon","alignment":"lawful good","AC":"17 (natural armor)","HP":"60 (8d8+24)","speed":"30 ft., fly 60 ft., swim 30 ft.","strength":19,"dexterity":14,"constitution":17,"intelligence":14,"wisdom":11,"charisma":16,"savingThrows":"Dex +4, Con +5, Wis +2, Cha +5","skills":"Perception +4, Stealth +4","damageImmunities":"fire","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"Draconic","challenge":"3","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 9 (1d10 + 4) piercing damage."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Fire Breath","text":"The dragon exhales fire in a 15-foot cone. Each creature in that area must make a DC 13 Dexterity saving throw, taking 22 (4d10) fire damage on a failed save, or half as much damage on a successful one."},{"name":"Weakening Breath","text":"The dragon exhales gas in a 15-foot cone. Each creature in that area must succeed on a DC 13 Strength saving throw or have disadvantage on Strength-based attack rolls, Strength checks, and Strength saving throws for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."}]},{"name":"Gorgon","size":"Large","type":"Monstrosity","alignment":"unaligned","AC":"19 (natural armor)","HP":"114 (12d10+48)","speed":"40 ft.","strength":20,"dexterity":11,"constitution":18,"intelligence":2,"wisdom":12,"charisma":7,"skills":"Perception +4","damageImmunities":"petrified","senses":"darkvision 60 ft.","challenge":"5","traits":[{"name":"Trampling Charge","text":"If the gorgon moves at least 20 feet straight toward a creature and then hits it with a gore attack on the same turn, that target must succeed on a DC 16 Strength saving throw or be knocked prone. If the target is prone, the gorgon can make one attack with its hooves against it as a bonus action."}],"actions":[{"name":"Gore","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one target. Hit: 18 (2d12 + 5) piercing damage."},{"name":"Hooves","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one target. Hit: 16 (2d10 + 5) bludgeoning damage."},{"name":"Petrifying Breath","text":"The gorgon exhales petrifying gas in a 30-foot cone. Each creature in that area must succeed on a DC 13 Constitution saving throw. On a failed save, a target begins to turn to stone and is restrained. The restrained target must repeat the saving throw at the end of its next turn. On a success, the effect ends on the target. On a failure, the target is petrified until freed by the greater restoration spell or other magic.","recharge":"Recharge 5-6"}]},{"name":"Gray Ooze","size":"Medium","type":"Ooze","alignment":"unaligned","AC":"8","HP":"22 (3d8+9)","speed":"10 ft., climb 10 ft.","strength":12,"dexterity":6,"constitution":16,"intelligence":1,"wisdom":6,"charisma":2,"skills":"Stealth +2","damageResistances":"acid, cold, fire","conditionImmunities":"blinded, charmed, deafened, exhaustion, frightened, prone","senses":"blindsight 60 ft. (blind beyond this radius)","challenge":"1/2","traits":[{"name":"Amorphous","text":"The ooze can move through a space as narrow as 1 inch wide without squeezing."},{"name":"Corrode Metal","text":"Any nonmagical weapon made of metal that hits the ooze corrodes. After dealing damage, the weapon takes a permanent and cumulative -1 penalty to damage rolls. If its penalty drops to -5, the weapon is destroyed. Nonmagical ammunition made of metal that hits the ooze is destroyed after dealing damage.\nThe ooze can eat through 2-inch-thick, nonmagical metal in 1 round."},{"name":"False Appearance","text":"While the ooze remains motionless, it is indistinguishable from an oily pool or wet rock."}],"actions":[{"name":"Pseudopod","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 4 (1d6 + 1) bludgeoning damage plus 7 (2d6) acid damage, and if the target is wearing nonmagical metal armor, its armor is partly corroded and takes a permanent and cumulative -1 penalty to the AC it offers. The armor is destroyed if the penalty reduces its AC to 10."}]},{"name":"Green Dragon Wyrmling","size":"Medium","type":"Dragon","alignment":"lawful evil","AC":"17 (natural armor)","HP":"38 (7d8+7)","speed":"30 ft., fly 60 ft., swim 30 ft.","strength":15,"dexterity":12,"constitution":13,"intelligence":14,"wisdom":11,"charisma":13,"savingThrows":"Dex +3, Con +3, Wis +2, Cha +3","skills":"Perception +4, Stealth +3","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"Draconic","challenge":"2","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (1d10 + 2) piercing damage plus 3 (1d6) poison damage."},{"name":"Poison Breath","text":"The dragon exhales poisonous gas in a 15-foot cone. Each creature in that area must make a DC 11 Constitution saving throw, taking 21 (6d6) poison damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Green Hag","size":"Medium","type":"Fey","alignment":"neutral evil","AC":"17 (natural armor)","HP":"82 (11d8+33)","speed":"30 ft.","strength":18,"dexterity":12,"constitution":16,"intelligence":13,"wisdom":14,"charisma":14,"skills":"Arcana +3, Deception +4, Perception +4, Stealth +3","senses":"darkvision 60 ft.","languages":"Common, Draconic, Sylvan","challenge":"3","traits":[{"name":"Amphibious","text":"The hag can breathe air and water."},{"name":"Innate Spellcasting","text":"The hag's innate spellcasting ability is Charisma (spell save DC 12). She can innately cast the following spells, requiring no material components:\nAt will: dancing lights, minor illusion, vicious mockery"},{"name":"Mimicry","text":"The hag can mimic animal sounds and humanoid voices. A creature that hears the sounds can tell they are imitations with a successful DC 14 Wisdom (Insight) check."},{"name":"Hag Coven","text":"When hags must work together, they form covens, in spite of their selfish natures. A coven is made up of hags of any type, all of whom are equals within the group. However, each of the hags continues to desire more personal power.\nA coven consists of three hags so that any arguments between two hags can be settled by the third. If more than three hags ever come together, as might happen if two covens come into conflict, the result is usually chaos."},{"name":"Shared Spellcasting","text":"While all three members of a hag coven are within 30 feet of one another, they can each cast the following spells from the wizard's spell list but must share the spell slots among themselves:\n1st level (4 slots): identify, ray of sickness\n2nd level (3 slots): hold person, locate object\n3rd level (3 slots): bestow curse, counterspell, lightning bolt\n4th level (3 slots): phantasmal killer, polymorph\n5th level (2 slots): contact other plane, scrying\n6th level (1 slot): eye bite\nFor casting these spells, each hag is a 12th-level spellcaster that uses Intelligence as her spellcasting ability. The spell save DC is 12 + the hag's Intelligence modifier, and the spell attack bonus is 4+the hag's Intelligence modifier.","recharge":"Coven Only"},{"name":"Hag Eye","text":"A hag coven can craft a magic item called a hag eye, which is made from a real eye coated in varnish and often fitted to a pendant or other wearable item. The hag eye is usually entrusted to a minion for safekeeping and transport. A hag in the coven can take an action to see what the hag eye sees if the hag eye is on the same plane of existence. A hag eye has AC 10, 1 hit point, and darkvision with a radius of 60 feet. If it is destroyed, each coven member takes 3d10 psychic damage and is blinded for 24 hours.\nA hag coven can have only one hag eye at a time, and creating a new one requires all three members of the coven to perform a ritual. The ritual takes 1 hour, and the hags can't perform it while blinded. During the ritual, if the hags take any action other than performing the ritual, they must start over.","recharge":"Coven Only"}],"actions":[{"name":"Claws","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) slashing damage."},{"name":"Illusory Appearance","text":"The hag covers herself and anything she is wearing or carrying with a magical illusion that makes her look like another creature of her general size and humanoid shape. The illusion ends if the hag takes a bonus action to end it or if she dies.\nThe changes wrought by this effect fail to hold up to physical inspection. For example, the hag could appear to have smooth skin, but someone touching her would feel her rough flesh. Otherwise, a creature must take an action to visually inspect the illusion and succeed on a DC 20 Intelligence (Investigation) check to discern that the hag is disguised."},{"name":"Invisible Passage","text":"The hag magically turns invisible until she attacks or casts a spell, or until her concentration ends (as if concentrating on a spell). While invisible, she leaves no physical evidence of her passage, so she can be tracked only by magic. Any equipment she wears or carries is invisible with her."}],"spells":"dancing lights, minor illusion, vicious mockery, identify, ray of sickness, hold person, locate object, bestow curse, counterspell, lightning bolt, phantasmal killer, polymorph, contact other plane, scrying, eye bite"},{"name":"Grick","size":"Medium","type":"Monstrosity","alignment":"neutral","AC":"14 (natural armor)","HP":"27 (6d8)","speed":"30 ft., climb 30 ft.","strength":14,"dexterity":14,"constitution":11,"intelligence":3,"wisdom":14,"charisma":5,"damageResistances":"bludgeoning, piercing, and slashing damage from nonmagical attacks","senses":"darkvision 60 ft.","challenge":"2","traits":[{"name":"Stone Camouflage","text":"The grick has advantage on Dexterity (Stealth) checks made to hide in rocky terrain."}],"actions":[{"name":"Multiattack","text":"The grick makes one attack with its tentacles. If that attack hits, the grick can make one beak attack against the same target."},{"name":"Tentacles","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 9 (2d6 + 2) slashing damage."},{"name":"Beak","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage."}]},{"name":"Griffon","size":"Large","type":"Monstrosity","alignment":"unaligned","AC":"12","HP":"59 (7d10+21)","speed":"30 ft., fly 80 ft.","strength":18,"dexterity":15,"constitution":16,"intelligence":2,"wisdom":13,"charisma":8,"skills":"Perception +5","senses":"darkvision 60 ft.","challenge":"2","traits":[{"name":"Keen Sight","text":"The griffon has advantage on Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Multiattack","text":"The griffon makes two attacks: one with its beak and one with its claws."},{"name":"Beak","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 8 (1d8 + 4) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) slashing damage."}]},{"name":"Grimlock","size":"Medium","type":"Humanoid (grimlock)","alignment":"neutral evil","AC":"11","HP":"11 (2d8+2)","speed":"30 ft.","strength":16,"dexterity":12,"constitution":12,"intelligence":9,"wisdom":8,"charisma":6,"skills":"Athletics +5, Perception +3, Stealth +3","damageImmunities":"blinded","senses":"blindsight 30 ft. or 10 ft. while deafened (blind beyond this radius)","languages":"Undercommon","challenge":"1/4","traits":[{"name":"Blind Senses","text":"The grimlock can't use its blindsight while deafened and unable to smell."},{"name":"Keen Hearing and Smell","text":"The grimlock has advantage on Wisdom (Perception) checks that rely on hearing or smell."},{"name":"Stone Camouflage","text":"The grimlock has advantage on Dexterity (Stealth) checks made to hide in rocky terrain."}],"actions":[{"name":"Spiked Bone Club","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 5 (1d4 + 3) bludgeoning damage plus 2 (1d4) piercing damage."}]},{"name":"Guard","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"16 (chain shirt, shield)","HP":"11 (2d8+2)","speed":"30 ft.","strength":13,"dexterity":12,"constitution":12,"intelligence":10,"wisdom":11,"charisma":10,"skills":"Perception +2","languages":"any one language (usually Common)","challenge":"1/8","actions":[{"name":"Spear","text":"Melee or Ranged Weapon Attack: +3 to hit, reach 5 ft. or range 20/60 ft., one target. Hit: 4 (1d6 + 1) piercing damage, or 5 (1d8 + 1) slashing damage if used with two hands."}]},{"name":"Guardian Naga","size":"Large","type":"Monstrosity","alignment":"lawful good","AC":"18 (natural armor)","HP":"127 (15d10+45)","speed":"40 ft.","strength":19,"dexterity":18,"constitution":16,"intelligence":16,"wisdom":19,"charisma":18,"savingThrows":"Dex +8, Con +7, Int +7, Wis +8, Cha +8","damageImmunities":"poison","conditionImmunities":"charmed, poisoned","senses":"darkvision 60 ft.","languages":"Celestial, Common","challenge":"10","traits":[{"name":"Rejuvenation","text":"If it dies, the naga returns to life in 1d6 days and regains all its hit points. Only a wish spell can prevent this trait from functioning."},{"name":"Spellcasting","text":"The naga is an 11th-level spellcaster. Its spellcasting ability is Wisdom (spell save DC 16, +8 to hit with spell attacks), and it needs only verbal components to cast its spells. It has the following cleric spells prepared:\nCantrips (at will): mending, sacred flame, thaumaturgy\n1st level (4 slots): command, cure wounds, shield of faith\n2nd level (3 slots): calm emotions, hold person\n3rd level (3 slots): bestow curse, clairvoyance\n4th level (3 slots): banishment, freedom of movement\n5th level (2 slots): flame strike, geas\n6th level (1 slot): true seeing"}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one creature. Hit: 8 (1d8 + 4) piercing damage, and the target must make a DC 15 Constitution saving throw, taking 45 (10d8) poison damage on a failed save, or half as much damage on a successful one."},{"name":"Spit Poison","text":"Ranged Weapon Attack: +8 to hit, range 15/30 ft., one creature. Hit: The target must make a DC 15 Constitution saving throw, taking 45 (10d8) poison damage on a failed save, or half as much damage on a successful one."}],"spells":"mending, sacred flame, thaumaturgy, command, cure wounds, shield of faith, calm emotions, hold person, bestow curse, clairvoyance, banishment, freedom of movement, flame strike, geas, true seeing"},{"name":"Gynosphinx","size":"Large","type":"Monstrosity","alignment":"lawful neutral","AC":"17 (natural armor)","HP":"136 (16d10+48)","speed":"40 ft., fly 60 ft.","strength":18,"dexterity":15,"constitution":16,"intelligence":18,"wisdom":18,"charisma":18,"skills":"Arcana +12, History +12, Perception +8, Religion +8","damageResistances":"bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"psychic","conditionImmunities":"charmed, frightened","senses":"truesight 120 ft.","languages":"Common, Sphinx","challenge":"11","traits":[{"name":"Inscrutable","text":"The sphinx is immune to any effect that would sense its emotions or read its thoughts, as well as any divination spell that it refuses. Wisdom (Insight) checks made to ascertain the sphinx's intentions or sincerity have disadvantage."},{"name":"Magic Weapons","text":"The sphinx's weapon attacks are magical."},{"name":"Spellcasting","text":"The sphinx is a 9th-level spellcaster. Its spellcasting ability is Intelligence (spell save DC 16, +8 to hit with spell attacks). It requires no material components to cast its spells. The sphinx has the following wizard spells prepared:\nCantrips (at will): mage hand, minor illusion, prestidigitation\n1st level (4 slots): detect magic, identify, shield\n2nd level (3 slots): darkness, locate object, suggestion\n3rd level (3 slots): dispel magic, remove curse, tongues\n4th level (3 slots): banishment, greater invisibility\n5th level (1 slot): legend lore"}],"actions":[{"name":"Multiattack","text":"The sphinx makes two claw attacks."},{"name":"Claw","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) slashing damage."}],"legendaryPoints":3,"legendaryActions":[{"name":"Claw Attack","text":"The sphinx makes one claw attack.","cost":1},{"name":"Teleport","text":"The sphinx magically teleports, along with any equipment it is wearing or carrying, up to 120 feet to an unoccupied space it can see.","cost":2},{"name":"Cast a Spell","text":"The sphinx casts a spell from its list of prepared spells, using a spell slot as normal.","cost":3}],"spells":"mage hand, minor illusion, prestidigitation, detect magic, identify, shield, darkness, locate object, suggestion, dispel magic, remove curse, tongues, banishment, greater invisibility, legend lore"},{"name":"Half-Red Dragon Veteran","size":"Medium","type":"Humanoid (human)","alignment":"any alignment","AC":"18 (plate)","HP":"65 (10d8+20)","speed":"30 ft.","strength":16,"dexterity":13,"constitution":14,"intelligence":10,"wisdom":11,"charisma":10,"skills":"Athletics +5, Perception +2","damageResistances":"fire","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"Common, Draconic","challenge":"5","actions":[{"name":"Multiattack","text":"The veteran makes two longsword attacks. If it has a shortsword drawn, it can also make a shortsword attack."},{"name":"Longsword","text":"Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 7 (1d8 + 3) slashing damage, or 8 (1d10 + 3) slashing damage if used with two hands."},{"name":"Shortsword","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) piercing damage."},{"name":"Heavy Crossbow","text":"Ranged Weapon Attack: +3 to hit, range 100/400 ft., one target. Hit: 6 (1d10 + 1) piercing damage."},{"name":"Fire Breath","text":"The veteran exhales fire in a 15-foot cone. Each creature in that area must make a DC 15 Dexterity saving throw, taking 24 (7d6) fire damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"reactions":[{"name":"Parry","text":"The veteran adds 3 to its AC against one melee attack that would hit it. To do so, the veteran must see the attacker and be wielding a melee weapon."}]},{"name":"Harpy","size":"Medium","type":"Monstrosity","alignment":"chaotic evil","AC":"11","HP":"38 (7d8+7)","speed":"20 ft., fly 40 ft.","strength":12,"dexterity":13,"constitution":12,"intelligence":7,"wisdom":10,"charisma":13,"languages":"Common","challenge":"1","actions":[{"name":"Multiattack","text":"The harpy makes two attacks: one with its claws and one with its club."},{"name":"Claws","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 6 (2d4 + 1) slashing damage."},{"name":"Club","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 3 (1d4 + 1) bludgeoning damage."},{"name":"Luring Song","text":"The harpy sings a magical melody. Every humanoid and giant within 300 ft. of the harpy that can hear the song must succeed on a DC 11 Wisdom saving throw or be charmed until the song ends. The harpy must take a bonus action on its subsequent turns to continue singing. It can stop singing at any time. The song ends if the harpy is incapacitated.\nWhile charmed by the harpy, a target is incapacitated and ignores the songs of other harpies. If the charmed target is more than 5 ft. away from the harpy, the target must move on its turn to move toward the harpy by the most direct route. It doesn't avoid opportunity attacks, but before moving into damaging terrain, such as lava or a pit, and whenever it takes damage from a source other than the harpy, a target can repeat the saving throw. A creature can also repeat the saving throw at the end of each of its turns. If a creature's saving throw is successful, the effect ends on it.\nA target that successfully saves is immune to this harpy's song for the next 24 hours."}]},{"name":"Hawk","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"13","HP":"1 (1d4-1)","speed":"10 ft., fly 60 ft.","strength":5,"dexterity":16,"constitution":8,"intelligence":2,"wisdom":14,"charisma":6,"skills":"Perception +4","challenge":"0","traits":[{"name":"Keen Sight","text":"The hawk has advantage on Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Talons","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 1 slashing damage."}]},{"name":"Hell Hound","size":"Medium","type":"Fiend","alignment":"lawful evil","AC":"15 (natural armor)","HP":"45 (7d8+14)","speed":"50 ft.","strength":17,"dexterity":12,"constitution":14,"intelligence":6,"wisdom":13,"charisma":6,"skills":"Perception +5","damageImmunities":"fire","senses":"darkvision 60 ft.","languages":"understands Infernal but can't speak it","challenge":"3","traits":[{"name":"Keen Hearing and Smell","text":"The hound has advantage on Wisdom (Perception) checks that rely on hearing or smell."},{"name":"Pack Tactics","text":"The hound has advantage on an attack roll against a creature if at least one of the hound's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 7 (1d8 + 3) piercing damage plus 7 (2d6) fire damage."},{"name":"Fire Breath","text":"The hound exhales fire in a 15-foot cone. Each creature in that area must make a DC 12 Dexterity saving throw, taking 21 (6d6) fire damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Hezrou","size":"Large","type":"Fiend (demon)","alignment":"chaotic evil","AC":"16 (natural armor)","HP":"136 (13d10+65)","speed":"30 ft.","strength":19,"dexterity":17,"constitution":20,"intelligence":5,"wisdom":12,"charisma":13,"savingThrows":"Str +7, Con +8, Wis +4","damageResistances":"cold, fire, lightning; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"darkvision 120 ft.","languages":"Abyssal, telepathy 120 ft.","challenge":"8","traits":[{"name":"Magic Resistance","text":"The hezrou has advantage on saving throws against spells and other magical effects."},{"name":"Stench","text":"Any creature that starts its turn within 10 feet of the hezrou must succeed on a DC 14 Constitution saving throw or be poisoned until the start of its next turn. On a successful saving throw, the creature is immune to the hezrou's stench for 24 hours."}],"actions":[{"name":"Multiattack","text":"The hezrou makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 15 (2d10 + 4) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) slashing damage."},{"name":"Variant: Summon Demon","text":"The demon chooses what to summon and attempts a magical summoning.\nA hezrou has a 30 percent chance of summoning 2d6 dretches or one hezrou.\nA summoned demon appears in an unoccupied space within 60 feet of its summoner, acts as an ally of its summoner, and can't summon other demons. It remains for 1 minute, until it or its summoner dies, or until its summoner dismisses it as an action.","recharge":"1/Day"}]},{"name":"Hill Giant","size":"Huge","type":"Giant","alignment":"chaotic evil","AC":"13 (natural armor)","HP":"105 (10d12+40)","speed":"40 ft.","strength":21,"dexterity":8,"constitution":19,"intelligence":5,"wisdom":9,"charisma":6,"skills":"Perception +2","languages":"Giant","challenge":"5","actions":[{"name":"Multiattack","text":"The giant makes two greatclub attacks."},{"name":"Greatclub","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one target. Hit: 18 (3d8 + 5) bludgeoning damage."},{"name":"Rock","text":"Ranged Weapon Attack: +8 to hit, range 60/240 ft., one target. Hit: 21 (3d10 + 5) bludgeoning damage."}]},{"name":"Hippogriff","size":"Large","type":"Monstrosity","alignment":"unaligned","AC":"11","HP":"19 (3d10+3)","speed":"40 ft, fly 60 ft.","strength":17,"dexterity":13,"constitution":13,"intelligence":2,"wisdom":12,"charisma":8,"skills":"Perception +5","challenge":"1","traits":[{"name":"Keen Sight","text":"The hippogriff has advantage on Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Multiattack","text":"The hippogriff makes two attacks: one with its beak and one with its claws."},{"name":"Beak","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 8 (1d10 + 3) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) slashing damage."}]},{"name":"Hobgoblin","size":"Medium","type":"Humanoid (goblinoid)","alignment":"lawful evil","AC":"18 (chain mail, shield)","HP":"11 (2d8+2)","speed":"30 ft.","strength":13,"dexterity":12,"constitution":12,"intelligence":10,"wisdom":10,"charisma":9,"senses":"darkvision 60 ft.","languages":"Common, Goblin","challenge":"1/2","traits":[{"name":"Martial Advantage","text":"Once per turn, the hobgoblin can deal an extra 7 (2d6) damage to a creature it hits with a weapon attack if that creature is within 5 ft. of an ally of the hobgoblin that isn't incapacitated."}],"actions":[{"name":"Longsword","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 5 (1d8 + 1) slashing damage, or 6 (1d10 + 1) slashing damage if used with two hands."},{"name":"Longbow","text":"Ranged Weapon Attack: +3 to hit, range 150/600 ft., one target. Hit: 5 (1d8 + 1) piercing damage."}]},{"name":"Homunculus","size":"Tiny","type":"Construct","alignment":"neutral","AC":"13 (natural armor)","HP":"5 (2d4)","speed":"20 ft., fly 40 ft.","strength":4,"dexterity":15,"constitution":11,"intelligence":10,"wisdom":10,"charisma":7,"damageImmunities":"poison","conditionImmunities":"charmed, poisoned","senses":"darkvision 60 ft.","languages":"understands the languages of its creator but can't speak","challenge":"0","traits":[{"name":"Telepathic Bond","text":"While the homunculus is on the same plane of existence as its master, it can magically convey what it senses to its master, and the two can communicate telepathically."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 1 piercing damage, and the target must succeed on a DC 10 Constitution saving throw or be poisoned for 1 minute. If the saving throw fails by 5 or more, the target is instead poisoned for 5 (1d10) minutes and unconscious while poisoned in this way."}]},{"name":"Horned Devil","size":"Large","type":"Fiend (devil)","alignment":"lawful evil","AC":"18 (natural armor)","HP":"178 (17d10+85)","speed":"20 ft., fly 60 ft.","strength":22,"dexterity":17,"constitution":21,"intelligence":12,"wisdom":16,"charisma":17,"savingThrows":"Str +10, Dex +7, Wis +7, Cha +7","damageResistances":"cold; bludgeoning, piercing, and slashing from nonmagical attacks that aren't silvered","damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"darkvision 120 ft.","languages":"Infernal, telepathy 120 ft.","challenge":"11","traits":[{"name":"Devil's Sight","text":"Magical darkness doesn't impede the devil's darkvision."},{"name":"Magic Resistance","text":"The devil has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The devil makes three melee attacks: two with its fork and one with its tail. It can use Hurl Flame in place of any melee attack."},{"name":"Fork","text":"Melee Weapon Attack: +10 to hit, reach 10 ft., one target. Hit: 15 (2d8 + 6) piercing damage."},{"name":"Tail","text":"Melee Weapon Attack: +10 to hit, reach 10 ft., one target. Hit: 10 (1d8 + 6) piercing damage. If the target is a creature other than an undead or a construct, it must succeed on a DC 17 Constitution saving throw or lose 10 (3d6) hit points at the start of each of its turns due to an infernal wound. Each time the devil hits the wounded target with this attack, the damage dealt by the wound increases by 10 (3d6). Any creature can take an action to stanch the wound with a successful DC 12 Wisdom (Medicine) check. The wound also closes if the target receives magical healing."},{"name":"Hurl Flame","text":"Ranged Spell Attack: +7 to hit, range 150 ft., one target. Hit: 14 (4d6) fire damage. If the target is a flammable object that isn't being worn or carried, it also catches fire."}]},{"name":"Hunter Shark","size":"Large","type":"Beast","alignment":"unaligned","AC":"12 (natural armor)","HP":"45 (6d10+12)","speed":"0 ft., swim 40 ft.","strength":18,"dexterity":13,"constitution":15,"intelligence":1,"wisdom":10,"charisma":4,"skills":"Perception +2","senses":"darkvision 30 ft.","challenge":"2","traits":[{"name":"Blood Frenzy","text":"The shark has advantage on melee attack rolls against any creature that doesn't have all its hit points."},{"name":"Water Breathing","text":"The shark can breathe only underwater."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) piercing damage."}]},{"name":"Hydra","size":"Huge","type":"Monstrosity","alignment":"unaligned","AC":"15 (natural armor)","HP":"172 (15d12+75)","speed":"30 ft., swim 30 ft.","strength":20,"dexterity":12,"constitution":20,"intelligence":2,"wisdom":10,"charisma":7,"skills":"Perception +6","senses":"darkvision 60 ft.","challenge":"8","traits":[{"name":"Hold Breath","text":"The hydra can hold its breath for 1 hour."},{"name":"Multiple Heads","text":"The hydra has five heads. While it has more than one head, the hydra has advantage on saving throws against being blinded, charmed, deafened, frightened, stunned, and knocked unconscious.\nWhenever the hydra takes 25 or more damage in a single turn, one of its heads dies. If all its heads die, the hydra dies.\nAt the end of its turn, it grows two heads for each of its heads that died since its last turn, unless it has taken fire damage since its last turn. The hydra regains 10 hit points for each head regrown in this way."},{"name":"Reactive Heads","text":"For each head the hydra has beyond one, it gets an extra reaction that can be used only for opportunity attacks."},{"name":"Wakeful","text":"While the hydra sleeps, at least one of its heads is awake."}],"actions":[{"name":"Multiattack","text":"The hydra makes as many bite attacks as it has heads."},{"name":"Bite","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one target. Hit: 10 (1d10 + 5) piercing damage."}]},{"name":"Hyena","size":"Medium","type":"Beast","alignment":"unaligned","AC":"11","HP":"5 (1d8+1)","speed":"50 ft.","strength":11,"dexterity":13,"constitution":12,"intelligence":2,"wisdom":12,"charisma":5,"skills":"Perception +3","challenge":"0","traits":[{"name":"Pack Tactics","text":"The hyena has advantage on an attack roll against a creature if at least one of the hyena's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Bite","text":"Weapon Attack: +2 to hit, reach 5 ft., one target. Hit: 3 (1d6) piercing damage."}]},{"name":"Ice Devil","size":"Large","type":"Fiend (devil)","alignment":"lawful evil","AC":"18 (natural armor)","HP":"180 (19d10+76)","speed":"40 ft.","strength":21,"dexterity":14,"constitution":18,"intelligence":18,"wisdom":15,"charisma":18,"savingThrows":"Dex +7, Con +9, Wis +7, Cha +9","damageResistances":"bludgeoning, piercing, and slashing from nonmagical attacks that aren't silvered","damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"blindsight 60 ft., darkvision 120 ft.","languages":"Infernal, telepathy 120 ft.","challenge":"14","traits":[{"name":"Devil's Sight","text":"Magical darkness doesn't impede the devil's darkvision."},{"name":"Magic Resistance","text":"The devil has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The devil makes three attacks: one with its bite, one with its claws, and one with its tail."},{"name":"Bite","text":"Melee Weapon Attack: +10 to hit, reach 5 ft., one target. Hit: 12 (2d6 + 5) piercing damage plus 10 (3d6) cold damage."},{"name":"Claws","text":"Melee Weapon Attack: +10 to hit, reach 5 ft., one target. Hit: 10 (2d4 + 5) slashing damage plus 10 (3d6) cold damage."},{"name":"Tail","text":"Melee Weapon Attack:+10 to hit, reach 10 ft., one target. Hit: 12 (2d6 + 5) bludgeoning damage plus 10 (3d6) cold damage."},{"name":"Wall of Ice","text":"The devil magically forms an opaque wall of ice on a solid surface it can see within 60 feet of it. The wall is 1 foot thick and up to 30 feet long and 10 feet high, or it's a hemispherical dome up to 20 feet in diameter.\nWhen the wall appears, each creature in its space is pushed out of it by the shortest route. The creature chooses which side of the wall to end up on, unless the creature is incapacitated. The creature then makes a DC 17 Dexterity saving throw, taking 35 (10d6) cold damage on a failed save, or half as much damage on a successful one.\nThe wall lasts for 1 minute or until the devil is incapacitated or dies. The wall can be damaged and breached; each 10-foot section has AC 5, 30 hit points, vulnerability to fire damage, and immunity to acid, cold, necrotic, poison, and psychic damage. If a section is destroyed, it leaves behind a sheet of frigid air in the space the wall occupied. Whenever a creature finishes moving through the frigid air on a turn, willingly or otherwise, the creature must make a DC 17 Constitution saving throw, taking 17 (5d6) cold damage on a failed save, or half as much damage on a successful one. The frigid air dissipates when the rest of the wall vanishes."}]},{"name":"Ice Mephit","size":"Small","type":"Elemental","alignment":"neutral evil","AC":"11","HP":"21 (6d6)","speed":"30 ft., fly 30 ft.","strength":7,"dexterity":13,"constitution":10,"intelligence":9,"wisdom":11,"charisma":12,"skills":"Perception +2, Stealth +3","damageVulnerabilities":"bludgeoning, fire","damageImmunities":"cold, poison","conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"Aquan, Auran","challenge":"1/2","traits":[{"name":"Death Burst","text":"When the mephit dies, it explodes in a burst of jagged ice. Each creature within 5 ft. of it must make a DC 10 Dexterity saving throw, taking 4 (1d8) slashing damage on a failed save, or half as much damage on a successful one."},{"name":"False Appearance","text":"While the mephit remains motionless, it is indistinguishable from an ordinary shard of ice."},{"name":"Innate Spellcasting","text":"The mephit can innately cast fog cloud, requiring no material components. Its innate spellcasting ability is Charisma.","recharge":"1/Day"}],"actions":[{"name":"Claws","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one creature. Hit: 3 (1d4 + 1) slashing damage plus 2 (1d4) cold damage."},{"name":"Frost Breath","text":"The mephit exhales a 15-foot cone of cold air. Each creature in that area must succeed on a DC 10 Dexterity saving throw, taking 5 (2d4) cold damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 6"},{"name":"Variant: Summon Mephits","text":"The mephit has a 25 percent chance of summoning 1d4 mephits of its kind. A summoned mephit appears in an unoccupied space within 60 feet of its summoner, acts as an ally of its summoner, and can't summon other mephits. It remains for 1 minute, until it or its summoner dies, or until its summoner dismisses it as an action.","recharge":"1/Day"}]},{"name":"Imp","size":"Tiny","type":"Fiend (devil)","alignment":"lawful evil","AC":"13","HP":"10 (3d4+3)","speed":"20 ft., fly 40 ft.","strength":6,"dexterity":17,"constitution":13,"intelligence":11,"wisdom":12,"charisma":14,"skills":"Deception +4, Insight +3, Persuasion +4, Stealth +5","damageResistances":"cold; bludgeoning, piercing, and slashing from nonmagical/nonsilver weapons","damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"darkvision 120 ft.","languages":"Infernal, Common","challenge":"1","traits":[{"name":"Shapechanger","text":"The imp can use its action to polymorph into a beast form that resembles a rat (speed 20 ft.), a raven (20 ft., fly 60 ft.), or a spider (20 ft., climb 20 ft.), or back into its true form. Its statistics are the same in each form, except for the speed changes noted. Any equipment it is wearing or carrying isn't transformed. It reverts to its true form if it dies."},{"name":"Devil's Sight","text":"Magical darkness doesn't impede the imp's darkvision."},{"name":"Magic Resistance","text":"The imp has advantage on saving throws against spells and other magical effects."},{"name":"Variant: Familiar","text":"The imp can serve another creature as a familiar, forming a telepathic bond with its willing master. While the two are bonded, the master can sense what the quasit senses as long as they are within 1 mile of each other. While the imp is within 10 feet of its master, the master shares the quasit's Magic Resistance trait. At any time and for any reason, the imp can end its service as a familiar, ending the telepathic bond."}],"actions":[{"name":"Sting","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 5 (1d4 + 3) piercing damage, and the target must make on a DC 11 Constitution saving throw, taking 10 (3d6) poison damage on a failed save, or half as much damage on a successful one.","recharge":"Bite in Beast Form"},{"name":"Invisibility","text":"The imp magically turns invisible until it attacks, or until its concentration ends (as if concentrating on a spell). Any equipment the imp wears or carries is invisible with it."}]},{"name":"Invisible Stalker","size":"Medium","type":"Elemental","alignment":"neutral","AC":"14","HP":"104 (16d8+32)","speed":"50 ft., fly 50 ft. (hover)","strength":16,"dexterity":19,"constitution":14,"intelligence":10,"wisdom":15,"charisma":11,"skills":"Perception +8, Stealth +10","damageResistances":"bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"poison","conditionImmunities":"exhaustion, grappled, paralyzed, petrified, poisoned, prone, restrained, unconscious","senses":"darkvision 60 ft.","languages":"Auran, understands Common but doesn't speak it","challenge":"6","traits":[{"name":"Invisibility","text":"The stalker is invisible."},{"name":"Faultless Tracker","text":"The stalker is given a quarry by its summoner. The stalker knows the direction and distance to its quarry as long as the two of them are on the same plane of existence. The stalker also knows the location of its summoner."}],"actions":[{"name":"Multiattack","text":"The stalker makes two slam attacks."},{"name":"Slam","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) bludgeoning damage."}]},{"name":"Iron Golem","size":"Large","type":"Construct","alignment":"unaligned","AC":"20 (natural armor)","HP":"210 (20d10+100)","speed":"30 ft.","strength":24,"dexterity":9,"constitution":20,"intelligence":3,"wisdom":11,"charisma":1,"damageImmunities":"fire, poison, psychic; bludgeoning, piercing, and slashing from nonmagical attacks that aren't adamantine","conditionImmunities":"charmed, exhaustion, frightened, paralyzed, petrified, poisoned","senses":"darkvision 120 ft.","languages":"understands the languages of its creator but can't speak","challenge":"16","traits":[{"name":"Fire Absorption","text":"Whenever the golem is subjected to fire damage, it takes no damage and instead regains a number of hit points equal to the fire damage dealt."},{"name":"Immutable Form","text":"The golem is immune to any spell or effect that would alter its form."},{"name":"Magic Resistance","text":"The golem has advantage on saving throws against spells and other magical effects."},{"name":"Magic Weapons","text":"The golem's weapon attacks are magical."}],"actions":[{"name":"Multiattack","text":"The golem makes two melee attacks."},{"name":"Slam","text":"Melee Weapon Attack: +13 to hit, reach 5 ft., one target. Hit: 20 (3d8 + 7) bludgeoning damage."},{"name":"Sword","text":"Melee Weapon Attack: +13 to hit, reach 10 ft., one target. Hit: 23 (3d10 + 7) slashing damage."},{"name":"Poison Breath","text":"The golem exhales poisonous gas in a 15-foot cone. Each creature in that area must make a DC 19 Constitution saving throw, taking 45 (10d8) poison damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Jackal","size":"Small","type":"Beast","alignment":"unaligned","AC":"12","HP":"3 (1d6)","speed":"40 ft.","strength":8,"dexterity":15,"constitution":11,"intelligence":3,"wisdom":12,"charisma":6,"skills":"Perception +3","challenge":"0","traits":[{"name":"Keen Hearing and Smell","text":"The jackal has advantage on Wisdom (Perception) checks that rely on hearing or smell."},{"name":"Pack Tactics","text":"The jackal has advantage on an attack roll against a creature if at least one of the jackal's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +1 to hit, reach 5 ft., one target. Hit: 1 (1d4 - 1) piercing damage."}]},{"name":"Killer Whale","size":"Huge","type":"Beast","alignment":"unaligned","AC":"12 (natural armor)","HP":"90 (12d12+12)","speed":"0 ft., swim 60 ft.","strength":19,"dexterity":10,"constitution":13,"intelligence":3,"wisdom":12,"charisma":7,"skills":"Perception +3","senses":"blindsight 120 ft.","challenge":"3","traits":[{"name":"Echolocation","text":"The whale can't use its blindsight while deafened."},{"name":"Hold Breath","text":"The whale can hold its breath for 30 minutes"},{"name":"Keen Hearing","text":"The whale has advantage on Wisdom (Perception) checks that rely on hearing."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 21 (5d6 + 4) piercing damage."}]},{"name":"Knight","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"18 (plate)","HP":"52 (8d8+16)","speed":"30 ft.","strength":16,"dexterity":11,"constitution":14,"intelligence":11,"wisdom":11,"charisma":15,"savingThrows":"Con +4, Wis +2","languages":"any one language (usually Common)","challenge":"3","traits":[{"name":"Brave","text":"The knight has advantage on saving throws against being frightened."}],"actions":[{"name":"Multiattack","text":"The knight makes two melee attacks."},{"name":"Greatsword","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) slashing damage."},{"name":"Heavy Crossbow","text":"Ranged Weapon Attack: +2 to hit, range 100/400 ft., one target. Hit: 5 (1d10) piercing damage."},{"name":"Leadership","text":"For 1 minute, the knight can utter a special command or warning whenever a nonhostile creature that it can see within 30 ft. of it makes an attack roll or a saving throw. The creature can add a d4 to its roll provided it can hear and understand the knight. A creature can benefit from only one Leadership die at a time. This effect ends if the knight is incapacitated.","recharge":"Recharges after a Short or Long Rest"}],"reactions":[{"name":"Parry","text":"The knight adds 2 to its AC against one melee attack that would hit it. To do so, the knight must see the attacker and be wielding a melee weapon."}]},{"name":"Kobold","size":"Small","type":"Humanoid (kobold)","alignment":"lawful evil","AC":"12","HP":"5 (2d6-2)","speed":"30 ft.","strength":7,"dexterity":15,"constitution":9,"intelligence":8,"wisdom":7,"charisma":8,"senses":"darkvision 60 ft.","languages":"Common, Draconic","challenge":"1/8","traits":[{"name":"Sunlight Sensitivity","text":"While in sunlight, the kobold has disadvantage on attack rolls, as well as on Wisdom (Perception) checks that rely on sight."},{"name":"Pack Tactics","text":"The kobold has advantage on an attack roll against a creature if at least one of the kobold's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Dagger","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 4 (1d4 + 2) piercing damage."},{"name":"Sling","text":"Ranged Weapon Attack: +4 to hit, range 30/120 ft., one target. Hit: 4 (1d4 + 2) bludgeoning damage."}]},{"name":"Kraken","size":"Gargantuan","type":"Monstrosity (titan)","alignment":"chaotic evil","AC":"18 (natural armor)","HP":"472 (27d20+189)","speed":"20 ft., swim 60 ft.","strength":30,"dexterity":11,"constitution":25,"intelligence":22,"wisdom":18,"charisma":20,"savingThrows":"Str +17, Dex +8, Con +15, Int +14, Wis +11","damageImmunities":"lightning; bludgeoning, piercing, and slashing from nonmagical attacks","conditionImmunities":"frightened, paralyzed","senses":"truesight 120 ft.","languages":"understands Abyssal, Celestial, Infernal, and Primordial but can't speak, telepathy 120 ft.","challenge":"23","traits":[{"name":"Amphibious","text":"The kraken can breathe air and water."},{"name":"Freedom of Movement","text":"The kraken ignores difficult terrain, and magical effects can't reduce its speed or cause it to be restrained. It can spend 5 feet of movement to escape from nonmagical restraints or being grappled."},{"name":"Siege Monster","text":"The kraken deals double damage to objects and structures."}],"actions":[{"name":"Multiattack","text":"The kraken makes three tentacle attacks, each of which it can replace with one use of Fling."},{"name":"Bite","text":"Melee Weapon Attack: +17 to hit, reach 5 ft., one target. Hit: 23 (3d8 + 10) piercing damage. If the target is a Large or smaller creature grappled by the kraken, that creature is swallowed, and the grapple ends. While swallowed, the creature is blinded and restrained, it has total cover against attacks and other effects outside the kraken, and it takes 42 (12d6) acid damage at the start of each of the kraken's turns. If the kraken takes 50 damage or more on a single turn from a creature inside it, the kraken must succeed on a DC 25 Constitution saving throw at the end of that turn or regurgitate all swallowed creatures, which fall prone in a space within 10 feet of the kraken. If the kraken dies, a swallowed creature is no longer restrained by it and can escape from the corpse using 15 feet of movement, exiting prone."},{"name":"Tentacle","text":"Melee Weapon Attack: +17 to hit, reach 30 ft., one target. Hit: 20 (3d6 + 10) bludgeoning damage, and the target is grappled (escape DC 18). Until this grapple ends, the target is restrained. The kraken has ten tentacles, each of which can grapple one target."},{"name":"Fling","text":"One Large or smaller object held or creature grappled by the kraken is thrown up to 60 feet in a random direction and knocked prone. If a thrown target strikes a solid surface, the target takes 3 (1d6) bludgeoning damage for every 10 feet it was thrown. If the target is thrown at another creature, that creature must succeed on a DC 18 Dexterity saving throw or take the same damage and be knocked prone."},{"name":"Lightning Storm","text":"The kraken magically creates three bolts of lightning, each of which can strike a target the kraken can see within 120 feet of it. A target must make a DC 23 Dexterity saving throw, taking 22 (4d10) lightning damage on a failed save, or half as much damage on a successful one."}],"legendaryPoints":3,"legendaryActions":[{"name":"Tentacle Attack or Fling","text":"The kraken makes one tentacle attack or uses its Fling.","cost":1},{"name":"Lightning Storm","text":"The kraken uses Lightning Storm.","cost":2},{"name":"Ink Cloud","text":"While underwater, the kraken expels an ink cloud in a 60-foot radius. The cloud spreads around corners, and that area is heavily obscured to creatures other than the kraken. Each creature other than the kraken that ends its turn there must succeed on a DC 23 Constitution saving throw, taking 16 (3d10) poison damage on a failed save, or half as much damage on a successful one. A strong current disperses the cloud, which otherwise disappears at the end of the kraken's next turn.","cost":3}]},{"name":"Lamia","size":"Large","type":"Monstrosity","alignment":"chaotic evil","AC":"13 (natural armor)","HP":"97 (13d10+26)","speed":"30 ft.","strength":16,"dexterity":13,"constitution":15,"intelligence":14,"wisdom":15,"charisma":16,"skills":"Deception +7, Insight +4, Stealth +3","senses":"darkvision 60 ft.","languages":"Abyssal, Common","challenge":"4","traits":[{"name":"Innate Spellcasting","text":"The lamia's innate spellcasting ability is Charisma (spell save DC 13). It can innately cast the following spells, requiring no material components.\n • At will: disguise self (any humanoid form), major image\n • 3/day each: charm person, mirror image, scrying, suggestion\n • 1/day: geas"}],"actions":[{"name":"Multiattack","text":"The lamia makes two attacks: one with its claws and one with its dagger or Intoxicating Touch."},{"name":"Claws","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 14 (2d10 + 3) slashing damage."},{"name":"Dagger","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 5 (1d4 + 3) piercing damage."},{"name":"Intoxicating Touch","text":"Melee Spell Attack: +5 to hit, reach 5 ft., one creature. Hit: The target is magically cursed for 1 hour. Until the curse ends, the target has disadvantage on Wisdom saving throws and all ability checks."}],"spells":"disguise self, major image, charm person, mirror image, scrying, suggestion, geas"},{"name":"Lemure","size":"Medium","type":"Fiend (devil)","alignment":"lawful evil","AC":"7","HP":"13 (3d8)","speed":"15 ft.","strength":10,"dexterity":5,"constitution":11,"intelligence":1,"wisdom":11,"charisma":3,"damageResistances":"cold","damageImmunities":"fire, poison","conditionImmunities":"charmed, frightened, poisoned","senses":"darkvision 120 ft.","languages":"understands infernal but can't speak","challenge":"0","traits":[{"name":"Devil's Sight","text":"Magical darkness doesn't impede the lemure's darkvision."},{"name":"Hellish Rejuvenation","text":"A lemure that dies in the Nine Hells comes back to life with all its hit points in 1d10 days unless it is killed by a good-aligned creature with a bless spell cast on that creature or its remains are sprinkled with holy water."}]},{"name":"Lich","size":"Medium","type":"Undead","alignment":"any evil alignment","AC":"17 (natural armor)","HP":"135 (18d8+54)","speed":"30 ft.","strength":11,"dexterity":16,"constitution":16,"intelligence":20,"wisdom":14,"charisma":16,"savingThrows":"Con +10, Int +12, Wis +9","skills":"Arcana +18, History +12, Insight +9, Perception +9","damageResistances":"cold, lightning, necrotic","damageImmunities":"poison; bludgeoning, piercing, and slashing from nonmagical attacks","conditionImmunities":"charmed, exhaustion, frightened, paralyzed, poisoned","senses":"truesight 120 ft.","languages":"Common plus up to five other languages","challenge":"21","traits":[{"name":"Legendary Resistance","text":"If the lich fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"},{"name":"Rejuvenation","text":"If it has a phylactery, a destroyed lich gains a new body in 1d10 days, regaining all its hit points and becoming active again. The new body appears within 5 feet of the phylactery."},{"name":"Spellcasting","text":"The lich is an 18th-level spellcaster. Its spellcasting ability is Intelligence (spell save DC 20, +12 to hit with spell attacks). The lich has the following wizard spells prepared:\nCantrips (at will): mage hand, prestidigitation, ray of frost\n1st level (4 slots): detect magic, magic missile, shield, thunderwave\n2nd level (3 slots): detect thoughts, invisibility, Melf's acid arrow, mirror image\n3rd level (3 slots): animate dead, counterspell, dispel magic, fireball\n4th level (3 slots): blight, dimension door\n5th level (3 slots): cloudkill, scrying\n6th level (1 slot): disintegrate, globe of invulnerability\n7th level (1 slot): finger of death, plane shift\n8th level (1 slot): dominate monster, power word stun\n9th level (1 slot): power word kill"},{"name":"Turn Resistance","text":"The lich has advantage on saving throws against any effect that turns undead."}],"actions":[{"name":"Paralyzing Touch","text":"Melee Spell Attack: +12 to hit, reach 5 ft., one creature. Hit: 10 (3d6) cold damage. The target must succeed on a DC 18 Constitution saving throw or be paralyzed for 1 minute. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."}],"legendaryPoints":3,"legendaryActions":[{"name":"Cantrip","text":"The lich casts a cantrip.","cost":1},{"name":"Paralyzing Touch","text":"The lich uses its Paralyzing Touch.","cost":2},{"name":"Frightening Gaze","text":"The lich fixes its gaze on one creature it can see within 10 feet of it. The target must succeed on a DC 18 Wisdom saving throw against this magic or become frightened for 1 minute. The frightened target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a target's saving throw is successful or the effect ends for it, the target is immune to the lich's gaze for the next 24 hours.","cost":2},{"name":"Disrupt Life","text":"Each living creature within 20 feet of the lich must make a DC 18 Constitution saving throw against this magic, taking 21 (6d6) necrotic damage on a failed save, or half as much damage on a successful one.","cost":3}],"spells":"mage hand, prestidigitation, ray of frost, detect magic, magic missile, shield, thunderwave, detect thoughts, invisibility, Melf's acid arrow, mirror image, animate dead, counterspell, dispel magic, fireball, blight, dimension door, cloudkill, scrying, disintegrate, globe of invulnerability, finger of death, plane shift, dominate monster, power word stun, power word kill"},{"name":"Lion","size":"Large","type":"Beast","alignment":"unaligned","AC":"12","HP":"26 (4d10+4)","speed":"50 ft.","strength":17,"dexterity":15,"constitution":13,"intelligence":3,"wisdom":12,"charisma":8,"skills":"Perception +3, Stealth +6","challenge":"1","traits":[{"name":"Keen Smell","text":"The lion has advantage on Wisdom (Perception) checks that rely on smell."},{"name":"Pack Tactics","text":"The lion has advantage on an attack roll against a creature if at least one of the lion's allies is within 5 ft. of the creature and the ally isn't incapacitated."},{"name":"Pounce","text":"If the lion moves at least 20 ft. straight toward a creature and then hits it with a claw attack on the same turn, that target must succeed on a DC 13 Strength saving throw or be knocked prone. If the target is prone, the lion can make one bite attack against it as a bonus action."},{"name":"Running Leap","text":"With a 10-foot running start, the lion can long jump up to 25 ft.."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 7 (1d8 + 3) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) slashing damage."}]},{"name":"Lizard","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"10","HP":"2 (1d4)","speed":"20 ft., climb 20 ft.","strength":2,"dexterity":11,"constitution":10,"intelligence":1,"wisdom":8,"charisma":3,"senses":"darkvision 30 ft.","challenge":"0","actions":[{"name":"Bite","text":"Melee Weapon Attack: +0 to hit, reach 5 ft., one target. Hit: 1 piercing damage."}]},{"name":"Lizardfolk","size":"Medium","type":"Humanoid (lizardfolk)","alignment":"neutral","AC":"15 (natural armor, shield)","HP":"22 (4d8+4)","speed":"30 ft., swim 30 ft.","strength":15,"dexterity":10,"constitution":13,"intelligence":7,"wisdom":12,"charisma":7,"skills":"Perception +3, Stealth +4, Survival +5","languages":"Draconic","challenge":"1/2","traits":[{"name":"Hold Breath","text":"The lizardfolk can hold its breath for 15 minutes."}],"actions":[{"name":"Multiattack","text":"The lizardfolk makes two melee attacks, each one with a different weapon."},{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage."},{"name":"Heavy Club","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) bludgeoning damage."},{"name":"Javelin","text":"Melee or Ranged Weapon Attack: +4 to hit, reach 5 ft. or range 30/120 ft., one target. Hit: 5 (1d6 + 2) piercing damage."},{"name":"Spiked Shield","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage."}]},{"name":"Mage","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"12 (15 with mage armor)","HP":"40 (9d8)","speed":"30 ft.","strength":9,"dexterity":14,"constitution":11,"intelligence":17,"wisdom":12,"charisma":11,"savingThrows":"Int +6, Wis +4","skills":"Arcana +6, History +6","languages":"any four languages","challenge":"6","traits":[{"name":"Spellcasting","text":"The mage is a 9th-level spellcaster. Its spellcasting ability is Intelligence (spell save DC 14, +6 to hit with spell attacks). The mage has the following wizard spells prepared:\nCantrips (at will): fire bolt, light, mage hand, prestidigitation\n1st level (4 slots): detect magic, mage armor, magic missile, shield\n2nd level (3 slots): misty step, suggestion\n3rd level (3 slots): counterspell, fireball, fly\n4th level (3 slots): greater invisibility, ice storm\n5th level (1 slot): cone of cold"}],"actions":[{"name":"Dagger","text":"Melee or Ranged Weapon Attack: +5 to hit, reach 5 ft. or range 20/60 ft., one target. Hit: 4 (1d4 + 2) piercing damage."}],"spells":"fire bolt, light, mage hand, prestidigitation, detect magic, mage armor, magic missile, shield, misty step, suggestion, counterspell, fireball, fly, greater invisibility, ice storm, cone of cold"},{"name":"Magma Mephit","size":"Small","type":"Elemental","alignment":"neutral evil","AC":"11","HP":"22 (5d6+5)","speed":"30 ft., fly 30 ft.","strength":8,"dexterity":12,"constitution":12,"intelligence":7,"wisdom":10,"charisma":10,"skills":"Stealth +3","damageVulnerabilities":"cold","damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"Ignan, Terran","challenge":"1/2","traits":[{"name":"Death Burst","text":"When the mephit dies, it explodes in a burst of lava. Each creature within 5 ft. of it must make a DC 11 Dexterity saving throw, taking 7 (2d6) fire damage on a failed save, or half as much damage on a successful one."},{"name":"False Appearance","text":"While the mephit remains motionless, it is indistinguishable from an ordinary mound of magma."},{"name":"Innate Spellcasting","text":"The mephit can innately cast heat metal (spell save DC 10), requiring no material components. Its innate spellcasting ability is Charisma.","recharge":"1/Day"}],"actions":[{"name":"Claws","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one creature. Hit: 3 (1d4 + 1) slashing damage plus 2 (1d4) fire damage."},{"name":"Fire Breath","text":"The mephit exhales a 15-foot cone of fire. Each creature in that area must make a DC 11 Dexterity saving throw, taking 7 (2d6) fire damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 6"},{"name":"Variant: Summon Mephits","text":"The mephit has a 25 percent chance of summoning 1d4 mephits of its kind. A summoned mephit appears in an unoccupied space within 60 feet of its summoner, acts as an ally of its summoner, and can't summon other mephits. It remains for 1 minute, until it or its summoner dies, or until its summoner dismisses it as an action.","recharge":"1/Day"}]},{"name":"Magmin","size":"Small","type":"Elemental","alignment":"chaotic neutral","AC":"14 (natural armor)","HP":"9 (2d6+2)","speed":"30 ft.","strength":7,"dexterity":15,"constitution":12,"intelligence":8,"wisdom":11,"charisma":10,"damageResistances":"bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"fire","senses":"darkvision 60 ft.","languages":"Ignan","challenge":"1/2","traits":[{"name":"Death Burst","text":"When the magmin dies, it explodes in a burst of fire and magma. Each creature within 10 ft. of it must make a DC 11 Dexterity saving throw, taking 7 (2d6) fire damage on a failed save, or half as much damage on a successful one. Flammable objects that aren't being worn or carried in that area are ignited."},{"name":"Ignited Illumination","text":"As a bonus action, the magmin can set itself ablaze or extinguish its flames. While ablaze, the magmin sheds bright light in a 10-foot radius and dim light for an additional 10 ft."}],"actions":[{"name":"Touch","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (2d6) fire damage. If the target is a creature or a flammable object, it ignites. Until a target takes an action to douse the fire, the target takes 3 (1d6) fire damage at the end of each of its turns."}]},{"name":"Mammoth","size":"Huge","type":"Beast","alignment":"unaligned","AC":"13 (natural armor)","HP":"126 (11d12+55)","speed":"40 ft.","strength":24,"dexterity":9,"constitution":21,"intelligence":3,"wisdom":11,"charisma":6,"challenge":"6","traits":[{"name":"Trampling Charge","text":"If the mammoth moves at least 20 ft. straight toward a creature and then hits it with a gore attack on the same turn, that target must succeed on a DC 18 Strength saving throw or be knocked prone. If the target is prone, the mammoth can make one stomp attack against it as a bonus action."}],"actions":[{"name":"Gore","text":"Melee Weapon Attack: +10 to hit, reach 10 ft., one target. Hit: 25 (4d8 + 7) piercing damage."},{"name":"Stomp","text":"Melee Weapon Attack: +10 to hit, reach 5 ft., one prone creature. Hit: 29 (4d10 + 7) bludgeoning damage."}]},{"name":"Manticore","size":"Large","type":"Monstrosity","alignment":"lawful evil","AC":"14 (natural armor)","HP":"68 (8d10+24)","speed":"30 ft., fly 50 ft.","strength":17,"dexterity":16,"constitution":17,"intelligence":7,"wisdom":12,"charisma":8,"senses":"darkvision 60 ft.","challenge":"3","traits":[{"name":"Tail Spike Regrowth","text":"The manticore has twenty-four tail spikes. Used spikes regrow when the manticore finishes a long rest."}],"actions":[{"name":"Multiattack","text":"The manticore makes three attacks: one with its bite and two with its claws or three with its tail spikes."},{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 7 (1d8 + 3) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) slashing damage."},{"name":"Tail Spike","text":"Ranged Weapon Attack: +5 to hit, range 100/200 ft., one target. Hit: 7 (1d8 + 3) piercing damage."}]},{"name":"Marilith","size":"Large","type":"Fiend (demon)","alignment":"chaotic evil","AC":"18 (natural armor)","HP":"189 (18d10+90)","speed":"40 ft.","strength":18,"dexterity":20,"constitution":20,"intelligence":18,"wisdom":16,"charisma":20,"savingThrows":"Str +9, Con +10, Wis +8, Cha +10","damageResistances":"cold, fire, lightning; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"truesight 120 ft.","languages":"Abyssal, telepathy 120 ft.","challenge":"16","traits":[{"name":"Magic Resistance","text":"The marilith has advantage on saving throws against spells and other magical effects."},{"name":"Magic Weapons","text":"The marilith's weapon attacks are magical."},{"name":"Reactive","text":"The marilith can take one reaction on every turn in combat."}],"actions":[{"name":"Multiattack","text":"The marilith can make seven attacks: six with its longsword and one with its tail."},{"name":"Longsword","text":"Melee Weapon Attack: +9 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) slashing damage."},{"name":"Tail","text":"Melee Weapon Attack: +9 to hit, reach 10 ft., one creature. Hit: 15 (2d10 + 4) bludgeoning damage. If the target is Medium or smaller, it is grappled (escape DC 19). Until this grapple ends, the target is restrained, the marilith can automatically hit the target with its tail, and the marilith can't make tail attacks against other targets."},{"name":"Teleport","text":"The marilith magically teleports, along with any equipment it is wearing or carrying, up to 120 feet to an unoccupied space it can see."},{"name":"Variant: Summon Demon","text":"The demon chooses what to summon and attempts a magical summoning.\nA marilith has a 50 percent chance of summoning 1d6 vrocks, 1d4 hezrous, 1d3 glabrezus, 1d2 nalfeshnees, or one marilith.\nA summoned demon appears in an unoccupied space within 60 feet of its summoner, acts as an ally of its summoner, and can't summon other demons. It remains for 1 minute, until it or its summoner dies, or until its summoner dismisses it as an action.","recharge":"1/Day"}],"reactions":[{"name":"Parry","text":"The marilith adds 5 to its AC against one melee attack that would hit it. To do so, the marilith must see the attacker and be wielding a melee weapon."}]},{"name":"Mastiff","size":"Medium","type":"Beast","alignment":"unaligned","AC":"12","HP":"5 (1d8+1)","speed":"40 ft.","strength":13,"dexterity":14,"constitution":12,"intelligence":3,"wisdom":12,"charisma":7,"skills":"Perception +3","challenge":"1/8","traits":[{"name":"Keen Hearing and Smell","text":"The mastiff has advantage on Wisdom (Perception) checks that rely on hearing or smell."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 4 (1d6 + 1) piercing damage. If the target is a creature, it must succeed on a DC 11 Strength saving throw or be knocked prone."}]},{"name":"Medusa","size":"Medium","type":"Monstrosity","alignment":"lawful evil","AC":"15 (natural armor)","HP":"127 (17d8+51)","speed":"30 ft.","strength":10,"dexterity":15,"constitution":16,"intelligence":12,"wisdom":13,"charisma":15,"skills":"Deception +5, Insight +4, Perception +4, Stealth +5","senses":"darkvision 60 ft.","languages":"Common","challenge":"6","traits":[{"name":"Petrifying Gaze","text":"When a creature that can see the medusa's eyes starts its turn within 30 ft. of the medusa, the medusa can force it to make a DC 14 Constitution saving throw if the medusa isn't incapacitated and can see the creature. If the saving throw fails by 5 or more, the creature is instantly petrified. Otherwise, a creature that fails the save begins to turn to stone and is restrained. The restrained creature must repeat the saving throw at the end of its next turn, becoming petrified on a failure or ending the effect on a success. The petrification lasts until the creature is freed by the greater restoration spell or other magic.\nUnless surprised, a creature can avert its eyes to avoid the saving throw at the start of its turn. If the creature does so, it can't see the medusa until the start of its next turn, when it can avert its eyes again. If the creature looks at the medusa in the meantime, it must immediately make the save.\nIf the medusa sees itself reflected on a polished surface within 30 ft. of it and in an area of bright light, the medusa is, due to its curse, affected by its own gaze."}],"actions":[{"name":"Multiattack","text":"The medusa makes either three melee attacks — one with its snake hair and two with its shortsword — or two ranged attacks with its longbow."},{"name":"Snake Hair","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one creature. Hit: 4 (1d4 + 2) piercing damage plus 14 (4d6) poison damage."},{"name":"Shortsword","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage."},{"name":"Longbow","text":"Ranged Weapon Attack: +5 to hit, range 150/600 ft., one target. Hit: 6 (1d8 + 2) piercing damage plus 7 (2d6) poison damage."}]},{"name":"Merfolk","size":"Medium","type":"Humanoid (merfolk)","alignment":"neutral","AC":"11","HP":"11 (2d8+2)","speed":"10 ft., swim 40 ft.","strength":10,"dexterity":13,"constitution":12,"intelligence":11,"wisdom":11,"charisma":12,"skills":"Perception +2","languages":"Aquan, Common","challenge":"1/8","traits":[{"name":"Amphibious","text":"The merfolk can breathe air and water."}],"actions":[{"name":"Spear","text":"Melee or Ranged Weapon Attack: +2 to hit, reach 5 ft. or range 20/60 ft., one target. Hit: 3 (1d6) piercing damage, or 4 (1d8) piercing damage if used with two hands to make a melee attack."}]},{"name":"Merrow","size":"Large","type":"Monstrosity","alignment":"chaotic evil","AC":"13 (natural armor)","HP":"45 (6d10+12)","speed":"10 ft., swim 40 ft.","strength":18,"dexterity":10,"constitution":15,"intelligence":8,"wisdom":10,"charisma":9,"senses":"darkvision 60 ft.","languages":"Abyssal, Aquan","challenge":"2","traits":[{"name":"Amphibious","text":"The merrow can breathe air and water."}],"actions":[{"name":"Multiattack","text":"The merrow makes two attacks: one with its bite and one with its claws or harpoon."},{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 8 (1d8 + 4) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 9 (2d4 + 4) slashing damage."},{"name":"Harpoon","text":"Melee or Ranged Weapon Attack: +6 to hit, reach 5 ft. or range 20/60 ft., one target. Hit: 11 (2d6 + 4) piercing damage. If the target is a Huge or smaller creature, it must succeed on a Strength contest against the merrow or be pulled up to 20 feet toward the merrow."}]},{"name":"Mimic","size":"Medium","type":"Monstrosity (shapechanger)","alignment":"neutral","AC":"12 (natural armor)","HP":"58 (9d8+18)","speed":"15 ft.","strength":17,"dexterity":12,"constitution":15,"intelligence":5,"wisdom":13,"charisma":8,"skills":"Stealth +5","damageImmunities":"acid","conditionImmunities":"prone","senses":"darkvision 60 ft.","challenge":"2","traits":[{"name":"Shapechanger","text":"The mimic can use its action to polymorph into an object or back into its true, amorphous form. Its statistics are the same in each form. Any equipment it is wearing or carrying isn 't transformed. It reverts to its true form if it dies."},{"name":"Adhesive","text":"The mimic adheres to anything that touches it. A Huge or smaller creature adhered to the mimic is also grappled by it (escape DC 13). Ability checks made to escape this grapple have disadvantage.","recharge":"Object Form Only"},{"name":"False Appearance","text":"While the mimic remains motionless, it is indistinguishable from an ordinary object.","recharge":"Object Form Only"},{"name":"Grappler","text":"The mimic has advantage on attack rolls against any creature grappled by it."}],"actions":[{"name":"Pseudopod","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 7 (1d8 + 3) bludgeoning damage. If the mimic is in object form, the target is subjected to its Adhesive trait."},{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 7 (1d8 + 3) piercing damage plus 4 (1d8) acid damage."}]},{"name":"Minotaur","size":"Large","type":"Monstrosity","alignment":"chaotic evil","AC":"14 (natural armor)","HP":"76 (9d10+27)","speed":"40 ft.","strength":18,"dexterity":11,"constitution":16,"intelligence":6,"wisdom":16,"charisma":9,"skills":"Perception +7","senses":"darkvision 60 ft.","languages":"Abyssal","challenge":"3","traits":[{"name":"Charge","text":"If the minotaur moves at least 10 ft. straight toward a target and then hits it with a gore attack on the same turn, the target takes an extra 9 (2d8) piercing damage. If the target is a creature, it must succeed on a DC 14 Strength saving throw or be pushed up to 10 ft. away and knocked prone."},{"name":"Labyrinthine Recall","text":"The minotaur can perfectly recall any path it has traveled."},{"name":"Reckless","text":"At the start of its turn, the minotaur can gain advantage on all melee weapon attack rolls it makes during that turn, but attack rolls against it have advantage until the start of its next turn."}],"actions":[{"name":"Greataxe","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 17 (2d12 + 4) slashing damage."},{"name":"Gore","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) piercing damage."}]},{"name":"Minotaur Skeleton","size":"Large","type":"Undead","alignment":"lawful evil","AC":"12 (natural armor)","HP":"67 (9d10+18)","speed":"40 ft.","strength":18,"dexterity":11,"constitution":15,"intelligence":6,"wisdom":8,"charisma":5,"damageVulnerabilities":"bludgeoning","damageImmunities":"poison","conditionImmunities":"exhaustion, poisoned","senses":"darkvision 60 ft.","languages":"understands Abyssal but can't speak","challenge":"2","traits":[{"name":"Charge","text":"If the skeleton moves at least 10 feet straight toward a target and then hits it with a gore attack on the same turn, the target takes an extra 9 (2d8) piercing damage. If the target is a creature, it must succeed on a DC 14 Strength saving throw or be pushed up to 10 feet away and knocked prone."}],"actions":[{"name":"Greataxe","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 17 (2d12 + 4) slashing damage."},{"name":"Gore","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) piercing damage."}]},{"name":"Mule","size":"Medium","type":"Beast","alignment":"unaligned","AC":"10","HP":"11 (2d8+2)","speed":"40 ft.","strength":14,"dexterity":10,"constitution":13,"intelligence":2,"wisdom":10,"charisma":5,"challenge":"1/8","traits":[{"name":"Beast of Burden","text":"The mule is considered to be a Large animal for the purpose of determining its carrying capacity."},{"name":"Sure-Footed","text":"The mule has advantage on Strength and Dexterity saving throws made against effects that would knock it prone."}],"actions":[{"name":"Hooves","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one target. Hit: 4 (1d4 + 2) bludgeoning damage."}]},{"name":"Mummy","size":"Medium","type":"Undead","alignment":"lawful evil","AC":"11 (natural armor)","HP":"58 (9d8+18)","speed":"20 ft.","strength":16,"dexterity":8,"constitution":15,"intelligence":6,"wisdom":10,"charisma":12,"savingThrows":"Wis +2","damageVulnerabilities":"fire","damageImmunities":"bludgeoning, piercing, and slashing from nonmagical attacks","conditionImmunities":"necrotic, poisoned","senses":"darkvision 60 ft.","languages":"the languages it knew in life","challenge":"3","actions":[{"name":"Multiattack","text":"The mummy can use its Dreadful Glare and makes one attack with its rotting fist."},{"name":"Rotting Fist","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) bludgeoning damage plus 10 (3d6) necrotic damage. If the target is a creature, it must succeed on a DC 12 Constitution saving throw or be cursed with mummy rot. The cursed target can't regain hit points, and its hit point maximum decreases by 10 (3d6) for every 24 hours that elapse. If the curse reduces the target's hit point maximum to 0, the target dies, and its body turns to dust. The curse lasts until removed by the remove curse spell or other magic."},{"name":"Dreadful Glare","text":"The mummy targets one creature it can see within 60 ft. of it. If the target can see the mummy, it must succeed on a DC 11 Wisdom saving throw against this magic or become frightened until the end of the mummy's next turn. If the target fails the saving throw by 5 or more, it is also paralyzed for the same duration. A target that succeeds on the saving throw is immune to the Dreadful Glare of all mummies (but not mummy lords) for the next 24 hours."}]},{"name":"Mummy Lord","size":"Medium","type":"Undead","alignment":"lawful evil","AC":"17 (natural armor)","HP":"97 (13d8+39)","speed":"20 ft.","strength":18,"dexterity":10,"constitution":17,"intelligence":11,"wisdom":18,"charisma":16,"savingThrows":"Con +8, Int +5, Wis +9, Cha +8","skills":"History +5, Religion +5","damageVulnerabilities":"bludgeoning","damageImmunities":"necrotic, poison; bludgeoning, piercing, and slashing from nonmagical attacks","conditionImmunities":"charmed, exhaustion, frightened, paralyzed, poisoned","senses":"darkvision 60 ft.","languages":"the languages it knew in life","challenge":"15","traits":[{"name":"Magic Resistance","text":"The mummy lord has advantage on saving throws against spells and other magical effects."},{"name":"Rejuvenation","text":"A destroyed mummy lord gains a new body in 24 hours if its heart is intact, regaining all its hit points and becoming active again. The new body appears within 5 feet of the mummy lord's heart."},{"name":"Spellcasting","text":"The mummy lord is a 10th-level spellcaster. Its spellcasting ability is Wisdom (spell save DC 17, +9 to hit with spell attacks). The mummy lord has the following cleric spells prepared:\nCantrips (at will): sacred flame, thaumaturgy\n1st level (4 slots): command, guiding bolt, shield of faith\n2nd level (3 slots): hold person, silence, spiritual weapon\n3rd level (3 slots): animate dead, dispel magic\n4th level (3 slots): divination, guardian of faith\n5th level (2 slots): contagion, insect plague\n6th level (1 slot): harm"}],"actions":[{"name":"Multiattack","text":"The mummy can use its Dreadful Glare and makes one attack with its rotting fist."},{"name":"Rotting Fist","text":"Melee Weapon Attack: +9 to hit, reach 5 ft., one target. Hit: 14 (3d6 + 4) bludgeoning damage plus 21 (6d6) necrotic damage. If the target is a creature, it must succeed on a DC 16 Constitution saving throw or be cursed with mummy rot. The cursed target can't regain hit points, and its hit point maximum decreases by 10 (3d6) for every 24 hours that elapse. If the curse reduces the target's hit point maximum to 0, the target dies, and its body turns to dust. The curse lasts until removed by the remove curse spell or other magic."},{"name":"Dreadful Glare","text":"The mummy lord targets one creature it can see within 60 feet of it. If the target can see the mummy lord, it must succeed on a DC 16 Wisdom saving throw against this magic or become frightened until the end of the mummy's next turn. If the target fails the saving throw by 5 or more, it is also paralyzed for the same duration. A target that succeeds on the saving throw is immune to the Dreadful Glare of all mummies and mummy lords for the next 24 hours."}],"legendaryPoints":3,"legendaryActions":[{"name":"Attack","text":"The mummy lord makes one attack with its rotting fist or uses its Dreadful Glare.","cost":1},{"name":"Blinding Dust","text":"Blinding dust and sand swirls magically around the mummy lord. Each creature within 5 feet of the mummy lord must succeed on a DC 16 Constitution saving throw or be blinded until the end of the creature's next turn.","cost":1},{"name":"Blasphemous Word","text":"The mummy lord utters a blasphemous word. Each non-undead creature within 10 feet of the mummy lord that can hear the magical utterance must succeed on a DC 16 Constitution saving throw or be stunned until the end of the mummy lord's next turn.","cost":2},{"name":"Channel Negative Energy","text":"The mummy lord magically unleashes negative energy. Creatures within 60 feet of the mummy lord, including ones behind barriers and around corners, can't regain hit points until the end of the mummy lord's next turn.","cost":2},{"name":"Whirlwind of Sand","text":"The mummy lord magically transforms into a whirlwind of sand, moves up to 60 feet, and reverts to its normal form. While in whirlwind form, the mummy lord is immune to all damage, and it can't be grappled, petrified, knocked prone, restrained, or stunned. Equipment worn or carried by the mummy lord remain in its possession.","cost":2}],"spells":"sacred flame, thaumaturgy, command, guiding bolt, shield of faith, hold person, silence, spiritual weapon, animate dead, dispel magic, divination, guardian of faith, contagion, insect plague, harm"},{"name":"Nalfeshnee","size":"Large","type":"Fiend (demon)","alignment":"chaotic evil","AC":"18 (natural armor)","HP":"184 (16d10+96)","speed":"20 ft., fly 30 ft.","strength":21,"dexterity":10,"constitution":22,"intelligence":19,"wisdom":12,"charisma":15,"savingThrows":"Con +11, Int +9, Wis +6, Cha +7","damageResistances":"cold, fire, lightning; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"truesight 120 ft.","languages":"Abyssal, telepathy 120 ft.","challenge":"13","traits":[{"name":"Magic Resistance","text":"The nalfeshnee has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The nalfeshnee uses Horror Nimbus if it can.  It then makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +10 to hit, reach 5 ft., one target. Hit: 32 (5d10 + 5) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +10 to hit, reach 10 ft., one target. Hit: 15 (3d6 + 5) slashing damage."},{"name":"Horror Nimbus","text":"The nalfeshnee magically emits scintillating, multicolored light. Each creature within 15 feet of the nalfeshnee that can see the light must succeed on a DC 15 Wisdom saving throw or be frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the nalfeshnee's Horror Nimbus for the next 24 hours.","recharge":"Recharge 5-6"},{"name":"Teleport","text":"The nalfeshnee magically teleports, along with any equipment it is wearing or carrying, up to 120 feet to an unoccupied space it can see."},{"name":"Variant: Summon Demon","text":"The demon chooses what to summon and attempts a magical summoning.\nA nalfeshnee has a 50 percent chance of summoning 1d4 vrocks, 1d3 hezrous, 1d2 glabrezus, or one nalfeshnee.\nA summoned demon appears in an unoccupied space within 60 feet of its summoner, acts as an ally of its summoner, and can't summon other demons. It remains for 1 minute, until it or its summoner dies, or until its summoner dismisses it as an action.","recharge":"1/Day"}]},{"name":"Night Hag","size":"Medium","type":"Fiend","alignment":"neutral evil","AC":"17 (natural armor)","HP":"112 (15d8+45)","speed":"30 ft.","strength":18,"dexterity":15,"constitution":16,"intelligence":16,"wisdom":14,"charisma":16,"skills":"Deception +7, Insight +6, Perception +6, Stealth +6","damageResistances":"cold, fire; bludgeoning, piercing, and slashing from nonmagical attacks that aren't silvered","conditionImmunities":"charmed","senses":"darkvision 120 ft.","languages":"Abyssal, Common, Infernal, Primordial","challenge":"5","traits":[{"name":"Innate Spellcasting","text":"The hag's innate spellcasting ability is Charisma (spell save DC 14, +6 to hit with spell attacks). She can innately cast the following spells, requiring no material components:\nAt will: detect magic, magic missile\n2/day each: plane shift (self only), ray of enfeeblement, sleep"},{"name":"Magic Resistance","text":"The hag has advantage on saving throws against spells and other magical effects."},{"name":"Night Hag Items","text":"A night hag carries two very rare magic items that she must craft for herself If either object is lost, the night hag will go to great lengths to retrieve it, as creating a new tool takes time and effort."},{"name":"Heartstone","text":"This lustrous black gem allows a night hag to become ethereal while it is in her possession. The touch of a heartstone also cures any disease. Crafting a heartstone takes 30 days."},{"name":"Soul Bag","text":"When an evil humanoid dies as a result of a night hag's Nightmare Haunting, the hag catches the soul in this black sack made of stitched flesh. A soul bag can hold only one evil soul at a time, and only the night hag who crafted the bag can catch a soul with it. Crafting a soul bag takes 7 days and a humanoid sacrifice (whose flesh is used to make the bag)."},{"name":"Hag Coven","text":"When hags must work together, they form covens, in spite of their selfish natures. A coven is made up of hags of any type, all of whom are equals within the group. However, each of the hags continues to desire more personal power.\nA coven consists of three hags so that any arguments between two hags can be settled by the third. If more than three hags ever come together, as might happen if two covens come into conflict, the result is usually chaos."},{"name":"Shared Spellcasting","text":"While all three members of a hag coven are within 30 feet of one another, they can each cast the following spells from the wizard's spell list but must share the spell slots among themselves:\n1st level (4 slots): identify, ray of sickness\n2nd level (3 slots): hold person, locate object\n3rd level (3 slots): bestow curse, counterspell, lightning bolt\n4th level (3 slots): phantasmal killer, polymorph\n5th level (2 slots): contact other plane, scrying\n6th level (1 slot): eye bite\nFor casting these spells, each hag is a 12th-level spellcaster that uses Intelligence as her spellcasting ability. The spell save DC is 12+the hag's Intelligence modifier, and the spell attack bonus is 4+the hag's Intelligence modifier.","recharge":"Coven Only"},{"name":"Hag Eye","text":"A hag coven can craft a magic item called a hag eye, which is made from a real eye coated in varnish and often fitted to a pendant or other wearable item. The hag eye is usually entrusted to a minion for safekeeping and transport. A hag in the coven can take an action to see what the hag eye sees if the hag eye is on the same plane of existence. A hag eye has AC 10, 1 hit point, and darkvision with a radius of 60 feet. If it is destroyed, each coven member takes 3d10 psychic damage and is blinded for 24 hours.\nA hag coven can have only one hag eye at a time, and creating a new one requires all three members of the coven to perform a ritual. The ritual takes 1 hour, and the hags can't perform it while blinded. During the ritual, if the hags take any action other than performing the ritual, they must start over.","recharge":"Coven Only"}],"actions":[{"name":"Claws","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) slashing damage.","recharge":"Hag Form Only"},{"name":"Change Shape","text":"The hag magically polymorphs into a Small or Medium female humanoid, or back into her true form. Her statistics are the same in each form. Any equipment she is wearing or carrying isn't transformed. She reverts to her true form if she dies."},{"name":"Etherealness","text":"The hag magically enters the Ethereal Plane from the Material Plane, or vice versa. To do so, the hag must have a heartstone in her possession."},{"name":"Nightmare Haunting","text":"While on the Ethereal Plane, the hag magically touches a sleeping humanoid on the Material Plane. A protection from evil and good spell cast on the target prevents this contact, as does a magic circle. As long as the contact persists, the target has dreadful visions. If these visions last for at least 1 hour, the target gains no benefit from its rest, and its hit point maximum is reduced by 5 (1d10). If this effect reduces the target's hit point maximum to 0, the target dies, and if the target was evil, its soul is trapped in the hag's soul bag. The reduction to the target's hit point maximum lasts until removed by the greater restoration spell or similar magic.","recharge":"1/Day"}],"spells":"detect magic, magic missile, plane shift, ray of enfeeblement, sleep, identify, ray of sickness, hold person, locate object, bestow curse, counterspell, lightning bolt, phantasmal killer, polymorph, contact other plane, scrying, eye bite"},{"name":"Nightmare","size":"Large","type":"Fiend","alignment":"neutral evil","AC":"13 (natural armor)","HP":"68 (8d10+24)","speed":"60 ft., fly 90 ft.","strength":18,"dexterity":15,"constitution":16,"intelligence":10,"wisdom":13,"charisma":15,"damageImmunities":"fire","languages":"understands Abyssal, Common, and Infernal but can't speak","challenge":"3","traits":[{"name":"Confer Fire Resistance","text":"The nightmare can grant resistance to fire damage to anyone riding it."},{"name":"Illumination","text":"The nightmare sheds bright light in a 10-foot radius and dim light for an additional 10 feet."}],"actions":[{"name":"Hooves","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) bludgeoning damage plus 7 (2d6) fire damage."},{"name":"Ethereal Stride","text":"The nightmare and up to three willing creatures within 5 feet of it magically enter the Ethereal Plane from the Material Plane, or vice versa."}]},{"name":"Noble","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"15 (breastplate)","HP":"9 (2d8)","speed":"30 ft.","strength":11,"dexterity":12,"constitution":11,"intelligence":12,"wisdom":14,"charisma":16,"skills":"Deception +5, Insight +4, Persuasion +5","languages":"any two languages","challenge":"1/8","actions":[{"name":"Rapier","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 5 (1d8 + 1) piercing damage."}]},{"name":"Ochre Jelly","size":"Large","type":"Ooze","alignment":"unaligned","AC":"8","HP":"45 (6d10+12)","speed":"10 ft., climb 10 ft.","strength":15,"dexterity":6,"constitution":14,"intelligence":2,"wisdom":6,"charisma":1,"damageResistances":"acid","damageImmunities":"lightning, slashing","conditionImmunities":"blinded, charmed, deafened, exhaustion, frightened, prone","senses":"blindsight 60 ft. (blind beyond this radius)","challenge":"2","traits":[{"name":"Amorphous","text":"The jelly can move through a space as narrow as 1 inch wide without squeezing."},{"name":"Spider Climb","text":"The jelly can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."}],"actions":[{"name":"Pseudopod","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 9 (2d6 + 2) bludgeoning damage plus 3 (1d6) acid damage."}],"reactions":[{"name":"Split","text":"When a jelly that is Medium or larger is subjected to lightning or slashing damage, it splits into two new jellies if it has at least 10 hit points. Each new jelly has hit points equal to half the original jelly's, rounded down . New jellies are one size smaller than the original jelly."}]},{"name":"Octopus","size":"Small","type":"Beast","alignment":"unaligned","AC":"12","HP":"3 (1d6)","speed":"5 ft., swim 30 ft.","strength":4,"dexterity":15,"constitution":11,"intelligence":3,"wisdom":10,"charisma":4,"skills":"Perception +2, Stealth +4","senses":"darkvision 30 ft.","challenge":"0","traits":[{"name":"Hold Breath","text":"While out of water, the octopus can hold its breath for 30 minutes."},{"name":"Underwater Camouflage","text":"The octopus has advantage on Dexterity (Stealth) checks made while underwater."},{"name":"Water Breathing","text":"The octopus can breathe only underwater."}],"actions":[{"name":"Tentacles","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 1 bludgeoning damage, and the target is grappled (escape DC 10). Until this grapple ends, the octopus can't use its tentacles on another target."},{"name":"Ink Cloud","text":"A 5-foot-radius cloud of ink extends all around the octopus if it is underwater. The area is heavily obscured for 1 minute, although a significant current can disperse the ink. After releasing the ink, the octopus can use the Dash action as a bonus action.","recharge":"Recharges after a Short or Long Rest"}]},{"name":"Ogre","size":"Large","type":"Giant","alignment":"chaotic evil","AC":"11 (hide armor)","HP":"59 (7d10+21)","speed":"40 ft.","strength":19,"dexterity":8,"constitution":16,"intelligence":5,"wisdom":7,"charisma":7,"senses":"darkvision 60 ft.","languages":"Common, Giant","challenge":"2","actions":[{"name":"Greatclub","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) bludgeoning damage."},{"name":"Javelin","text":"Melee or Ranged Weapon Attack: +6 to hit, reach 5 ft. or range 30/120 ft., one target. Hit: 11 (2d6 + 4) piercing damage."}]},{"name":"Ogre Zombie","size":"Large","type":"Undead","alignment":"neutral evil","AC":"8","HP":"85 (9d10+36)","speed":"30 ft.","strength":19,"dexterity":6,"constitution":18,"intelligence":3,"wisdom":6,"charisma":5,"savingThrows":"Wis +0","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"understands Common and Giant but can't speak","challenge":"2","traits":[{"name":"Undead Fortitude","text":"If damage reduces the zombie to 0 hit points, it must make a Constitution saving throw with a DC of 5+the damage taken, unless the damage is radiant or from a critical hit. On a success, the zombie drops to 1 hit point instead."}],"actions":[{"name":"Morningstar","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) bludgeoning damage."}]},{"name":"Oni","size":"Large","type":"Giant","alignment":"lawful evil","AC":"16 (chain mail)","HP":"110 (13d10+39)","speed":"30 ft., fly 30 ft.","strength":19,"dexterity":11,"constitution":16,"intelligence":14,"wisdom":12,"charisma":15,"savingThrows":"Dex +3, Con +6, Wis +4, Cha +5","skills":"Arcana +5, Deception +8, Perception +4","senses":"darkvision 60 ft.","languages":"Common, Giant","challenge":"7","traits":[{"name":"Innate Spellcasting","text":"The oni's innate spellcasting ability is Charisma (spell save DC 13). The oni can innately cast the following spells, requiring no material components:\nAt will: darkness, invisibility\n1/day each: charm person, cone of cold, gaseous form, sleep"},{"name":"Magic Weapons","text":"The oni's weapon attacks are magical."},{"name":"Regeneration","text":"The oni regains 10 hit points at the start of its turn if it has at least 1 hit point."}],"actions":[{"name":"Multiattack","text":"The oni makes two attacks, either with its claws or its glaive."},{"name":"Claw","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 8 (1d8 + 4) slashing damage.","recharge":"Oni Form Only"},{"name":"Glaive","text":"Melee Weapon Attack: +7 to hit, reach 10 ft., one target. Hit: 15 (2d10 + 4) slashing damage, or 9 (1d10 + 4) slashing damage in Small or Medium form."},{"name":"Change Shape","text":"The oni magically polymorphs into a Small or Medium humanoid, into a Large giant, or back into its true form. Other than its size, its statistics are the same in each form. The only equipment that is transformed is its glaive, which shrinks so that it can be wielded in humanoid form. If the oni dies, it reverts to its true form, and its glaive reverts to its normal size."}],"spells":"darkness, invisibility, charm person, cone of cold, gaseous form, sleep"},{"name":"Orc","size":"Medium","type":"Humanoid (orc)","alignment":"chaotic evil","AC":"13 (hide armor)","HP":"15 (2d8+6)","speed":"30 ft.","strength":16,"dexterity":12,"constitution":16,"intelligence":7,"wisdom":11,"charisma":10,"skills":"Intimidation +2","senses":"darkvision 60 ft.","languages":"Common, Orc","challenge":"1/2","traits":[{"name":"Aggressive","text":"As a bonus action, the orc can move up to its speed toward a hostile creature that it can see."}],"actions":[{"name":"Greataxe","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 9 (1d12 + 3) slashing damage."},{"name":"Javelin","text":"Melee or Ranged Weapon Attack: +5 to hit, reach 5 ft. or range 30/120 ft., one target. Hit: 6 (1d6 + 3) piercing damage."}]},{"name":"Otyugh","size":"Large","type":"Aberration","alignment":"neutral","AC":"14 (natural armor)","HP":"114 (12d10+48)","speed":"30 ft.","strength":16,"dexterity":11,"constitution":19,"intelligence":6,"wisdom":13,"charisma":6,"savingThrows":"Con +7","senses":"darkvision 120 ft.","languages":"Otyugh","challenge":"5","traits":[{"name":"Limited Telepathy","text":"The otyugh can magically transmit simple messages and images to any creature within 120 ft. of it that can understand a language. This form of telepathy doesn't allow the receiving creature to telepathically respond."}],"actions":[{"name":"Multiattack","text":"The otyugh makes three attacks: one with its bite and two with its tentacles."},{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 12 (2d8 + 3) piercing damage. If the target is a creature, it must succeed on a DC 15 Constitution saving throw against disease or become poisoned until the disease is cured. Every 24 hours that elapse, the target must repeat the saving throw, reducing its hit point maximum by 5 (1d10) on a failure. The disease is cured on a success. The target dies if the disease reduces its hit point maximum to 0. This reduction to the target's hit point maximum lasts until the disease is cured."},{"name":"Tentacle","text":"Melee Weapon Attack: +6 to hit, reach 10 ft., one target. Hit: 7 (1d8 + 3) bludgeoning damage plus 4 (1d8) piercing damage. If the target is Medium or smaller, it is grappled (escape DC 13) and restrained until the grapple ends. The otyugh has two tentacles, each of which can grapple one target."},{"name":"Tentacle Slam","text":"The otyugh slams creatures grappled by it into each other or a solid surface. Each creature must succeed on a DC 14 Constitution saving throw or take 10 (2d6 + 3) bludgeoning damage and be stunned until the end of the otyugh's next turn. On a successful save, the target takes half the bludgeoning damage and isn't stunned."}]},{"name":"Owl","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"11","HP":"1 (1d4-1)","speed":"5 ft., fly 60 ft.","strength":3,"dexterity":13,"constitution":8,"intelligence":2,"wisdom":12,"charisma":7,"skills":"Perception +3, Stealth +3","senses":"darkvision 120 ft.","challenge":"0","traits":[{"name":"Flyby","text":"The owl doesn't provoke opportunity attacks when it flies out of an enemy's reach."},{"name":"Keen Hearing and Sight","text":"The owl has advantage on Wisdom (Perception) checks that rely on hearing or sight."}],"actions":[{"name":"Talons","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 1 slashing damage."}]},{"name":"Owlbear","size":"Large","type":"Monstrosity","alignment":"unaligned","AC":"13 (natural armor)","HP":"59 (7d10+21)","speed":"40 ft.","strength":20,"dexterity":12,"constitution":17,"intelligence":3,"wisdom":12,"charisma":7,"skills":"Perception +3","senses":"darkvision 60 ft.","challenge":"3","traits":[{"name":"Keen Sight and Smell","text":"The owlbear has advantage on Wisdom (Perception) checks that rely on sight or smell."}],"actions":[{"name":"Multiattack","text":"The owlbear makes two attacks: one with its beak and one with its claws."},{"name":"Beak","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one creature. Hit: 10 (1d10 + 5) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 14 (2d8 + 5) slashing damage."}]},{"name":"Panther","size":"Medium","type":"Beast","alignment":"unaligned","AC":"12","HP":"13 (3d8)","speed":"50 ft., climb 40 ft.","strength":14,"dexterity":15,"constitution":10,"intelligence":3,"wisdom":14,"charisma":7,"skills":"Perception +4, Stealth +6","challenge":"1/4","traits":[{"name":"Keen Smell","text":"The panther has advantage on Wisdom (Perception) checks that rely on smell."},{"name":"Pounce","text":"If the panther moves at least 20 ft. straight toward a creature and then hits it with a claw attack on the same turn, that target must succeed on a DC 12 Strength saving throw or be knocked prone. If the target is prone, the panther can make one bite attack against it as a bonus action."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 4 (1d4 + 2) slashing damage."}]},{"name":"Pegasus","size":"Large","type":"Celestial","alignment":"chaotic good","AC":"12","HP":"59 (7d10+21)","speed":"60 ft., fly 90 ft.","strength":18,"dexterity":15,"constitution":16,"intelligence":10,"wisdom":15,"charisma":13,"savingThrows":"Dex +4, Wis +4, Cha +3","skills":"Perception +6","languages":"understands Celestial, Common, Elvish, and Sylvan but can't speak","challenge":"2","actions":[{"name":"Hooves","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) bludgeoning damage."}]},{"name":"Phase Spider","size":"Large","type":"Monstrosity","alignment":"unaligned","AC":"13 (natural armor)","HP":"32 (5d10+5)","speed":"30 ft., climb 30 ft.","strength":15,"dexterity":15,"constitution":12,"intelligence":6,"wisdom":10,"charisma":6,"skills":"Stealth +6","senses":"darkvision 60 ft.","challenge":"3","traits":[{"name":"Ethereal Jaunt","text":"As a bonus action, the spider can magically shift from the Material Plane to the Ethereal Plane, or vice versa."},{"name":"Spider Climb","text":"The spider can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."},{"name":"Web Walker","text":"The spider ignores movement restrictions caused by webbing."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 7 (1d10 + 2) piercing damage, and the target must make a DC 11 Constitution saving throw, taking 18 (4d8) poison damage on a failed save, or half as much damage on a successful one. If the poison damage reduces the target to 0 hit points, the target is stable but poisoned for 1 hour, even after regaining hit points, and is paralyzed while poisoned in this way."}]},{"name":"Pit Fiend","size":"Large","type":"Fiend (devil)","alignment":"lawful evil","AC":"19 (natural armor)","HP":"300 (24d10+168)","speed":"30 ft., fly 60 ft.","strength":26,"dexterity":14,"constitution":24,"intelligence":22,"wisdom":18,"charisma":24,"savingThrows":"Dex +8, Con +13, Wis +10","damageResistances":"cold; bludgeoning, piercing, and slashing from nonmagical attacks that aren't silvered","damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"truesight 120 ft.","languages":"Infernal, telepathy 120 ft.","challenge":"20","traits":[{"name":"Fear Aura","text":"Any creature hostile to the pit fiend that starts its turn within 20 feet of the pit fiend must make a DC 21 Wisdom saving throw, unless the pit fiend is incapacitated. On a failed save, the creature is frightened until the start of its next turn. If a creature's saving throw is successful, the creature is immune to the pit fiend's Fear Aura for the next 24 hours."},{"name":"Magic Resistance","text":"The pit fiend has advantage on saving throws against spells and other magical effects."},{"name":"Magic Weapons","text":"The pit fiend's weapon attacks are magical."},{"name":"Innate Spellcasting","text":"The pit fiend's spellcasting ability is Charisma (spell save DC 21). The pit fiend can innately cast the following spells, requiring no material components:\nAt will: detect magic, fireball\n3/day each: hold monster, wall of fire"}],"spells":"detect magic, fireball, hold monster, wall of fire","actions":[{"name":"Multiattack","text":"The pit fiend makes four attacks: one with its bite, one with its claw, one with its mace, and one with its tail."},{"name":"Bite","text":"Melee Weapon Attack: +14 to hit, reach 5 ft., one target. Hit: 22 (4d6 + 8) piercing damage. The target must succeed on a DC 21 Constitution saving throw or become poisoned. While poisoned in this way, the target can't regain hit points, and it takes 21 (6d6) poison damage at the start of each of its turns. The poisoned target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."},{"name":"Claw","text":"Melee Weapon Attack: +14 to hit, reach 10 ft., one target. Hit: 17 (2d8 + 8) slashing damage."},{"name":"Mace","text":"Melee Weapon Attack: +14 to hit, reach 10 ft., one target. Hit: 15 (2d6 + 8) bludgeoning damage plus 21 (6d6) fire damage."},{"name":"Tail","text":"Melee Weapon Attack: +14 to hit, reach 10 ft., one target. Hit: 24 (3d10 + 8) bludgeoning damage."}]},{"name":"Planetar","size":"Large","type":"Celestial","alignment":"lawful good","AC":"19 (natural armor)","HP":"200 (16d10+112)","speed":"40 ft., fly 120 ft.","strength":24,"dexterity":20,"constitution":24,"intelligence":19,"wisdom":22,"charisma":25,"savingThrows":"Con +12, Wis +11, Cha +12","skills":"Perception +11","damageResistances":"radiant; bludgeoning, piercing, and slashing from nonmagical attacks","conditionImmunities":"charmed, exhaustion, frightened","senses":"truesight 120 ft.","languages":"all, telepathy 120 ft.","challenge":"16","traits":[{"name":"Angelic Weapons","text":"The planetar's weapon attacks are magical. When the planetar hits with any weapon, the weapon deals an extra 5d8 radiant damage (included in the attack)."},{"name":"Divine Awareness","text":"The planetar knows if it hears a lie."},{"name":"Innate Spellcasting","text":"The planetar's spellcasting ability is Charisma (spell save DC 20). The planetar can innately cast the following spells, requiring no material components:\nAt will: detect evil and good, invisibility (self only)\n3/day each: blade barrier, dispel evil and good, flame strike, raise dead\n1/day each: commune, control weather, insect plague"},{"name":"Magic Resistance","text":"The planetar has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The planetar makes two melee attacks."},{"name":"Greatsword","text":"Melee Weapon Attack: +12 to hit, reach 5 ft., one target. Hit: 21 (4d6 + 7) slashing damage plus 22 (5d8) radiant damage."},{"name":"Healing Touch","text":"The planetar touches another creature. The target magically regains 30 (6d8 + 3) hit points and is freed from any curse, disease, poison, blindness, or deafness.","recharge":"4/Day"}],"spells":"detect evil and good, invisibility, blade barrier, dispel evil and good, flame strike, raise dead, commune, control weather, insect plague"},{"name":"Plesiosaurus","size":"Large","type":"Beast","alignment":"unaligned","AC":"13 (natural armor)","HP":"68 (8d10+24)","speed":"20 ft., swim 40 ft.","strength":18,"dexterity":15,"constitution":16,"intelligence":2,"wisdom":12,"charisma":5,"skills":"Perception +3, Stealth +4","challenge":"2","traits":[{"name":"Hold Breath","text":"The plesiosaurus can hold its breath for 1 hour."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 10 ft., one target. Hit: 14 (3d6 + 4) piercing damage."}]},{"name":"Poisonous Snake","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"13","HP":"2 (1d4)","speed":"30 ft., swim 30 ft.","strength":2,"dexterity":16,"constitution":11,"intelligence":1,"wisdom":10,"charisma":3,"senses":"blindsight 10 ft.","challenge":"1/8","actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 1 piercing damage, and the target must make a DC 10 Constitution saving throw, taking 5 (2d4) poison damage on a failed save, or half as much damage on a successful one."}]},{"name":"Polar Bear","size":"Large","type":"Beast","alignment":"unaligned","AC":"12 (natural armor)","HP":"42 (5d10+15)","speed":"40 ft., swim 30 ft.","strength":20,"dexterity":10,"constitution":16,"intelligence":2,"wisdom":13,"charisma":7,"skills":"Perception +3","challenge":"2","traits":[{"name":"Keen Smell","text":"The bear has advantage on Wisdom (Perception) checks that rely on smell."}],"actions":[{"name":"Multiattack","text":"The bear makes two attacks: one with its bite and one with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 9 (1d8 + 5) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 12 (2d6 + 5) slashing damage."}]},{"name":"Pony","size":"Medium","type":"Beast","alignment":"unaligned","AC":"10","HP":"11 (2d8+2)","speed":"40 ft.","strength":15,"dexterity":10,"constitution":13,"intelligence":2,"wisdom":11,"charisma":7,"challenge":"1/8","actions":[{"name":"Hooves","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (2d4 + 2) bludgeoning damage."}]},{"name":"Priest","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"13 (chain shirt)","HP":"27 (5d8+5)","speed":"25 ft.","strength":10,"dexterity":10,"constitution":12,"intelligence":13,"wisdom":16,"charisma":13,"skills":"Medicine +7, Persuasion +3, Religion +4","languages":"any two languages","challenge":"2","traits":[{"name":"Divine Eminence","text":"As a bonus action, the priest can expend a spell slot to cause its melee weapon attacks to magically deal an extra 10 (3d6) radiant damage to a target on a hit. This benefit lasts until the end of the turn. If the priest expends a spell slot of 2nd level or higher, the extra damage increases by 1d6 for each level above 1st."},{"name":"Spellcasting","text":"The priest is a 5th-level spellcaster. Its spellcasting ability is Wisdom (spell save DC 13, +5 to hit with spell attacks). The priest has the following cleric spells prepared:\nCantrips (at will): light, sacred flame, thaumaturgy\n1st level (4 slots): cure wounds, guiding bolt, sanctuary\n2nd level (3 slots): lesser restoration, spiritual weapon\n3rd level (2 slots): dispel magic, spirit guardians"}],"actions":[{"name":"Mace","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one target. Hit: 3 (1d6) bludgeoning damage."}],"spells":"light, sacred flame, thaumaturgy, cure wounds, guiding bolt, sanctuary, lesser restoration, spiritual weapon, dispel magic, spirit guardians"},{"name":"Pseudodragon","size":"Tiny","type":"Dragon","alignment":"neutral good","AC":"13","HP":"7 (2d4+2)","speed":"15 ft., fly 60 ft.","strength":6,"dexterity":15,"constitution":13,"intelligence":10,"wisdom":12,"charisma":10,"skills":"Perception +3, Stealth +4","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"understands Common and Draconic but can't speak","challenge":"1/4","traits":[{"name":"Keen Senses","text":"The pseudodragon has advantage on Wisdom (Perception) checks that rely on sight, hearing, or smell."},{"name":"Magic Resistance","text":"The pseudodragon has advantage on saving throws against spells and other magical effects."},{"name":"Limited Telepathy","text":"The pseudodragon can magically communicate simple ideas, emotions, and images telepathically with any creature within 100 ft. of it that can understand a language."},{"name":"Variant: Familiar","text":"The pseudodragon can serve another creature as a familiar, forming a magic, telepathic bond with that willing companion. While the two are bonded, the companion can sense what the pseudodragon senses as long as they are within 1 mile of each other. While the pseudodragon is within 10 feet of its companion, the companion shares the pseudodragon's Magic Resistance trait. At any time and for any reason, the pseudodragon can end its service as a familiar, ending the telepathic bond."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 4 (1d4 + 2) piercing damage."},{"name":"Sting","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 4 (1d4 + 2) piercing damage, and the target must succeed on a DC 11 Constitution saving throw or become poisoned for 1 hour. If the saving throw fails by 5 or more, the target falls unconscious for the same duration, or until it takes damage or another creature uses an action to shake it awake."}]},{"name":"Purple Worm","size":"Gargantuan","type":"Monstrosity","alignment":"unaligned","AC":"18 (natural armor)","HP":"247 (15d20+90)","speed":"50 ft., burrow 30 ft.","strength":28,"dexterity":7,"constitution":22,"intelligence":1,"wisdom":8,"charisma":4,"savingThrows":"Con +11, Wis +4","senses":"blindsight 30 ft., tremorsense 60 ft.","challenge":"15","traits":[{"name":"Tunneler","text":"The worm can burrow through solid rock at half its burrow speed and leaves a 10-foot-diameter tunnel in its wake."}],"actions":[{"name":"Multiattack","text":"The worm makes two attacks: one with its bite and one with its stinger."},{"name":"Bite","text":"Melee Weapon Attack: +9 to hit, reach 10 ft., one target. Hit: 22 (3d8 + 9) piercing damage. If the target is a Large or smaller creature, it must succeed on a DC 19 Dexterity saving throw or be swallowed by the worm. A swallowed creature is blinded and restrained, it has total cover against attacks and other effects outside the worm, and it takes 21 (6d6) acid damage at the start of each of the worm's turns.\nIf the worm takes 30 damage or more on a single turn from a creature inside it, the worm must succeed on a DC 21 Constitution saving throw at the end of that turn or regurgitate all swallowed creatures, which fall prone in a space within 10 feet of the worm. If the worm dies, a swallowed creature is no longer restrained by it and can escape from the corpse by using 20 feet of movement, exiting prone."},{"name":"Tail Stinger","text":"Melee Weapon Attack: +9 to hit, reach 10 ft., one creature. Hit: 19 (3d6 + 9) piercing damage, and the target must make a DC 19 Constitution saving throw, taking 42 (12d6) poison damage on a failed save, or half as much damage on a successful one."}]},{"name":"Quasit","size":"Tiny","type":"Fiend (demon)","alignment":"chaotic evil","AC":"13","HP":"7 (3d4)","speed":"40 ft.","strength":5,"dexterity":17,"constitution":10,"intelligence":7,"wisdom":10,"charisma":10,"skills":"Stealth +5","damageResistances":"cold; fire; lightning; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"darkvision 120 ft.","languages":"Abyssal, Common","challenge":"1","traits":[{"name":"Shapechanger","text":"The quasit can use its action to polymorph into a beast form that resembles a bat (speed 10 ft. fly 40 ft.), a centipede (40 ft., climb 40 ft.), or a toad (40 ft., swim 40 ft.), or back into its true form . Its statistics are the same in each form, except for the speed changes noted. Any equipment it is wearing or carrying isn't transformed . It reverts to its true form if it dies."},{"name":"Magic Resistance","text":"The quasit has advantage on saving throws against spells and other magical effects."},{"name":"Variant: Familiar","text":"The quasit can serve another creature as a familiar, forming a telepathic bond with its willing master. While the two are bonded, the master can sense what the quasit senses as long as they are within 1 mile of each other. While the quasit is within 10 feet of its master, the master shares the quasit's Magic Resistance trait. At any time and for any reason, the quasit can end its service as a familiar, ending the telepathic bond."}],"actions":[{"name":"Claw","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d4 + 3) piercing damage, and the target must succeed on a DC 10 Constitution saving throw or take 5 (2d4) poison damage and become poisoned for 1 minute. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success.","recharge":"Bite in Beast Form"},{"name":"Scare","text":"One creature of the quasit's choice within 20 ft. of it must succeed on a DC 10 Wisdom saving throw or be frightened for 1 minute. The target can repeat the saving throw at the end of each of its turns, with disadvantage if the quasit is within line of sight, ending the effect on itself on a success.","recharge":"1/day"},{"name":"Invisibility","text":"The quasit magically turns invisible until it attacks or uses Scare, or until its concentration ends (as if concentrating on a spell). Any equipment the quasit wears or carries is invisible with it."}]},{"name":"Quipper","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"13","HP":"1 (1d4-1)","speed":"0 ft., swim 40 ft.","strength":2,"dexterity":16,"constitution":9,"intelligence":1,"wisdom":7,"charisma":2,"senses":"darkvision 60 ft.","challenge":"0","traits":[{"name":"Blood Frenzy","text":"The quipper has advantage on melee attack rolls against any creature that doesn't have all its hit points."},{"name":"Water Breathing","text":"The quipper can breathe only underwater."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 1 piercing damage."}]},{"name":"Rakshasa","size":"Medium","type":"Fiend","alignment":"lawful evil","AC":"16 (natural armor)","HP":"110 (13d8+52)","speed":"40 ft.","strength":14,"dexterity":17,"constitution":18,"intelligence":13,"wisdom":16,"charisma":20,"skills":"Deception +10, Insight +8","damageVulnerabilities":"piercing from magic weapons wielded by good creatures","damageImmunities":"bludgeoning, piercing, and slashing from nonmagical attacks","senses":"darkvision 60 ft.","languages":"Common, Infernal","challenge":"13","traits":[{"name":"Limited Magic Immunity","text":"The rakshasa can't be affected or detected by spells of 6th level or lower unless it wishes to be. It has advantage on saving throws against all other spells and magical effects."},{"name":"Innate Spellcasting","text":"The rakshasa's innate.spellcasting ability is Charisma (spell save DC 18, +10 to hit with spell attacks). The rakshasa can innately cast the following spells, requiring no material components:\nAt will: detect thoughts, disguise self, mage hand, minor illusion\n3/day each: charm person, detect magic, invisibility, major image, suggestion\n1/day each: dominate person, fly, plane shift, true seeing"}],"actions":[{"name":"Multiattack","text":"The rakshasa makes two claw attacks"},{"name":"Claw","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 9 (2d6 + 2) slashing damage, and the target is cursed if it is a creature. The magical curse takes effect whenever the target takes a short or long rest, filling the target's thoughts with horrible images and dreams. The cursed target gains no benefit from finishing a short or long rest. The curse lasts until it is lifted by a remove curse spell or similar magic."}],"spells":"detect thoughts, disguise self, mage hand, minor illusion, charm person, detect magic, invisibility, major image, suggestion, dominate person, fly, plane shift, true seeing"},{"name":"Rat","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"10","HP":"1 (1d4-1)","speed":"20 ft.","strength":2,"dexterity":11,"constitution":9,"intelligence":2,"wisdom":10,"charisma":4,"senses":"darkvision 30 ft.","challenge":"0","traits":[{"name":"Keen Smell","text":"The rat has advantage on Wisdom (Perception) checks that rely on smell."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +0 to hit, reach 5 ft., one target. Hit: 1 piercing damage."}]},{"name":"Raven","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"12","HP":"1 (1d4-1)","speed":"10 ft., fly 50 ft.","strength":2,"dexterity":14,"constitution":8,"intelligence":2,"wisdom":12,"charisma":6,"skills":"Perception +3","challenge":"0","traits":[{"name":"Mimicry","text":"The raven can mimic simple sounds it has heard, such as a person whispering, a baby crying, or an animal chittering. A creature that hears the sounds can tell they are imitations with a successful DC 10 Wisdom (Insight) check."}],"actions":[{"name":"Beak","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 1 piercing damage."}]},{"name":"Red Dragon Wyrmling","size":"Medium","type":"Dragon","alignment":"chaotic evil","AC":"17 (natural armor)","HP":"75 (10d8+30)","speed":"30 ft., climb 30 ft., fly 60 ft.","strength":19,"dexterity":10,"constitution":17,"intelligence":12,"wisdom":11,"charisma":15,"savingThrows":"Dex +2, Con +5, Wis +2, Cha +4","skills":"Perception +4, Stealth +2","damageImmunities":"fire","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"Draconic","challenge":"4","actions":[{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 9 (1d10 + 4) piercing damage plus 3 (1d6) fire damage."},{"name":"Fire Breath","text":"The dragon exhales fire in a 15-foot cone. Each creature in that area must make a DC l3 Dexterity saving throw, taking 24 (7d6) fire damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Reef Shark","size":"Medium","type":"Beast","alignment":"unaligned","AC":"12 (natural armor)","HP":"22 (4d8+4)","speed":"0 ft., swim 40 ft.","strength":14,"dexterity":13,"constitution":13,"intelligence":1,"wisdom":10,"charisma":4,"skills":"Perception +2","senses":"blindsight 30 ft.","challenge":"1/2","traits":[{"name":"Pack Tactics","text":"The shark has advantage on an attack roll against a creature if at least one of the shark's allies is within 5 ft. of the creature and the ally isn't incapacitated."},{"name":"Water Breathing","text":"The shark can breathe only underwater."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 6 (1d8 + 2) piercing damage."}]},{"name":"Remorhaz","size":"Huge","type":"Monstrosity","alignment":"unaligned","AC":"17 (natural armor)","HP":"195 (17d12+85)","speed":"30 ft., burrow 20 ft.","strength":24,"dexterity":13,"constitution":21,"intelligence":4,"wisdom":10,"charisma":5,"damageImmunities":"cold, fire","senses":"darkvision 60 ft., tremorsense 60 ft.","challenge":"11","traits":[{"name":"Heated Body","text":"A creature that touches the remorhaz or hits it with a melee attack while within 5 feet of it takes 10 (3d6) fire damage."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +11 to hit, reach 10 ft., one target. Hit: 40 (6d10 + 7) piercing damage plus 10 (3d6) fire damage. If the target is a creature, it is grappled (escape DC 17). Until this grapple ends, the target is restrained, and the remorhaz can't bite another target."},{"name":"Swallow","text":"The remorhaz makes one bite attack against a Medium or smaller creature it is grappling. If the attack hits, that creature takes the bite's damage and is swallowed, and the grapple ends. While swallowed, the creature is blinded and restrained, it has total cover against attacks and other effects outside the remorhaz, and it takes 21 (6d6) acid damage at the start of each of the remorhaz's turns.\nIf the remorhaz takes 30 damage or more on a single turn from a creature inside it, the remorhaz must succeed on a DC 15 Constitution saving throw at the end of that turn or regurgitate all swallowed creatures, which fall prone in a space within 10 feet oft he remorhaz. If the remorhaz dies, a swallowed creature is no longer restrained by it and can escape from the corpse using 15 feet of movement, exiting prone."}]},{"name":"Rhinoceros","size":"Large","type":"Beast","alignment":"unaligned","AC":"11 (natural armor)","HP":"45 (6d10+12)","speed":"40 ft.","strength":21,"dexterity":8,"constitution":15,"intelligence":2,"wisdom":12,"charisma":6,"challenge":"2","traits":[{"name":"Charge","text":"If the rhinoceros moves at least 20 ft. straight toward a target and then hits it with a gore attack on the same turn, the target takes an extra 9 (2d8) bludgeoning damage. If the target is a creature, it must succeed on a DC 15 Strength saving throw or be knocked prone."}],"actions":[{"name":"Gore","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 14 (2d8 + 5) bludgeoning damage."}]},{"name":"Riding Horse","size":"Large","type":"Beast","alignment":"unaligned","AC":"10","HP":"13 (2d10+2)","speed":"60 ft.","strength":16,"dexterity":10,"constitution":12,"intelligence":2,"wisdom":11,"charisma":7,"challenge":"1/4","actions":[{"name":"Hooves","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 8 (2d4 + 3) bludgeoning damage."}]},{"name":"Roc","size":"Gargantuan","type":"Monstrosity","alignment":"unaligned","AC":"15 (natural armor)","HP":"248 (16d20+80)","speed":"20 ft., fly 120 ft.","strength":28,"dexterity":10,"constitution":20,"intelligence":3,"wisdom":10,"charisma":9,"savingThrows":"Dex +4, Con +9, Wis +4, Cha +3","skills":"Perception +4","challenge":"11","traits":[{"name":"Keen Sight","text":"The roc has advantage on Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Multiattack","text":"The roc makes two attacks: one with its beak and one with its talons."},{"name":"Beak","text":"Melee Weapon Attack: +13 to hit, reach 10 ft., one target. Hit: 27 (4d8 + 9) piercing damage."},{"name":"Talons","text":"Melee Weapon Attack: +13 to hit, reach 5 ft., one target. Hit: 23 (4d6 + 9) slashing damage, and the target is grappled (escape DC 19). Until this grapple ends, the target is restrained, and the roc can't use its talons on another target."}]},{"name":"Roper","size":"Large","type":"Monstrosity","alignment":"neutral evil","AC":"20 (natural armor)","HP":"93 (11d10+33)","speed":"10 ft., climb 10 ft.","strength":18,"dexterity":8,"constitution":17,"intelligence":7,"wisdom":16,"charisma":6,"skills":"Perception +6, Stealth +5","senses":"darkvision 60 ft.","challenge":"5","traits":[{"name":"False Appearance","text":"While the roper remains motionless, it is indistinguishable from a normal cave formation, such as a stalagmite."},{"name":"Grasping Tendrils","text":"The roper can have up to six tendrils at a time. Each tendril can be attacked (AC 20; 10 hit points; immunity to poison and psychic damage). Destroying a tendril deals no damage to the roper, which can extrude a replacement tendril on its next turn. A tendril can also be broken if a creature takes an action and succeeds on a DC 15 Strength check against it."},{"name":"Spider Climb","text":"The roper can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."}],"actions":[{"name":"Multiattack","text":"The roper makes four attacks with its tendrils, uses Reel, and makes one attack with its bite."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 22 (4d8 + 4) piercing damage."},{"name":"Tendril","text":"Melee Weapon Attack: +7 to hit, reach 50 ft., one creature. Hit: The target is grappled (escape DC 15). Until the grapple ends, the target is restrained and has disadvantage on Strength checks and Strength saving throws, and the roper can't use the same tendril on another target."},{"name":"Reel","text":"The roper pulls each creature grappled by it up to 25 ft. straight toward it."}]},{"name":"Rug of Smothering","size":"Large","type":"Construct","alignment":"unaligned","AC":"12","HP":"33 (6d10)","speed":"10 ft.","strength":17,"dexterity":14,"constitution":10,"intelligence":1,"wisdom":3,"charisma":1,"damageImmunities":"poison, psychic","conditionImmunities":"blinded, charmed, deafened, frightened, paralyzed, petrified, poisoned","senses":"blindsight 60 ft. (blind beyond this radius)","challenge":"2","traits":[{"name":"Antimagic Susceptibility","text":"The rug is incapacitated while in the area of an antimagic field. If targeted by dispel magic, the rug must succeed on a Constitution saving throw against the caster's spell save DC or fall unconscious for 1 minute."},{"name":"Damage Transfer","text":"While it is grappling a creature, the rug takes only half the damage dealt to it, and the creature grappled by the rug takes the other half."},{"name":"False Appearance","text":"While the rug remains motionless, it is indistinguishable from a normal rug."}],"actions":[{"name":"Smother","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one Medium or smaller creature. Hit: The creature is grappled (escape DC 13). Until this grapple ends, the target is restrained, blinded, and at risk of suffocating, and the rug can't smother another target. In addition, at the start of each of the target's turns, the target takes 10 (2d6 + 3) bludgeoning damage."}]},{"name":"Rust Monster","size":"Medium","type":"Monstrosity","alignment":"unaligned","AC":"14 (natural armor)","HP":"27 (5d8+5)","speed":"40 ft.","strength":13,"dexterity":12,"constitution":13,"intelligence":2,"wisdom":13,"charisma":6,"senses":"darkvision 60 ft.","challenge":"1/2","traits":[{"name":"Iron Scent","text":"The rust monster can pinpoint, by scent, the location of ferrous metal within 30 feet of it."},{"name":"Rust Metal","text":"Any nonmagical weapon made of metal that hits the rust monster corrodes. After dealing damage, the weapon takes a permanent and cumulative -1 penalty to damage rolls. If its penalty drops to -5, the weapon is destroyed. Non magical ammunition made of metal that hits the rust monster is destroyed after dealing damage."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 5 (1d8 + 1) piercing damage."},{"name":"Antennae","text":"The rust monster corrodes a nonmagical ferrous metal object it can see within 5 feet of it. If the object isn't being worn or carried, the touch destroys a 1-foot cube of it. If the object is being worn or carried by a creature, the creature can make a DC 11 Dexterity saving throw to avoid the rust monster's touch.\nIf the object touched is either metal armor or a metal shield being worn or carried, its takes a permanent and cumulative -1 penalty to the AC it offers. Armor reduced to an AC of 10 or a shield that drops to a +0 bonus is destroyed. If the object touched is a held metal weapon, it rusts as described in the Rust Metal trait."}]},{"name":"Saber-Toothed Tiger","size":"Large","type":"Beast","alignment":"unaligned","AC":"12","HP":"52 (7d10+14)","speed":"40 ft.","strength":18,"dexterity":14,"constitution":15,"intelligence":3,"wisdom":12,"charisma":8,"skills":"Perception +3, Stealth +6","challenge":"2","traits":[{"name":"Keen Smell","text":"The tiger has advantage on Wisdom (Perception) checks that rely on smell."},{"name":"Pounce","text":"If the tiger moves at least 20 ft. straight toward a creature and then hits it with a claw attack on the same turn, that target must succeed on a DC 14 Strength saving throw or be knocked prone. If the target is prone, the tiger can make one bite attack against it as a bonus action."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 10 (1d10 + 5) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 12 (2d6 + 5) slashing damage."}]},{"name":"Sahuagin","size":"Medium","type":"Humanoid (sahuagin)","alignment":"lawful evil","AC":"12 (natural armor)","HP":"22 (4d8+4)","speed":"30 ft., swim 40 ft.","strength":13,"dexterity":11,"constitution":12,"intelligence":12,"wisdom":13,"charisma":9,"skills":"Perception +5","senses":"darkvision 120 ft.","languages":"Sahuagin","challenge":"1/2","traits":[{"name":"Blood Frenzy","text":"The sahuagin has advantage on melee attack rolls against any creature that doesn't have all its hit points."},{"name":"Limited Amphibiousness","text":"The sahuagin can breathe air and water, but it needs to be submerged at least once every 4 hours to avoid suffocating."},{"name":"Shark Telepathy","text":"The sahuagin can magically command any shark within 120 feet of it, using a limited telepathy."}],"actions":[{"name":"Multiattack","text":"The sahuagin makes two melee attacks: one with its bite and one with its claws or spear."},{"name":"Bite","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 3 (1d4 + 1) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 3 (1d4 + 1) slashing damage."},{"name":"Spear","text":"Melee or Ranged Weapon Attack: +3 to hit, reach 5 ft. or range 20/60 ft., one target. Hit: 4 (1d6 + 1) piercing damage, or 5 (1d8 + 1) piercing damage if used with two hands to make a melee attack."}]},{"name":"Salamander","size":"Large","type":"Elemental","alignment":"neutral evil","AC":"15 (natural armor)","HP":"90 (12d10+24)","speed":"30 ft.","strength":18,"dexterity":14,"constitution":15,"intelligence":11,"wisdom":10,"charisma":12,"damageResistances":"bludgeoning, piercing, and slashing from nonmagical attacks","damageVulnerabilities":"cold","damageImmunities":"fire","senses":"darkvision 60 ft.","languages":"Ignan","challenge":"5","traits":[{"name":"Heated Body","text":"A creature that touches the salamander or hits it with a melee attack while within 5 ft. of it takes 7 (2d6) fire damage."},{"name":"Heated Weapons","text":"Any metal melee weapon the salamander wields deals an extra 3 (1d6) fire damage on a hit (included in the attack)."}],"actions":[{"name":"Multiattack","text":"The salamander makes two attacks: one with its spear and one with its tail."},{"name":"Spear","text":"Melee or Ranged Weapon Attack: +7 to hit, reach 5 ft. or range 20 ft./60 ft., one target. Hit: 11 (2d6 + 4) piercing damage, or 13 (2d8 + 4) piercing damage if used with two hands to make a melee attack, plus 3 (1d6) fire damage."},{"name":"Tail","text":"Melee Weapon Attack: +7 to hit, reach 10 ft., one target. Hit: 11 (2d6 + 4) bludgeoning damage plus 7 (2d6) fire damage, and the target is grappled (escape DC 14). Until this grapple ends, the target is restrained, the salamander can automatically hit the target with its tail, and the salamander can't make tail attacks against other targets."}]},{"name":"Satyr","size":"Medium","type":"Fey","alignment":"chaotic neutral","AC":"14 (leather armor)","HP":"31 (7d8)","speed":"40 ft.","strength":12,"dexterity":16,"constitution":11,"intelligence":12,"wisdom":10,"charisma":14,"skills":"Perception +2, Performance +6, Stealth +5","languages":"Common, Elvish, Sylvan","challenge":"1/2","traits":[{"name":"Magic Resistance","text":"The satyr has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Ram","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 6 (2d4 + 1) bludgeoning damage."},{"name":"Shortsword","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1 d6 + 3) piercing damage."},{"name":"Shortbow","text":"Ranged Weapon Attack: +5 to hit, range 80/320 ft., one target. Hit: 6 (1d6 + 3) piercing damage."},{"name":"Variant: Panpipes","text":"Gentle Lullaby. The creature falls asleep and is unconscious for 1 minute. The effect ends if the creature takes damage or if someone takes an action to shake the creature awake."}]},{"name":"Scorpion","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"11 (natural armor)","HP":"1 (1d4-1)","speed":"10 ft.","strength":2,"dexterity":11,"constitution":8,"intelligence":1,"wisdom":8,"charisma":2,"senses":"blindsight 10 ft.","challenge":"0","actions":[{"name":"Sting","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one creature. Hit: 1 piercing damage, and the target must make a DC 9 Constitution saving throw, taking 4 (1d8) poison damage on a failed save, or half as much damage on a successful one."}]},{"name":"Scout","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"13 (leather armor)","HP":"16 (3d8+3)","speed":"30 ft.","strength":11,"dexterity":14,"constitution":12,"intelligence":11,"wisdom":13,"charisma":11,"skills":"Nature +4, Perception +5, Stealth +6, Survival +5","languages":"any one language (usually Common)","challenge":"1/2","traits":[{"name":"Keen Hearing and Sight","text":"The scout has advantage on Wisdom (Perception) checks that rely on hearing or sight."}],"actions":[{"name":"Multiattack","text":"The scout makes two melee attacks or two ranged attacks."},{"name":"Shortsword","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage."},{"name":"Longbow","text":"Ranged Weapon Attack: +4 to hit, ranged 150/600 ft., one target. Hit: 6 (1d8 + 2) piercing damage."}]},{"name":"Sea Hag","size":"Medium","type":"Fey","alignment":"chaotic evil","AC":"14 (natural armor)","HP":"52 (7d8+21)","speed":"30 ft., swim 40 ft.","strength":16,"dexterity":13,"constitution":16,"intelligence":12,"wisdom":12,"charisma":13,"senses":"darkvision 60 ft.","languages":"Aquan, Common, Giant","challenge":"2","traits":[{"name":"Amphibious","text":"The hag can breathe air and water."},{"name":"Horrific Appearance","text":"Any humanoid that starts its turn within 30 feet of the hag and can see the hag's true form must make a DC 11 Wisdom saving throw. On a failed save, the creature is frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, with disadvantage if the hag is within line of sight, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the hag's Horrific Appearance for the next 24 hours.\nUnless the target is surprised or the revelation of the hag's true form is sudden, the target can avert its eyes and avoid making the initial saving throw. Until the start of its next turn, a creature that averts its eyes has disadvantage on attack rolls against the hag."},{"name":"Hag Coven","text":"When hags must work together, they form covens, in spite of their selfish natures. A coven is made up of hags of any type, all of whom are equals within the group. However, each of the hags continues to desire more personal power.\nA coven consists of three hags so that any arguments between two hags can be settled by the third. If more than three hags ever come together, as might happen if two covens come into conflict, the result is usually chaos."},{"name":"Shared Spellcasting","text":"While all three members of a hag coven are within 30 feet of one another, they can each cast the following spells from the wizard's spell list but must share the spell slots among themselves:\n1st level (4 slots): identify, ray of sickness\n2nd level (3 slots): hold person, locate object\n3rd level (3 slots): bestow curse, counterspell, lightning bolt\n4th level (3 slots): phantasmal killer, polymorph\n5th level (2 slots): contact other plane, scrying\n6th level (1 slot): eye bite\nFor casting these spells, each hag is a 12th-level spellcaster that uses Intelligence as her spellcasting ability. The spell save DC is 12+the hag's Intelligence modifier, and the spell attack bonus is 4+the hag's Intelligence modifier.","recharge":"Coven Only"},{"name":"Hag Eye","text":"A hag coven can craft a magic item called a hag eye, which is made from a real eye coated in varnish and often fitted to a pendant or other wearable item. The hag eye is usually entrusted to a minion for safekeeping and transport. A hag in the coven can take an action to see what the hag eye sees if the hag eye is on the same plane of existence. A hag eye has AC 10, 1 hit point, and darkvision with a radius of 60 feet. If it is destroyed, each coven member takes 3d10 psychic damage and is blinded for 24 hours.\nA hag coven can have only one hag eye at a time, and creating a new one requires all three members of the coven to perform a ritual. The ritual takes 1 hour, and the hags can't perform it while blinded. During the ritual, if the hags take any action other than performing the ritual, they must start over.","recharge":"Coven Only"}],"actions":[{"name":"Claws","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) slashing damage."},{"name":"Death Glare","text":"The hag targets one frightened creature she can see within 30 ft. of her. If the target can see the hag, it must succeed on a DC 11 Wisdom saving throw against this magic or drop to 0 hit points."},{"name":"Illusory Appearance","text":"The hag covers herself and anything she is wearing or carrying with a magical illusion that makes her look like an ugly creature of her general size and humanoid shape. The effect ends if the hag takes a bonus action to end it or if she dies.\nThe changes wrought by this effect fail to hold up to physical inspection. For example, the hag could appear to have no claws, but someone touching her hand might feel the claws. Otherwise, a creature must take an action to visually inspect the illusion and succeed on a DC 16 Intelligence (Investigation) check to discern that the hag is disguised."}],"spells":"identify, ray of sickness, hold person, locate object, bestow curse, counterspell, lightning bolt, phantasmal killer, polymorph, contact other plane, scrying, eye bite"},{"name":"Sea Horse","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"11","HP":"1 (1d4-1)","speed":"0 ft., swim 20 ft.","strength":1,"dexterity":12,"constitution":8,"intelligence":1,"wisdom":10,"charisma":2,"challenge":"0","traits":[{"name":"Water Breathing","text":"The sea horse can breathe only underwater."}]},{"name":"Shadow","size":"Medium","type":"Undead","alignment":"chaotic evil","AC":"12","HP":"16 (3d8+3)","speed":"40 ft.","strength":6,"dexterity":14,"constitution":13,"intelligence":6,"wisdom":10,"charisma":8,"skills":"Stealth +4","damageResistances":"acid, cold, fire, lightning, thunder; bludgeoning, piercing, and slashing from nonmagical attacks","damageVulnerabilities":"radiant","damageImmunities":"necrotic, poison","conditionImmunities":"exhaustion, frightened, grappled, paralyzed, petrified, poisoned, prone, restrained","senses":"darkvision 60 ft.","challenge":"1/2","traits":[{"name":"Amorphous","text":"The shadow can move through a space as narrow as 1 inch wide without squeezing."},{"name":"Shadow Stealth","text":"While in dim light or darkness, the shadow can take the Hide action as a bonus action. Its stealth bonus is also improved to +6."},{"name":"Sunlight Weakness","text":"While in sunlight, the shadow has disadvantage on attack rolls, ability checks, and saving throws."}],"actions":[{"name":"Strength Drain","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 9 (2d6 + 2) necrotic damage, and the target's Strength score is reduced by 1d4. The target dies if this reduces its Strength to 0. Otherwise, the reduction lasts until the target finishes a short or long rest.\nIf a non-evil humanoid dies from this attack, a new shadow rises from the corpse 1d4 hours later."}]},{"name":"Shambling Mound","size":"Large","type":"Plant","alignment":"unaligned","AC":"15 (natural armor)","HP":"136 (16d10+48)","speed":"20 ft., swim 20 ft.","strength":18,"dexterity":8,"constitution":16,"intelligence":5,"wisdom":10,"charisma":5,"skills":"Stealth +2","damageResistances":"cold, fire","damageImmunities":"lightning","conditionImmunities":"blinded, deafened, exhaustion","senses":"blindsight 60 ft. (blind beyond this radius)","challenge":"5","traits":[{"name":"Lightning Absorption","text":"Whenever the shambling mound is subjected to lightning damage, it takes no damage and regains a number of hit points equal to the lightning damage dealt."}],"actions":[{"name":"Multiattack","text":"The shambling mound makes two slam attacks. If both attacks hit a Medium or smaller target, the target is grappled (escape DC 14), and the shambling mound uses its Engulf on it."},{"name":"Slam","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) bludgeoning damage."},{"name":"Engulf","text":"The shambling mound engulfs a Medium or smaller creature grappled by it. The engulfed target is blinded, restrained, and unable to breathe, and it must succeed on a DC 14 Constitution saving throw at the start of each of the mound's turns or take 13 (2d8 + 4) bludgeoning damage. If the mound moves, the engulfed target moves with it. The mound can have only one creature engulfed at a time."}]},{"name":"Shield Guardian","size":"Large","type":"Construct","alignment":"unaligned","AC":"17 (natural armor)","HP":"142 (15d10+60)","speed":"30 ft.","strength":18,"dexterity":8,"constitution":18,"intelligence":7,"wisdom":10,"charisma":3,"damageImmunities":"poison","conditionImmunities":"charmed, exhaustion, frightened, paralyzed, poisoned","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"understands commands given in any language but can't speak","challenge":"7","traits":[{"name":"Bound","text":"The shield guardian is magically bound to an amulet. As long as the guardian and its amulet are on the same plane of existence, the amulet's wearer can telepathically call the guardian to travel to it, and the guardian knows the distance and direction to the amulet. If the guardian is within 60 feet of the amulet's wearer, half of any damage the wearer takes (rounded up) is transferred to the guardian."},{"name":"Regeneration","text":"The shield guardian regains 10 hit points at the start of its turn if it has at least 1 hit. point."},{"name":"Spell Storing","text":"A spellcaster who wears the shield guardian's amulet can cause the guardian to store one spell of 4th level or lower. To do so, the wearer must cast the spell on the guardian. The spell has no effect but is stored within the guardian. When commanded to do so by the wearer or when a situation arises that was predefined by the spellcaster, the guardian casts the stored spell with any parameters set by the original caster, requiring no components. When the spell is cast or a new spell is stored, any previously stored spell is lost."}],"actions":[{"name":"Multiattack","text":"The guardian makes two fist attacks."},{"name":"Fist","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) bludgeoning damage."}],"reactions":[{"name":"Shield","text":"When a creature makes an attack against the wearer of the guardian's amulet, the guardian grants a +2 bonus to the wearer's AC if the guardian is within 5 feet of the wearer."}]},{"name":"Shrieker","size":"Medium","type":"Plant","alignment":"unaligned","AC":"5","HP":"13 (3d8)","speed":"0 ft.","strength":1,"dexterity":1,"constitution":10,"intelligence":1,"wisdom":3,"charisma":1,"conditionImmunities":"blinded, deafened, frightened","senses":"blindsight 30 ft. (blind beyond this radius)","challenge":"0","traits":[{"name":"False Appearance","text":"While the shrieker remains motionless, it is indistinguishable from an ordinary fungus."}],"actions":[{"name":"Shriek","text":"When bright light or a creature is within 30 feet of the shrieker, it emits a shriek audible within 300 feet of it. The shrieker continues to shriek until the disturbance moves out of range and for 1d4 of the shrieker's turns afterward"}]},{"name":"Silver Dragon Wyrmling","size":"Medium","type":"Dragon","alignment":"lawful good","AC":"17 (natural armor)","HP":"45 (6d8+18)","speed":"30 ft., fly 60 ft.","strength":19,"dexterity":10,"constitution":17,"intelligence":12,"wisdom":11,"charisma":15,"savingThrows":"Dex +2, Con +5, Wis +2, Cha +4","skills":"Perception +4, Stealth +2","damageImmunities":"cold","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"Draconic","challenge":"2","actions":[{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 9 (1d10 + 4) piercing damage."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Cold Breath","text":"The dragon exhales an icy blast in a 15-foot cone. Each creature in that area must make a DC 13 Constitution saving throw, taking 18 (4d8) cold damage on a failed save, or half as much damage on a successful one."},{"name":"Paralyzing Breath","text":"The dragon exhales paralyzing gas in a 15-foot cone. Each creature in that area must succeed on a DC 13 Constitution saving throw or be paralyzed for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."}]},{"name":"Skeleton","size":"Medium","type":"Undead","alignment":"lawful evil","AC":"13 (armor scraps)","HP":"13 (2d8+4)","speed":"30 ft.","strength":10,"dexterity":14,"constitution":15,"intelligence":6,"wisdom":8,"charisma":5,"damageVulnerabilities":"bludgeoning","conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"understands all languages it spoke in life but can't speak","challenge":"1/4","actions":[{"name":"Shortsword","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage."},{"name":"Shortbow","text":"Ranged Weapon Attack: +4 to hit, range 80/320 ft., one target. Hit: 5 (1d6 + 2) piercing damage."}]},{"name":"Solar","size":"Large","type":"Celestial","alignment":"lawful good","AC":"21 (natural armor)","HP":"243 (18d10+144)","speed":"50 ft., fly 150 ft.","strength":26,"dexterity":22,"constitution":26,"intelligence":25,"wisdom":25,"charisma":30,"savingThrows":"Int +14, Wis +14, Cha +17","skills":"Perception +14","damageResistances":"radiant; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"necrotic, poison","conditionImmunities":"charmed, exhaustion, frightened, poisoned","senses":"truesight 120 ft.","languages":"all, telepathy 120 ft.","challenge":"21","traits":[{"name":"Angelic Weapons","text":"The solar's weapon attacks are magical. When the solar hits with any weapon, the weapon deals an extra 6d8 radiant damage (included in the attack)."},{"name":"Divine Awareness","text":"The solar knows if it hears a lie."},{"name":"Innate Spellcasting","text":"The solar's spellcasting ability is Charisma (spell save DC 25). It can innately cast the following spells, requiring no material components:\nAt will: detect evil and good, invisibility (self only)\n3/day each: blade barrier, dispel evil and good, resurrection\n1/day each: commune, control weather"},{"name":"Magic Resistance","text":"The solar has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The solar makes two greatsword attacks."},{"name":"Greatsword","text":"Melee Weapon Attack: +15 to hit, reach 5 ft., one target. Hit: 22 (4d6 + 8) slashing damage plus 27 (6d8) radiant damage."},{"name":"Slaying Longbow","text":"Ranged Weapon Attack: +13 to hit, range 150/600 ft., one target. Hit: 15 (2d8 + 6) piercing damage plus 27 (6d8) radiant damage. If the target is a creature that has 190 hit points or fewer, it must succeed on a DC 15 Constitution saving throw or die."},{"name":"Flying Sword","text":"The solar releases its greatsword to hover magically in an unoccupied space within 5 ft. of it. If the solar can see the sword, the solar can mentally command it as a bonus action to fly up to 50 ft. and either make one attack against a target or return to the solar's hands. If the hovering sword is targeted by any effect, the solar is considered to be holding it. The hovering sword falls if the solar dies."},{"name":"Healing Touch","text":"The solar touches another creature. The target magically regains 40 (8d8 + 4) hit points and is freed from any curse, disease, poison, blindness, or deafness.","recharge":"4/Day"}],"legendaryPoints":3,"legendaryActions":[{"name":"Teleport","text":"The solar magically teleports, along with any equipment it is wearing or carrying, up to 120 ft. to an unoccupied space it can see.","cost":1},{"name":"Searing Burst","text":"The solar emits magical, divine energy. Each creature of its choice in a 10 -foot radius must make a DC 23 Dexterity saving throw, taking 14 (4d6) fire damage plus 14 (4d6) radiant damage on a failed save, or half as much damage on a successful one.","cost":2},{"name":"Blinding Gaze","text":"The solar targets one creature it can see within 30 ft. of it. If the target can see it, the target must succeed on a DC 15 Constitution saving throw or be blinded until magic such as the lesser restoration spell removes the blindness.","cost":3}],"spells":"detect evil and good, invisibility, blade barrier, dispel evil and good, resurrection, commune, control weather"},{"name":"Specter","size":"Medium","type":"Undead","alignment":"chaotic evil","AC":"12","HP":"22 (5d8)","speed":"0 ft., fly 50 ft. (hover)","strength":1,"dexterity":14,"constitution":11,"intelligence":10,"wisdom":10,"charisma":11,"damageResistances":"acid, cold, fire, lightning, thunder; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"necrotic, poison","conditionImmunities":"charmed, exhaustion, grappled, paralyzed, petrified, poisoned, prone, restrained, unconscious","senses":"darkvision 60 ft.","languages":"understands all languages it knew in life but can't speak","challenge":"1","traits":[{"name":"Incorporeal Movement","text":"The specter can move through other creatures and objects as if they were difficult terrain. It takes 5 (1d10) force damage if it ends its turn inside an object."},{"name":"Sunlight Sensitivity","text":"While in sunlight, the specter has disadvantage on attack rolls, as well as on Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Life Drain","text":"Melee Spell Attack: +4 to hit, reach 5 ft., one creature. Hit: 10 (3d6) necrotic damage. The target must succeed on a DC 10 Constitution saving throw or its hit point maximum is reduced by an amount equal to the damage taken. This reduction lasts until the creature finishes a long rest. The target dies if this effect reduces its hit point maximum to 0."}]},{"name":"Spider","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"12","HP":"1 (1d4-1)","speed":"20 ft., climb 20 ft.","strength":2,"dexterity":14,"constitution":8,"intelligence":1,"wisdom":10,"charisma":2,"skills":"Stealth +4","senses":"darkvision 30 ft.","challenge":"0","traits":[{"name":"Spider Climb","text":"The spider can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."},{"name":"Web Sense","text":"While in contact with a web, the spider knows the exact location of any other creature in contact with the same web."},{"name":"Web Walker","text":"The spider ignores movement restrictions caused by webbing."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 1 piercing damage, and the target must succeed on a DC 9 Constitution saving throw or take 2 (1d4) poison damage."}]},{"name":"Spirit Naga","size":"Large","type":"Monstrosity","alignment":"chaotic evil","AC":"15 (natural armor)","HP":"75 (10d10+20)","speed":"40 ft.","strength":18,"dexterity":17,"constitution":14,"intelligence":16,"wisdom":15,"charisma":16,"savingThrows":"Dex +6, Con +5, Wis +5, Cha +6","damageImmunities":"poison","conditionImmunities":"charmed, poisoned","senses":"darkvision 60 ft.","languages":"Abyssal, Common","challenge":"8","traits":[{"name":"Rejuvenation","text":"If it dies, the naga returns to life in 1d6 days and regains all its hit points. Only a wish spell can prevent this trait from functioning."},{"name":"Spellcasting","text":"The naga is a 10th-level spellcaster. Its spellcasting ability is Intelligence (spell save DC 14, +6 to hit with spell attacks), and it needs only verbal components to cast its spells. It has the following wizard spells prepared:\nCantrips (at will): mage hand, minor illusion, ray of frost\n1st level (4 slots): charm person, detect magic, sleep\n2nd level (3 slots): detect thoughts, hold person\n3rd level (3 slots): lightning bolt, water breathing\n4th level (3 slots): blight, dimension door\n5th level (2 slots): dominate person"}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 10 ft., one creature. Hit: 7 (1d6 + 4) piercing damage, and the target must make a DC 13 Constitution saving throw, taking 31 (7d8) poison damage on a failed save, or half as much damage on a successful one."}],"spells":"mage hand, minor illusion, ray of frost, charm person, detect magic, sleep, detect thoughts, hold person, lightning bolt, water breathing, blight, dimension door, dominate person"},{"name":"Sprite","size":"Tiny","type":"Fey","alignment":"neutral good","AC":"15 (leather armor)","HP":"2 (1d4)","speed":"10 ft., fly 40 ft.","strength":3,"dexterity":18,"constitution":10,"intelligence":14,"wisdom":13,"charisma":11,"skills":"Perception +3, Stealth +8","languages":"Common, Elvish, Sylvan","challenge":"1/4","actions":[{"name":"Longsword","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one target. Hit: 1 slashing damage."},{"name":"Shortbow","text":"Ranged Weapon Attack: +6 to hit, range 40/160 ft., one target. Hit: 1 piercing damage, and the target must succeed on a DC 10 Constitution saving throw or become poisoned for 1 minute. If its saving throw result is 5 or lower, the poisoned target falls unconscious for the same duration, or until it takes damage or another creature takes an action to shake it awake."},{"name":"Heart Sight","text":"The sprite touches a creature and magically knows the creature's current emotional state. If the target fails a DC 10 Charisma saving throw, the sprite also knows the creature's alignment. Celestials, fiends, and undead automatically fail the saving throw."},{"name":"Invisibility","text":"The sprite magically turns invisible until it attacks or casts a spell, or until its concentration ends (as if concentrating on a spell). Any equipment the sprite wears or carries is invisible with it."}]},{"name":"Spy","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"12","HP":"27 (6d8)","speed":"30 ft.","strength":10,"dexterity":15,"constitution":10,"intelligence":12,"wisdom":14,"charisma":16,"skills":"Deception +5, Insight +4, Investigation +5, Perception +6, Persuasion +5, Sleight of Hand +4, Stealth +4","languages":"any two languages","challenge":"1","traits":[{"name":"Cunning Action","text":"On each of its turns, the spy can use a bonus action to take the Dash, Disengage, or Hide action."},{"name":"Sneak Attack","text":"The spy deals an extra 7 (2d6) damage when it hits a target with a weapon attack and has advantage on the attack roll, or when the target is within 5 ft. of an ally of the spy that isn't incapacitated and the spy doesn't have disadvantage on the attack roll.","recharge":"1/Turn"}],"actions":[{"name":"Multiattack","text":"The spy makes two melee attacks."},{"name":"Shortsword","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage."},{"name":"Hand Crossbow","text":"Ranged Weapon Attack: +4 to hit, range 30/120 ft., one target. Hit: 5 (1d6 + 2) piercing damage."}]},{"name":"Steam Mephit","size":"Small","type":"Elemental","alignment":"neutral evil","AC":"10","HP":"21 (6d6)","speed":"30 ft., fly 30 ft.","strength":5,"dexterity":11,"constitution":10,"intelligence":11,"wisdom":10,"charisma":12,"damageImmunities":"fire, poison","conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"Aquan, Ignan","challenge":"1/4","traits":[{"name":"Death Burst","text":"When the mephit dies, it explodes in a cloud of steam. Each creature within 5 ft. of the mephit must succeed on a DC 10 Dexterity saving throw or take 4 (1d8) fire damage."},{"name":"Innate Spellcasting","text":"The mephit can innately cast blur, requiring no material components. Its innate spellcasting ability is Charisma.","recharge":"1/Day"}],"actions":[{"name":"Claws","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one creature. Hit: 2 (1d4) slashing damage plus 2 (1d4) fire damage."},{"name":"Steam Breath","text":"The mephit exhales a 15-foot cone of scalding steam. Each creature in that area must succeed on a DC 10 Dexterity saving throw, taking 4 (1d8) fire damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 6"},{"name":"Variant: Summon Mephits","text":"The mephit has a 25 percent chance of summoning 1d4 mephits of its kind. A summoned mephit appears in an unoccupied space within 60 feet of its summoner, acts as an ally of its summoner, and can't summon other mephits. It remains for 1 minute, until it or its summoner dies, or until its summoner dismisses it as an action.","recharge":"1/Day"}]},{"name":"Stirge","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"14 (natural armor)","HP":"2 (1d4)","speed":"10 ft., fly 40 ft.","strength":4,"dexterity":16,"constitution":11,"intelligence":2,"wisdom":8,"charisma":6,"senses":"darkvision 60 ft.","challenge":"1/8","actions":[{"name":"Blood Drain","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one creature. Hit: 5 (1d4 + 3) piercing damage, and the stirge attaches to the target. While attached, the stirge doesn't attack. Instead, at the start of each of the stirge's turns, the target loses 5 (1d4 + 3) hit points due to blood loss.\nThe stirge can detach itself by spending 5 feet of its movement. It does so after it drains 10 hit points of blood from the target or the target dies. A creature, including the target, can use its action to detach the stirge."}]},{"name":"Stone Giant","size":"Huge","type":"Giant","alignment":"neutral","AC":"17 (natural armor)","HP":"126 (11d12+55)","speed":"40 ft.","strength":23,"dexterity":15,"constitution":20,"intelligence":10,"wisdom":12,"charisma":9,"savingThrows":"Dex +5, Con +8, Wis +4","skills":"Athletics +12, Perception +4","senses":"darkvision 60 ft.","languages":"Giant","challenge":"7","traits":[{"name":"Stone Camouflage","text":"The giant has advantage on Dexterity (Stealth) checks made to hide in rocky terrain."}],"actions":[{"name":"Multiattack","text":"The giant makes two greatclub attacks."},{"name":"Greatclub","text":"Melee Weapon Attack: +9 to hit, reach 15 ft., one target. Hit: 19 (3d8 + 6) bludgeoning damage."},{"name":"Rock","text":"Ranged Weapon Attack: +9 to hit, range 60/240 ft., one target. Hit: 28 (4d10 + 6) bludgeoning damage. If the target is a creature, it must succeed on a DC 17 Strength saving throw or be knocked prone."}],"reactions":[{"name":"Rock Catching","text":"If a rock or similar object is hurled at the giant, the giant can, with a successful DC 10 Dexterity saving throw, catch the missile and take no bludgeoning damage from it."}]},{"name":"Stone Golem","size":"Large","type":"Construct","alignment":"unaligned","AC":"17 (natural armor)","HP":"178 (17d10+85)","speed":"30 ft.","strength":22,"dexterity":9,"constitution":20,"intelligence":3,"wisdom":11,"charisma":1,"damageImmunities":"poison, psychic; bludgeoning, piercing, and slashing from nonmagical attacks that aren't adamantine","conditionImmunities":"charmed, exhaustion, frightened, paralyzed, petrified, poisoned","senses":"darkvision 120 ft.","languages":"understands the languages of its creator but can't speak","challenge":"10","traits":[{"name":"Immutable Form","text":"The golem is immune to any spell or effect that would alter its form."},{"name":"Magic Resistance","text":"The golem has advantage on saving throws against spells and other magical effects."},{"name":"Magic Weapons","text":"The golem's weapon attacks are magical."}],"actions":[{"name":"Multiattack","text":"The golem makes two slam attacks."},{"name":"Slam","text":"Melee Weapon Attack: +10 to hit, reach 5 ft., one target. Hit: 19 (3d8 + 6) bludgeoning damage."},{"name":"Slow","text":"The golem targets one or more creatures it can see within 10 ft. of it. Each target must make a DC 17 Wisdom saving throw against this magic. On a failed save, a target can't use reactions, its speed is halved, and it can't make more than one attack on its turn. In addition, the target can take either an action or a bonus action on its turn, not both. These effects last for 1 minute. A target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success.","recharge":"Recharge 5-6"}]},{"name":"Storm Giant","size":"Huge","type":"Giant","alignment":"chaotic good","AC":"16 (scale mail)","HP":"230 (20d12+100)","speed":"50 ft., swim 50 ft.","strength":29,"dexterity":14,"constitution":20,"intelligence":16,"wisdom":18,"charisma":18,"savingThrows":"Str +14, Con +10, Wis +9, Cha +9","skills":"Arcana +8, Athletics +14, History +8, Perception +9","damageResistances":"cold","damageImmunities":"lightning, thunder","languages":"Common, Giant","challenge":"13","traits":[{"name":"Amphibious","text":"The giant can breathe air and water."},{"name":"Innate Spellcasting","text":"The giant's innate spellcasting ability is Charisma (spell save DC 17). It can innately cast the following spells, requiring no material components:\nAt will: detect magic, feather fall, levitate, light\n3/day each: control weather, water breathing"}],"actions":[{"name":"Multiattack","text":"The giant makes two greatsword attacks."},{"name":"Greatsword","text":"Melee Weapon Attack: +14 to hit, reach 10 ft., one target. Hit: 30 (6d6 + 9) slashing damage."},{"name":"Rock","text":"Ranged Weapon Attack: +14 to hit, range 60/240 ft., one target. Hit: 35 (4d12 + 9) bludgeoning damage."},{"name":"Lightning Strike","text":"The giant hurls a magical lightning bolt at a point it can see within 500 feet of it. Each creature within 10 feet of that point must make a DC 17 Dexterity saving throw, taking 54 (12d8) lightning damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}],"spells":"detect magic, feather fall, levitate, light, control weather, water breathing"},{"name":"Succubus/Incubus","size":"Medium","type":"Fiend (shapechanger)","alignment":"neutral evil","AC":"15 (natural armor)","HP":"66 (12d8+12)","speed":"30 ft., fly 60 ft.","strength":8,"dexterity":17,"constitution":13,"intelligence":15,"wisdom":12,"charisma":20,"skills":"Deception +9, Insight +5, Perception +5, Persuasion +9, Stealth +7","damageResistances":"cold, fire, lightning, poison; bludgeoning, piercing, and slashing from nonmagical attacks","senses":"darkvision 60 ft.","languages":"Abyssal, Common, Infernal, telepathy 60 ft.","challenge":"4","traits":[{"name":"Telepathic Bond","text":"The fiend ignores the range restriction on its telepathy when communicating with a creature it has charmed. The two don't even need to be on the same plane of existence."},{"name":"Shapechanger","text":"The fiend can use its action to polymorph into a Small or Medium humanoid, or back into its true form. Without wings, the fiend loses its flying speed. Other than its size and speed, its statistics are the same in each form. Any equipment it is wearing or carrying isn't transformed. It reverts to its true form if it dies."}],"actions":[{"name":"Claw","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) slashing damage.","recharge":"Fiend Form Only"},{"name":"Charm","text":"One humanoid the fiend can see within 30 feet of it must succeed on a DC 15 Wisdom saving throw or be magically charmed for 1 day. The charmed target obeys the fiend's verbal or telepathic commands. If the target suffers any harm or receives a suicidal command, it can repeat the saving throw, ending the effect on a success. If the target successfully saves against the effect, or if the effect on it ends, the target is immune to this fiend's Charm for the next 24 hours.\nThe fiend can have only one target charmed at a time. If it charms another, the effect on the previous target ends."},{"name":"Draining Kiss","text":"The fiend kisses a creature charmed by it or a willing creature. The target must make a DC 15 Constitution saving throw against this magic, taking 32 (5d10 + 5) psychic damage on a failed save, or half as much damage on a successful one. The target's hit point maximum is reduced by an amount equal to the damage taken. This reduction lasts until the target finishes a long rest. The target dies if this effect reduces its hit point maximum to 0."},{"name":"Etherealness","text":"The fiend magically enters the Ethereal Plane from the Material Plane, or vice versa."}]},{"name":"Swarm of Bats","size":"Medium","type":"Swarm of Tiny beasts","alignment":"unaligned","AC":"12","HP":"22 (5d8)","speed":"0 ft., fly 30 ft.","strength":5,"dexterity":15,"constitution":10,"intelligence":2,"wisdom":12,"charisma":4,"damageResistances":"bludgeoning, piercing, slashing","conditionImmunities":"charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned","senses":"blindsight 60 ft.","challenge":"1/4","traits":[{"name":"Echolocation","text":"The swarm can't use its blindsight while deafened."},{"name":"Keen Hearing","text":"The swarm has advantage on Wisdom (Perception) checks that rely on hearing."},{"name":"Swarm","text":"The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny bat. The swarm can't regain hit points or gain temporary hit points."}],"actions":[{"name":"Bites","text":"Melee Weapon Attack: +4 to hit, reach 0 ft., one creature in the swarm's space. Hit: 5 (2d4) piercing damage, or 2 (1d4) piercing damage if the swarm has half of its hit points or fewer."}]},{"name":"Swarm of Beetles","size":"Medium","type":"Swarm of Tiny beasts","alignment":"unaligned","AC":"12 (natural armor)","HP":"22 (5d8)","speed":"20 ft., burrow 5 ft., climb 20 ft.","strength":3,"dexterity":13,"constitution":10,"intelligence":1,"wisdom":7,"charisma":1,"damageResistances":"bludgeoning, piercing, slashing","conditionImmunities":"charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned","senses":"blindsight 10 ft.","challenge":"1/2","traits":[{"name":"Swarm","text":"The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny insect. The swarm can't regain hit points or gain temporary hit points."}],"actions":[{"name":"Bites","text":"Melee Weapon Attack: +3 to hit, reach 0 ft., one target in the swarm's space. Hit: 10 (4d4) piercing damage, or 5 (2d4) piercing damage if the swarm has half of its hit points or fewer."}]},{"name":"Swarm of Centipedes","size":"Medium","type":"Swarm of Tiny beasts","alignment":"unaligned","AC":"12 (natural armor)","HP":"22 (5d8)","speed":"20 ft., climb 20 ft.","strength":3,"dexterity":13,"constitution":10,"intelligence":1,"wisdom":7,"charisma":1,"damageResistances":"bludgeoning, piercing, slashing","conditionImmunities":"charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned","senses":"blindsight 10 ft.","challenge":"1/2","traits":[{"name":"Swarm","text":"The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny insect. The swarm can't regain hit points or gain temporary hit points."}],"actions":[{"name":"Bites","text":"Melee Weapon Attack: +3 to hit, reach 0 ft., one target in the swarm's space. Hit: 10 (4d4) piercing damage, or 5 (2d4) piercing damage if the swarm has half of its hit points or fewer.\nA creature reduced to 0 hit points by a swarm of centipedes is stable but poisoned for 1 hour, even after regaining hit points, and paralyzed while poisoned in this way."}]},{"name":"Swarm of Insects","size":"Medium","type":"Swarm of Tiny beasts","alignment":"unaligned","AC":"12 (natural armor)","HP":"22 (5d8)","speed":"20 ft., climb 20 ft.","strength":3,"dexterity":13,"constitution":10,"intelligence":1,"wisdom":7,"charisma":1,"damageResistances":"bludgeoning, piercing, slashing","conditionImmunities":"charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned","senses":"blindsight 10 ft.","challenge":"1/2","traits":[{"name":"Swarm","text":"The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny insect. The swarm can't regain hit points or gain temporary hit points."}],"actions":[{"name":"Bites","text":"Melee Weapon Attack: +3 to hit, reach 0 ft., one target in the swarm's space. Hit: 10 (4d4) piercing damage, or 5 (2d4) piercing damage if the swarm has half of its hit points or fewer."}]},{"name":"Swarm of Poisonous Snakes","size":"Medium","type":"Swarm of Tiny beasts","alignment":"unaligned","AC":"14","HP":"36 (8d8)","speed":"30 ft., swim 30 ft.","strength":8,"dexterity":18,"constitution":11,"intelligence":1,"wisdom":10,"charisma":3,"damageResistances":"bludgeoning, piercing, slashing","conditionImmunities":"charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned","senses":"blindsight 10 ft.","challenge":"2","traits":[{"name":"Swarm","text":"The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny snake. The swarm can't regain hit points or gain temporary hit points."}],"actions":[{"name":"Bites","text":"Melee Weapon Attack: +6 to hit, reach 0 ft., one creature in the swarm's space. Hit: 7 (2d6) piercing damage, or 3 (1d6) piercing damage if the swarm has half of its hit points or fewer. The target must make a DC 10 Constitution saving throw, taking 14 (4d6) poison damage on a failed save, or half as much damage on a successful one."}]},{"name":"Swarm of Quippers","size":"Medium","type":"Swarm of Tiny beasts","alignment":"unaligned","AC":"13","HP":"28 (8d8-8)","speed":"0 ft., swim 40 ft.","strength":13,"dexterity":16,"constitution":9,"intelligence":1,"wisdom":7,"charisma":2,"damageResistances":"bludgeoning, piercing, slashing","conditionImmunities":"charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned","senses":"darkvision 60 ft.","challenge":"1","traits":[{"name":"Blood Frenzy","text":"The swarm has advantage on melee attack rolls against any creature that doesn't have all its hit points."},{"name":"Swarm","text":"The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny quipper. The swarm can't regain hit points or gain temporary hit points."},{"name":"Water Breathing","text":"The swarm can breathe only underwater."}],"actions":[{"name":"Bites","text":"Melee Weapon Attack: +5 to hit, reach 0 ft., one creature in the swarm's space. Hit: 14 (4d6) piercing damage, or 7 (2d6) piercing damage if the swarm has half of its hit points or fewer."}]},{"name":"Swarm of Rats","size":"Medium","type":"Swarm of Tiny beasts","alignment":"unaligned","AC":"10","HP":"24 (7d8-7)","speed":"30 ft.","strength":9,"dexterity":11,"constitution":9,"intelligence":2,"wisdom":10,"charisma":3,"damageResistances":"bludgeoning, piercing, slashing","conditionImmunities":"charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned","senses":"darkvision 30 ft.","challenge":"1/4","traits":[{"name":"Keen Smell","text":"The swarm has advantage on Wisdom (Perception) checks that rely on smell."},{"name":"Swarm","text":"The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny rat. The swarm can't regain hit points or gain temporary hit points."}],"actions":[{"name":"Bites","text":"Melee Weapon Attack: +2 to hit, reach 0 ft., one target in the swarm's space. Hit: 7 (2d6) piercing damage, or 3 (1d6) piercing damage if the swarm has half of its hit points or fewer."}]},{"name":"Swarm of Ravens","size":"Medium","type":"Swarm of Tiny beasts","alignment":"unaligned","AC":"12","HP":"24 (7d8-7)","speed":"10 ft., fly 50 ft.","strength":6,"dexterity":14,"constitution":8,"intelligence":3,"wisdom":12,"charisma":6,"damageResistances":"bludgeoning, piercing, slashing","conditionImmunities":"charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned","challenge":"1/4","traits":[{"name":"Swarm","text":"The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny raven. The swarm can't regain hit points or gain temporary hit points."}],"actions":[{"name":"Beaks","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target in the swarm's space. Hit: 7 (2d6) piercing damage, or 3 (1d6) piercing damage if the swarm has half of its hit points or fewer."}]},{"name":"Swarm of Spiders","size":"Medium","type":"Swarm of Tiny beasts","alignment":"unaligned","AC":"12 (natural armor)","HP":"22 (5d8)","speed":"20 ft., climb 20 ft.","strength":3,"dexterity":13,"constitution":10,"intelligence":1,"wisdom":7,"charisma":1,"damageResistances":"bludgeoning, piercing, slashing","conditionImmunities":"charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned","senses":"blindsight 10 ft.","challenge":"1/2","traits":[{"name":"Swarm","text":"The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny insect. The swarm can't regain hit points or gain temporary hit points."},{"name":"Spider Climb","text":"The swarm can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."},{"name":"Web Sense","text":"While in contact with a web, the swarm knows the exact location of any other creature in contact with the same web."},{"name":"Web Walker","text":"The swarm ignores movement restrictions caused by webbing."}],"actions":[{"name":"Bites","text":"Melee Weapon Attack: +3 to hit, reach 0 ft., one target in the swarm's space. Hit: 10 (4d4) piercing damage, or 5 (2d4) piercing damage if the swarm has half of its hit points or fewer."}]},{"name":"Swarm of Wasps","size":"Medium","type":"Swarm of Tiny beasts","alignment":"unaligned","AC":"12 (natural armor)","HP":"22 (5d8)","speed":"5 ft., fly 30 ft.","strength":3,"dexterity":13,"constitution":10,"intelligence":1,"wisdom":7,"charisma":1,"damageResistances":"bludgeoning, piercing, slashing","conditionImmunities":"charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned","senses":"blindsight 10 ft.","challenge":"1/2","traits":[{"name":"Swarm","text":"The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny insect. The swarm can't regain hit points or gain temporary hit points."}],"actions":[{"name":"Bites","text":"Melee Weapon Attack: +3 to hit, reach 0 ft., one target in the swarm's space. Hit: 10 (4d4) piercing damage, or 5 (2d4) piercing damage if the swarm has half of its hit points or fewer."}]},{"name":"Tarrasque","size":"Gargantuan","type":"Monstrosity (titan)","alignment":"unaligned","AC":"25 (natural armor)","HP":"676 (33d20+330)","speed":"40 ft.","strength":30,"dexterity":11,"constitution":30,"intelligence":3,"wisdom":11,"charisma":11,"savingThrows":"Int +5, Wis +9, Cha +9","damageImmunities":"fire, poison; bludgeoning, piercing, and slashing from nonmagical attacks","conditionImmunities":"charmed, frightened, paralyzed, poisoned","senses":"blindsight 120 ft.","challenge":"30","traits":[{"name":"Legendary Resistance","text":"If the tarrasque fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"},{"name":"Magic Resistance","text":"The tarrasque has advantage on saving throws against spells and other magical effects."},{"name":"Reflective Carapace","text":"Any time the tarrasque is targeted by a magic missile spell, a line spell, or a spell that requires a ranged attack roll, roll a d6. On a 1 to 5, the tarrasque is unaffected. On a 6, the tarrasque is unaffected, and the effect is reflected back at the caster as though it originated from the tarrasque, turning the caster into the target."},{"name":"Siege Monster","text":"The tarrasque deals double damage to objects and structures."}],"actions":[{"name":"Multiattack","text":"The tarrasque can use its Frightful Presence. It then makes five attacks: one with its bite, two with its claws, one with its horns, and one with its tai l. It can use its Swallow instead of its bite."},{"name":"Bite","text":"Melee Weapon Attack: +19 to hit, reach 10 ft., one target. Hit: 36 (4d12 + 10) piercing damage. If the target is a creature, it is grappled (escape DC 20). Until this grapple ends, the target is restrained, and the tarrasque can't bite another target."},{"name":"Claw","text":"Melee Weapon Attack: +19 to hit, reach 15 ft., one target. Hit: 28 (4d8 + 10) slashing damage."},{"name":"Horns","text":"Melee Weapon Attack: +19 to hit, reach 10 ft., one target. Hit: 32 (4d10 + 10) piercing damage."},{"name":"Tail","text":"Melee Weapon Attack: +19 to hit, reach 20 ft., one target. Hit: 24 (4d6 + 10) bludgeoning damage. If the target is a creature, it must succeed on a DC 20 Strength saving throw or be knocked prone."},{"name":"Frightful Presence","text":"Each creature of the tarrasque's choice within 120 feet of it and aware of it must succeed on a DC 17 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, with disadvantage if the tarrasque is within line of sight, ending the effect on itself on a success. If a creature's saving throw is successful or the effect ends for it, the creature is immune to the tarrasque's Frightful Presence for the next 24 hours."},{"name":"Swallow","text":"The tarrasque makes one bite attack against a Large or smaller creature it is grappling. If the attack hits, the target takes the bite's damage, the target is swallowed, and the grapple ends. While swallowed, the creature is blinded and restrained, it has total cover against attacks and other effects outside the tarrasque, and it takes 56 (16d6) acid damage at the start of each of the tarrasque's turns.\nIf the tarrasque takes 60 damage or more on a single turn from a creature inside it, the tarrasque must succeed on a DC 20 Constitution saving throw at the end of that turn or regurgitate all swallowed creatures, which fall prone in a space within 10 feet of the tarrasque. If the tarrasque dies, a swallowed creature is no longer restrained by it and can escape from the corpse by using 30 feet of movement, exiting prone."}],"legendaryPoints":3,"legendaryActions":[{"name":"Attack","text":"The tarrasque makes one claw attack or tail attack.","cost":1},{"name":"Move","text":"The tarrasque moves up to half its speed.","cost":1},{"name":"Chomp","text":"The tarrasque makes one bite attack or uses its Swallow.","cost":2}]},{"name":"Thug","size":"Medium","type":"Humanoid (any race)","alignment":"any non-good alignment","AC":"11 (leather armor)","HP":"32 (5d8+10)","speed":"30 ft.","strength":15,"dexterity":11,"constitution":14,"intelligence":10,"wisdom":10,"charisma":11,"skills":"Intimidation +2","languages":"any one language (usually Common)","challenge":"1/2","traits":[{"name":"Pack Tactics","text":"The thug has advantage on an attack roll against a creature if at least one of the thug's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Multiattack","text":"The thug makes two melee attacks."},{"name":"Mace","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 5 (1d6 + 2) bludgeoning damage."},{"name":"Heavy Crossbow","text":"Ranged Weapon Attack: +2 to hit, range 100/400 ft., one target. Hit: 5 (1d10) piercing damage."}]},{"name":"Tiger","size":"Large","type":"Beast","alignment":"unaligned","AC":"12","HP":"37 (5d10+10)","speed":"40 ft.","strength":17,"dexterity":15,"constitution":14,"intelligence":3,"wisdom":12,"charisma":8,"skills":"Perception +3, Stealth +6","senses":"darkvision 60 ft.","challenge":"1","traits":[{"name":"Keen Smell","text":"The tiger has advantage on Wisdom (Perception) checks that rely on smell."},{"name":"Pounce","text":"If the tiger moves at least 20 ft. straight toward a creature and then hits it with a claw attack on the same turn, that target must succeed on a DC 13 Strength saving throw or be knocked prone. If the target is prone, the tiger can make one bite attack against it as a bonus action."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 8 (1d10 + 3) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 7 (1d8 + 3) slashing damage."}]},{"name":"Treant","size":"Huge","type":"Plant","alignment":"chaotic good","AC":"16 (natural armor)","HP":"138 (12d12+60)","speed":"30 ft.","strength":23,"dexterity":8,"constitution":21,"intelligence":12,"wisdom":16,"charisma":12,"damageResistances":"bludgeoning, piercing","damageVulnerabilities":"fire","languages":"Common, Druidic, Elvish, Sylvan","challenge":"9","traits":[{"name":"False Appearance","text":"While the treant remains motionless, it is indistinguishable from a normal tree."},{"name":"Siege Monster","text":"The treant deals double damage to objects and structures."}],"actions":[{"name":"Multiattack","text":"The treant makes two slam attacks."},{"name":"Slam","text":"Melee Weapon Attack: +10 to hit, reach 5 ft., one target. Hit: 16 (3d6 + 6) bludgeoning damage."},{"name":"Rock","text":"Ranged Weapon Attack: +10 to hit, range 60/180 ft., one target. Hit: 28 (4d10 + 6) bludgeoning damage."},{"name":"Animate Trees","text":"The treant magically animates one or two trees it can see within 60 feet of it. These trees have the same statistics as a treant, except they have Intelligence and Charisma scores of 1, they can't speak, and they have only the Slam action option. An animated tree acts as an ally of the treant. The tree remains animate for 1 day or until it dies; until the treant dies or is more than 120 feet from the tree; or until the treant takes a bonus action to turn it back into an inanimate tree. The tree then takes root if possible.","recharge":"1/Day"}]},{"name":"Tribal Warrior","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"12 (hide armor)","HP":"11 (2d8+2)","speed":"30 ft.","strength":13,"dexterity":11,"constitution":12,"intelligence":8,"wisdom":11,"charisma":8,"languages":"any one language","challenge":"1/8","traits":[{"name":"Pack Tactics","text":"The warrior has advantage on an attack roll against a creature if at least one of the warrior's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Spear","text":"Melee or Ranged Weapon Attack: +3 to hit, reach 5 ft. or range 20/60 ft., one target. Hit: 4 (1d6 + 1) piercing damage, or 5 (1d8 + 1) piercing damage if used with two hands to make a melee attack."}]},{"name":"Triceratops","size":"Huge","type":"Beast","alignment":"unaligned","AC":"13 (natural armor)","HP":"95 (10d12+30)","speed":"50 ft.","strength":22,"dexterity":9,"constitution":17,"intelligence":2,"wisdom":11,"charisma":5,"challenge":"5","traits":[{"name":"Trampling Charge","text":"If the triceratops moves at least 20 ft. straight toward a creature and then hits it with a gore attack on the same turn, that target must succeed on a DC 13 Strength saving throw or be knocked prone. If the target is prone, the triceratops can make one stomp attack against it as a bonus action."}],"actions":[{"name":"Gore","text":"Melee Weapon Attack: +9 to hit, reach 5 ft., one target. Hit: 24 (4d8 + 6) piercing damage."},{"name":"Stomp","text":"Melee Weapon Attack: +9 to hit, reach 5 ft., one prone creature. Hit: 22 (3d10 + 6) bludgeoning damage"}]},{"name":"Troll","size":"Large","type":"Giant","alignment":"chaotic evil","AC":"15 (natural armor)","HP":"84 (8d10+40)","speed":"30 ft.","strength":18,"dexterity":13,"constitution":20,"intelligence":7,"wisdom":9,"charisma":7,"skills":"Perception +2","senses":"darkvision 60 ft.","languages":"Giant","challenge":"5","traits":[{"name":"Keen Smell","text":"The troll has advantage on Wisdom (Perception) checks that rely on smell."},{"name":"Regeneration","text":"The troll regains 10 hit points at the start of its turn. If the troll takes acid or fire damage, this trait doesn't function at the start of the troll's next turn. The troll dies only if it starts its turn with 0 hit points and doesn't regenerate."},{"name":"Variant: Loathsome Limbs","text":"Whenever the troll takes at least 15 slashing damage at one time, roll a d20 to determine what else happens to it:\n1-10: Nothing else happens.\n11-14: One leg is severed from the troll if it has any legs left.\n15- 18: One arm is severed from the troll if it has any arms left.\n19-20: The troll is decapitated, but the troll dies only if it can't regenerate. If it dies, so does the severed head.\nIf the troll finishes a short or long rest without reattaching a severed limb or head, the part regrows. At that point, the severed part dies. Until then, a severed part acts on the troll's initiative and has its own action and movement. A severed part has AC 13, 10 hit points, and the troll's Regeneration trait.\nA severed leg is unable to attack and has a speed of 5 feet.\nA severed arm has a speed of 5 feet and can make one claw attack on its turn, with disadvantage on the attack roll unless the troll can see the arm and its target. Each time the troll loses an arm, it loses a claw attack.\nIf its head is severed, the troll loses its bite attack and its body is blinded unless the head can see it. The severed head has a speed of 0 feet and the troll's Keen Smell trait. It can make a bite attack but only against a target in its space.\nThe troll's speed is halved if it's missing a leg. If it loses both legs, it falls prone. If it has both arms, it can crawl. With only one arm, it can still crawl, but its speed is halved. With no arms or legs, its speed is 0, and it can't benefit from bonuses to speed."}],"actions":[{"name":"Multiattack","text":"The troll makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 7 (1d6 + 4) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) slashing damage."}]},{"name":"Tyrannosaurus Rex","size":"Huge","type":"Beast","alignment":"unaligned","AC":"13 (natural armor)","HP":"136 (13d12+52)","speed":"50 ft.","strength":25,"dexterity":10,"constitution":19,"intelligence":2,"wisdom":12,"charisma":9,"skills":"Perception +4","challenge":"8","actions":[{"name":"Multiattack","text":"The tyrannosaurus makes two attacks: one with its bite and one with its tail. It can't make both attacks against the same target."},{"name":"Bite","text":"Melee Weapon Attack: +10 to hit, reach 10 ft., one target. Hit: 33 (4d12 + 7) piercing damage. If the target is a Medium or smaller creature, it is grappled (escape DC 17). Until this grapple ends, the target is restrained, and the tyrannosaurus can't bite another target."},{"name":"Tail","text":"Melee Weapon Attack: +10 to hit, reach 10 ft., one target. Hit: 20 (3d8 + 7) bludgeoning damage."}]},{"name":"Unicorn","size":"Large","type":"Celestial","alignment":"lawful good","AC":"12","HP":"67 (9d10+18)","speed":"50 ft.","strength":18,"dexterity":14,"constitution":15,"intelligence":11,"wisdom":17,"charisma":16,"damageImmunities":"poison","conditionImmunities":"charmed, paralyzed, poisoned","senses":"darkvision 60 ft.","languages":"Celestial, Elvish, Sylvan, telepathy 60 ft.","challenge":"5","traits":[{"name":"Charge","text":"If the unicorn moves at least 20 ft. straight toward a target and then hits it with a horn attack on the same turn, the target takes an extra 9 (2d8) piercing damage. If the target is a creature, it must succeed on a DC 15 Strength saving throw or be knocked prone."},{"name":"Innate Spellcasting","text":"The unicorn's innate spellcasting ability is Charisma (spell save DC 14). The unicorn can innately cast the following spells, requiring no components:\nAt will: detect evil and good, druidcraft, pass without trace\n1/day each: calm emotions, dispel evil and good, entangle"},{"name":"Magic Resistance","text":"The unicorn has advantage on saving throws against spells and other magical effects."},{"name":"Magic Weapons","text":"The unicorn's weapon attacks are magical."}],"actions":[{"name":"Multiattack","text":"The unicorn makes two attacks: one with its hooves and one with its horn."},{"name":"Hooves","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) bludgeoning damage."},{"name":"Horn","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 8 (1d8 + 4) piercing damage."},{"name":"Healing Touch","text":"The unicorn touches another creature with its horn. The target magically regains 11 (2d8 + 2) hit points. In addition, the touch removes all diseases and neutralizes all poisons afflicting the target.","recharge":"3/Day"},{"name":"Teleport","text":"The unicorn magically teleports itself and up to three willing creatures it can see within 5 ft. of it, along with any equipment they are wearing or carrying, to a location the unicorn is familiar with, up to 1 mile away.","recharge":"1/Day"}],"legendaryPoints":3,"legendaryActions":[{"name":"Hooves","text":"The unicorn makes one attack with its hooves.","cost":1},{"name":"Shimmering Shield","text":"The unicorn creates a shimmering, magical field around itself or another creature it can see within 60 ft. of it. The target gains a +2 bonus to AC until the end of the unicorn's next turn.","cost":2},{"name":"Heal Self","text":"The unicorn magically regains 11 (2d8 + 2) hit points.","cost":3}],"spells":"detect evil and good, druidcraft, pass without trace, calm emotions, dispel evil and good, entangle"},{"name":"Vampire","size":"Medium","type":"Undead (shapechanger)","alignment":"lawful evil","AC":"16 (natural armor)","HP":"144 (17d8+68)","speed":"30 ft.","strength":18,"dexterity":18,"constitution":18,"intelligence":17,"wisdom":15,"charisma":18,"savingThrows":"Dex +9, Wis +7, Cha +9","skills":"Perception +7, Stealth +9","damageResistances":"necrotic; bludgeoning, piercing, and slashing from nonmagical attacks","senses":"darkvision 120 ft.","languages":"the languages it knew in life","challenge":"13","traits":[{"name":"Shapechanger","text":"If the vampire isn't in sun light or running water, it can use its action to polymorph into a Tiny bat or a Medium cloud of mist, or back into its true form.\nWhile in bat form, the vampire can't speak, its walking speed is 5 feet, and it has a flying speed of 30 feet. Its statistics, other than its size and speed, are unchanged. Anything it is wearing transforms with it, but nothing it is carrying does. It reverts to its true form if it dies.\nWhile in mist form, the vampire can't take any actions, speak, or manipulate objects. It is weightless, has a flying speed of 20 feet, can hover, and can enter a hostile creature's space and stop there. In addition, if air can pass through a space, the mist can do so without squeezing, and it can't pass through water. It has advantage on Strength, Dexterity, and Constitution saving throws, and it is immune to all nonmagical damage, except the damage it takes from sunlight."},{"name":"Legendary Resistance","text":"If the vampire fails a saving throw, it can choose to succeed instead.","recharge":"3/Day"},{"name":"Misty Escape","text":"When it drops to 0 hit points outside its resting place, the vampire transforms into a cloud of mist (as in the Shapechanger trait) instead of falling unconscious, provided that it isn't in sunlight or running water. If it can't transform, it is destroyed.\nWhile it has 0 hit points in mist form, it can't revert to its vampire form, and it must reach its resting place within 2 hours or be destroyed. Once in its resting place, it reverts to its vampire form. It is then paralyzed until it regains at least 1 hit point. After spending 1 hour in its resting place with 0 hit points, it regains 1 hit point."},{"name":"Regeneration","text":"The vampire regains 20 hit points at the start of its turn if it has at least 1 hit point and isn't in sunlight or running water. If the vampire takes radiant damage or damage from holy water, this trait doesn't function at the start of the vampire's next turn."},{"name":"Spider Climb","text":"The vampire can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."},{"name":"Vampire Weaknesses","text":"The vampire has the following flaws:\nForbiddance. The vampire can't enter a residence without an invitation from one of the occupants.\nHarmed by Running Water. The vampire takes 20 acid damage if it ends its turn in running water.\nStake to the Heart. If a piercing weapon made of wood is driven into the vampire's heart while the vampire is incapacitated in its resting place, the vampire is paralyzed until the stake is removed.\nSunlight Hypersensitivity. The vampire takes 20 radiant damage when it starts its turn in sunlight. While in sunlight, it has disadvantage on attack rolls and ability checks."}],"actions":[{"name":"Multiattack","text":"The vampire makes two attacks, only one of which can be a bite attack.","recharge":"Vampire Form Only"},{"name":"Unarmed Strike","text":"Melee Weapon Attack: +9 to hit, reach 5 ft., one creature. Hit: 8 (1d8 + 4) bludgeoning damage. Instead of dealing damage, the vampire can grapple the target (escape DC 18).","recharge":"Vampire Form Only"},{"name":"Bite","text":"Melee Weapon Attack: +9 to hit, reach 5 ft., one willing creature, or a creature that is grappled by the vampire, incapacitated, or restrained. Hit: 7 (1d6 + 4) piercing damage plus 10 (3d6) necrotic damage. The target's hit point maximum is reduced by an amount equal to the necrotic damage taken, and the vampire regains hit points equal to that amount. The reduction lasts until the target finishes a long rest. The target dies if this effect reduces its hit point maximum to 0. A humanoid slain in this way and then buried in the ground rises the following night as a vampire spawn under the vampire's control.","recharge":"Bat or Vampire Form Only"},{"name":"Charm","text":"The vampire targets one humanoid it can see within 30 ft. of it. If the target can see the vampire, the target must succeed on a DC 17 Wisdom saving throw against this magic or be charmed by the vampire. The charmed target regards the vampire as a trusted friend to be heeded and protected. Although the target isn't under the vampire's control, it takes the vampire's requests or actions in the most favorable way it can, and it is a willing target for the vampire's bit attack.\nEach time the vampire or the vampire's companions do anything harmful to the target, it can repeat the saving throw, ending the effect on itself on a success. Otherwise, the effect lasts 24 hours or until the vampire is destroyed, is on a different plane of existence than the target, or takes a bonus action to end the effect."},{"name":"Children of the Night","text":"The vampire magically calls 2d4 swarms of bats or rats, provided that the sun isn't up. While outdoors, the vampire can call 3d6 wolves instead. The called creatures arrive in 1d4 rounds, acting as allies of the vampire and obeying its spoken commands. The beasts remain for 1 hour, until the vampire dies, or until the vampire dismisses them as a bonus action.","recharge":"1/Day"}],"legendaryPoints":3,"legendaryActions":[{"name":"Move","text":"The vampire moves up to its speed without provoking opportunity attacks.","cost":1},{"name":"Unarmed Strike","text":"The vampire makes one unarmed strike.","cost":1},{"name":"Bite","text":"The vampire makes one bite attack.","cost":2}]},{"name":"Vampire Spawn","size":"Medium","type":"Undead","alignment":"neutral evil","AC":"15 (natural armor)","HP":"82 (11d8+33)","speed":"30 ft.","strength":16,"dexterity":16,"constitution":16,"intelligence":11,"wisdom":10,"charisma":12,"savingThrows":"Dex +6, Wis +3","skills":"Perception +3, Stealth +6","damageResistances":"necrotic; bludgeoning, piercing, and slashing from nonmagical attacks","senses":"darkvision 60 ft.","languages":"the languages it knew in life","challenge":"5","traits":[{"name":"Regeneration","text":"The vampire regains 10 hit points at the start of its turn if it has at least 1 hit point and isn't in sunlight or running water. If the vampire takes radiant damage or damage from holy water, this trait doesn't function at the start of the vampire's next turn."},{"name":"Spider Climb","text":"The vampire can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check."},{"name":"Vampire Weaknesses","text":"The vampire has the following flaws:\nForbiddance. The vampire can't enter a residence without an invitation from one of the occupants.\nHarmed by Running Water. The vampire takes 20 acid damage when it ends its turn in running water.\nStake to the Heart. The vampire is destroyed if a piercing weapon made of wood is driven into its heart while it is incapacitated in its resting place.\nSunlight Hypersensitivity. The vampire takes 20 radiant damage when it starts its turn in sunlight. While in sunlight, it has disadvantage on attack rolls and ability checks."}],"actions":[{"name":"Multiattack","text":"The vampire makes two attacks, only one of which can be a bite attack."},{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one willing creature, or a creature that is grappled by the vampire, incapacitated, or restrained. Hit: 6 (1d6 + 3) piercing damage plus 7 (2d6) necrotic damage. The target's hit point maximum is reduced by an amount equal to the necrotic damage taken, and the vampire regains hit points equal to that amount. The reduction lasts until the target finishes a long rest. The target dies if this effect reduces its hit point maximum to 0."},{"name":"Claws","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one creature. Hit: 8 (2d4 + 3) slashing damage. Instead of dealing damage, the vampire can grapple the target (escape DC 13)."}]},{"name":"Veteran","size":"Medium","type":"Humanoid (any race)","alignment":"any alignment","AC":"17 (splint)","HP":"58 (9d8+18)","speed":"30 ft.","strength":16,"dexterity":13,"constitution":14,"intelligence":10,"wisdom":11,"charisma":10,"skills":"Athletics +5, Perception +2","languages":"any one language (usually Common)","challenge":"3","actions":[{"name":"Multiattack","text":"The veteran makes two longsword attacks. If it has a shortsword drawn, it can also make a shortsword attack."},{"name":"Longsword","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 7 (1d8 + 3) slashing damage, or 8 (1d10 + 3) slashing damage if used with two hands."},{"name":"Shortsword","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) piercing damage."},{"name":"Heavy Crossbow","text":"Ranged Weapon Attack: +3 to hit, range 100/400 ft., one target. Hit: 6 (1d10 + 1) piercing damage."}]},{"name":"Violet Fungus","size":"Medium","type":"Plant","alignment":"unaligned","AC":"5","HP":"18 (4d8)","speed":"5 ft.","strength":3,"dexterity":1,"constitution":10,"intelligence":1,"wisdom":3,"charisma":1,"conditionImmunities":"blinded, deafened, frightened","senses":"blindsight 30 ft. (blind beyond this radius)","challenge":"1/4","traits":[{"name":"False Appearance","text":"While the violet fungus remains motionless, it is indistinguishable from an ordinary fungus."}],"actions":[{"name":"Multiattack","text":"The fungus makes 1d4 Rotting Touch attacks."},{"name":"Rotting Touch","text":"Melee Weapon Attack: +2 to hit, reach 10 ft., one creature. Hit: 4 (1d8) necrotic damage."}]},{"name":"Vrock","size":"Large","type":"Fiend (demon)","alignment":"chaotic evil","AC":"15 (natural armor)","HP":"104 (11d10+44)","speed":"40 ft., fly 60 ft.","strength":17,"dexterity":15,"constitution":18,"intelligence":8,"wisdom":13,"charisma":8,"savingThrows":"Dex +5, Wis +4, Cha +2","damageResistances":"cold, fire, lightning; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"darkvision 120 ft.","languages":"Abyssal, telepathy 120 ft.","challenge":"6","traits":[{"name":"Magic Resistance","text":"The vrock has advantage on saving throws against spells and other magical effects."}],"actions":[{"name":"Multiattack","text":"The vrock makes two attacks: one with its beak and one with its talons."},{"name":"Beak","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) piercing damage."},{"name":"Talons","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 14 (2d10 + 3) slashing damage."},{"name":"Spores","text":"A 15-foot-radius cloud of toxic spores extends out from the vrock. The spores spread around corners. Each creature in that area must succeed on a DC 14 Constitution saving throw or become poisoned. While poisoned in this way, a target takes 5 (1d10) poison damage at the start of each of its turns. A target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. Emptying a vial of holy water on the target also ends the effect on it.","recharge":"Recharge 6"},{"name":"Stunning Screech","text":"The vrock emits a horrific screech. Each creature within 20 feet of it that can hear it and that isn't a demon must succeed on a DC 14 Constitution saving throw or be stunned until the end of the vrock's next turn .","recharge":"1/Day"},{"name":"Variant: Summon Demon","text":"The demon chooses what to summon and attempts a magical summoning.\nA vrock has a 30 percent chance of summoning 2d4 dretches or one vrock.\nA summoned demon appears in an unoccupied space within 60 feet of its summoner, acts as an ally of its summoner, and can't summon other demons. It remains for 1 minute, until it or its summoner dies, or until its summoner dismisses it as an action.","recharge":"1/Day"}]},{"name":"Vulture","size":"Medium","type":"Beast","alignment":"unaligned","AC":"10","HP":"5 (1d8+1)","speed":"10 ft., fly 50 ft.","strength":7,"dexterity":10,"constitution":13,"intelligence":2,"wisdom":12,"charisma":4,"skills":"Perception +3","challenge":"0","traits":[{"name":"Keen Sight and Smell","text":"The vulture has advantage on Wisdom (Perception) checks that rely on sight or smell."},{"name":"Pack Tactics","text":"The vulture has advantage on an attack roll against a creature if at least one of the vulture's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Beak","text":"Melee Weapon Attack: +2 to hit, reach 5 ft., one target. Hit: 2 (1d4) piercing damage."}]},{"name":"Warhorse","size":"Large","type":"Beast","alignment":"unaligned","AC":"11","HP":"19 (3d10+3)","speed":"60 ft.","strength":18,"dexterity":12,"constitution":13,"intelligence":2,"wisdom":12,"charisma":7,"challenge":"1/2","traits":[{"name":"Trampling Charge","text":"If the horse moves at least 20 ft. straight toward a creature and then hits it with a hooves attack on the same turn, that target must succeed on a DC 14 Strength saving throw or be knocked prone. If the target is prone, the horse can make another attack with its hooves against it as a bonus action."}],"actions":[{"name":"Hooves","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) bludgeoning damage."}]},{"name":"Warhorse Skeleton","size":"Large","type":"Undead","alignment":"lawful evil","AC":"13 (barding scraps)","HP":"22 (3d10+6)","speed":"60 ft.","strength":18,"dexterity":12,"constitution":15,"intelligence":2,"wisdom":8,"charisma":5,"damageVulnerabilities":"bludgeoning","damageImmunities":"poison","conditionImmunities":"exhaustion, poisoned","senses":"darkvision 60 ft.","challenge":"1/2","actions":[{"name":"Hooves","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) bludgeoning damage."}]},{"name":"Water Elemental","size":"Large","type":"Elemental","alignment":"neutral","AC":"14 (natural armor)","HP":"114 (12d10+48)","speed":"30 ft., swim 90 ft.","strength":18,"dexterity":14,"constitution":18,"intelligence":5,"wisdom":10,"charisma":8,"damageResistances":"acid; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"poison","conditionImmunities":"exhaustion, grappled, paralyzed, petrified, poisoned, prone, restrained, unconscious","senses":"darkvision 60 ft.","languages":"Aquan","challenge":"5","traits":[{"name":"Water Form","text":"The elemental can enter a hostile creature's space and stop there. It can move through a space as narrow as 1 inch wide without squeezing."},{"name":"Freeze","text":"If the elemental takes cold damage, it partially freezes; its speed is reduced by 20 ft. until the end of its next turn."}],"actions":[{"name":"Multiattack","text":"The elemental makes two slam attacks."},{"name":"Slam","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) bludgeoning damage."},{"name":"Whelm","text":"Each creature in the elemental's space must make a DC 15 Strength saving throw. On a failure, a target takes 13 (2d8 + 4) bludgeoning damage. If it is Large or smaller, it is also grappled (escape DC 14). Until this grapple ends, the target is restrained and unable to breathe unless it can breathe water. If the saving throw is successful, the target is pushed out of the elemental's space.\nThe elemental can grapple one Large creature or up to two Medium or smaller creatures at one time. At the start of each of the elemental's turns, each target grappled by it takes 13 (2d8 + 4) bludgeoning damage. A creature within 5 feet of the elemental can pull a creature or object out of it by taking an action to make a DC 14 Strength check and succeeding.","recharge":"Recharge 4-6"}]},{"name":"Weasel","size":"Tiny","type":"Beast","alignment":"unaligned","AC":"13","HP":"1 (1d4-1)","speed":"30 ft.","strength":3,"dexterity":16,"constitution":8,"intelligence":2,"wisdom":12,"charisma":3,"skills":"Perception +3, Stealth +5","challenge":"0","traits":[{"name":"Keen Hearing and Smell","text":"The weasel has advantage on Wisdom (Perception) checks that rely on hearing or smell."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one creature. Hit: 1 piercing damage."}]},{"name":"Werebear","size":"Medium","type":"Humanoid (human, shapechanger)","alignment":"neutral good","AC":"10 (in humanoid form, 11 in bear and hybrid forms)","HP":"135 (18d8+54)","speed":"30 ft. (40 ft., climb 30 ft. in bear or hybrid form)","strength":19,"dexterity":10,"constitution":17,"intelligence":11,"wisdom":12,"charisma":12,"skills":"Perception +7","challenge":"5","damageImmunities":"bludgeoning, piercing, and slashing damage from nonmagical attacks that aren't silvered","languages":"Common (can't speak in bear form)","traits":[{"name":"Shapechanger","text":"The werebear can use its action to polymorph into a Large bear-humanoid hybrid or into a Large bear, or back into its true form, which is humanoid. Its statistics, other than its size and AC, are the same in each form. Any equipment it. is wearing or carrying isn't transformed. It reverts to its true form if it dies."},{"name":"Keen Smell","text":"The werebear has advantage on WisGlom (Perception) checks that rely on smell."}],"actions":[{"name":"Multiattack","text":"In bear form, the werebear makes two claw attacks. In humanoid form, it makes two greataxe attacks. In hybrid form, it can attack like a bear or a humanoid."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 15 (2d10 + 4) piercing damage. If the target is a humanoid, it must succeed on a DC 14 Constitution saving throw or be cursed with were bear lycanthropy.","recharge":"Bear or Hybrid Form Only"},{"name":"Claw","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) slashing damage.","recharge":"Bear or Hybrid Form Only"},{"name":"Greataxe","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 10 (1d12 + 4) slashing damage.","recharge":"Humanoid or Hybrid Form Only"}]},{"name":"Wereboar","size":"Medium","type":"Humanoid (human, shapechanger)","alignment":"neutral evil","AC":"10 (in humanoid form, 11 in boar and hybrid forms)","HP":"78 (12d8+24)","speed":"30 ft. (40 ft. in boar form)","strength":17,"dexterity":10,"constitution":15,"intelligence":10,"wisdom":11,"charisma":8,"skills":"Perception +2","damageImmunities":"bludgeoning, piercing, and slashing damage from nonmagical attacks that aren't silvered","languages":"Common (can't speak in boar form)","challenge":"4","traits":[{"name":"Shapechanger","text":"The wereboar can use its action to polymorph into a boar-humanoid hybrid or into a boar, or back into its true form, which is humanoid. Its statistics, other than its AC, are the same in each form. Any equipment it is wearing or carrying isn't transformed. It reverts to its true form if it dies."},{"name":"Charge","text":"If the wereboar moves at least 15 feet straight toward a target and then hits it with its tusks on the same turn, the target takes an extra 7 (2d6) slashing damage. If the target is a creature, it must succeed on a DC 13 Strength saving throw or be knocked prone.","recharge":"Boar or Hybrid Form Only"},{"name":"Relentless","text":"If the wereboar takes 14 damage or less that would reduce it to 0 hit points, it is reduced to 1 hit point instead.","recharge":"Recharges after a Short or Long Rest"}],"actions":[{"name":"Multiattack","text":"The wereboar makes two attacks, only one of which can be with its tusks.","recharge":"Humanoid or Hybrid Form Only"},{"name":"Maul","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) bludgeoning damage.","recharge":"Humanoid or Hybrid Form Only"},{"name":"Tusks","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) slashing damage. If the target is a humanoid, it must succeed on a DC 12 Constitution saving throw or be cursed with wereboar lycanthropy.","recharge":"Boar or Hybrid Form Only"}]},{"name":"Wererat","size":"Medium","type":"Humanoid (human, shapechanger)","alignment":"lawful evil","AC":"12","HP":"33 (6d8+6)","speed":"30 ft.","strength":10,"dexterity":15,"constitution":12,"intelligence":11,"wisdom":10,"charisma":8,"skills":"Perception +2, Stealth +4","damageImmunities":"bludgeoning, piercing, and slashing damage from nonmagical attacks that aren't silvered","senses":"darkvision 60 ft. (rat form only)","languages":"Common (can't speak in rat form)","challenge":"2","traits":[{"name":"Shapechanger","text":"The wererat can use its action to polymorph into a rat-humanoid hybrid or into a giant rat, or back into its true form, which is humanoid. Its statistics, other than its size, are the same in each form. Any equipment it is wearing or carrying isn't transformed. It reverts to its true form if it dies."},{"name":"Keen Smell","text":"The wererat has advantage on Wisdom (Perception) checks that rely on smell."}],"actions":[{"name":"Multiattack","text":"The wererat makes two attacks, only one of which can be a bite.","recharge":"Humanoid or Hybrid Form Only"},{"name":"Bite","text":". Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 4 (1d4 + 2) piercing damage. If the target is a humanoid, it must succeed on a DC 11 Constitution saving throw or be cursed with wererat lycanthropy.","recharge":"Rat or Hybrid Form Only"},{"name":"Shortsword","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 5 (1d6 + 2) piercing damage.","recharge":"Humanoid or Hybrid Form Only"},{"name":"Hand Crossbow","text":"Ranged Weapon Attack: +4 to hit, range 30/120 ft., one target. Hit: 5 (1d6 + 2) piercing damage.","recharge":"Humanoid or Hybrid Form Only"}]},{"name":"Weretiger","size":"Medium","type":"Humanoid (human, shapechanger)","alignment":"neutral","AC":"12","HP":"120 (16d8+48)","speed":"30 ft. (40 ft. in tiger form)","strength":17,"dexterity":15,"constitution":16,"intelligence":10,"wisdom":13,"charisma":11,"skills":"Perception +5, Stealth +4","damageImmunities":"bludgeoning, piercing, and slashing damage from nonmagical attacks that aren't silvered","senses":"darkvision 60 ft.","languages":"Common (can't speak in tiger form)","challenge":"4","traits":[{"name":"Shapechanger","text":"The weretiger can use its action to polymorph into a tiger-humanoid hybrid or into a tiger, or back into its true form, which is humanoid. Its statistics, other than its size, are the same in each form. Any equipment it is wearing or carrying isn't transformed. It reverts to its true form if it dies."},{"name":"Keen Hearing and Smell","text":"The weretiger has advantage on Wisdom (Perception) checks that rely on hearing or smell."},{"name":"Pounce","text":"If the weretiger moves at least 15 feet straight toward a creature and then hits it with a claw attack on the same turn, that target must succeed on a DC 14 Strength saving throw or be knocked prone. If the target is prone, the weretiger can make one bite attack against it as a bonus action.","recharge":"Tiger or Hybrid Form Only"}],"actions":[{"name":"Multiattack","text":"In humanoid form, the weretiger makes two scimitar attacks or two longbow attacks. In hybrid form, it can attack like a humanoid or make two claw attacks.","recharge":"Humanoid or Hybrid Form Only"},{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 8 (1d10 + 3) piercing damage. If the target is a humanoid, it must succeed on a DC 13 Constitution saving throw or be cursed with weretiger lycanthropy.","recharge":"Tiger or Hybrid Form Only"},{"name":"Claw","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 7 (1d8 + 3) slashing damage.","recharge":"Tiger or Hybrid Form Only"},{"name":"Scimitar","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) slashing damage.","recharge":"Humanoid or Hybrid Form Only"},{"name":"Longbow","text":"Ranged Weapon Attack: +4 to hit, range 150/600 ft., one target. Hit: 6 (1d8 + 2) piercing damage.","recharge":"Humanoid or Hybrid Form Only"}]},{"name":"Werewolf","size":"Medium","type":"Humanoid (human, shapechanger)","alignment":"chaotic evil","AC":"11 (in humanoid form, 12 in wolf or hybrid form)","HP":"58 (9d8+18)","speed":"30 ft. (40 ft. in wolf form)","strength":15,"dexterity":13,"constitution":14,"intelligence":10,"wisdom":11,"charisma":10,"skills":"Perception +4","damageImmunities":"bludgeoning, piercing, and slashing damage from nonmagical attacks that aren't silvered","languages":"Common (can't speak in wolf form)","challenge":"3","traits":[{"name":"Shapechanger","text":"The werewolf can use its action to polymorph into a wolf-humanoid hybrid or into a wolf, or back into its true form, which is humanoid. Its statistics, other than its AC, are the same in each form. Any equipment it is wearing or carrying isn't transformed. It reverts to its true form if it dies."},{"name":"Keen Hearing and Smell","text":"The werewolf has advantage on Wisdom (Perception) checks that rely on hearing or smell."}],"actions":[{"name":"Multiattack","text":"The werewolf makes two attacks: one with its bite and one with its claws or spear.","recharge":"Humanoid or Hybrid Form Only"},{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 6 (1d8 + 2) piercing damage. If the target is a humanoid, it must succeed on a DC 12 Constitution saving throw or be cursed with werewolf lycanthropy.","recharge":"Wolf or Hybrid Form Only"},{"name":"Claws","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 7 (2d4 + 2) slashing damage.","recharge":"Hybrid Form Only"},{"name":"Spear","text":"Melee or Ranged Weapon Attack: +4 to hit, reach 5 ft. or range 20/60 ft., one creature. Hit: 5 (1d6 + 2) piercing damage, or 6 (1d8 + 2) piercing damage if used with two hands to make a melee attack.","recharge":"Humanoid Form Only"}]},{"name":"White Dragon Wyrmling","size":"Medium","type":"Dragon","alignment":"chaotic evil","AC":"16 (natural armor)","HP":"32 (5d8+10)","speed":"30 ft., burrow 15 ft., fly 60 ft., swim 30 ft.","strength":14,"dexterity":10,"constitution":14,"intelligence":5,"wisdom":10,"charisma":11,"savingThrows":"Dex +2, Con +4, Wis +2, Cha +2","skills":"Perception +4, Stealth +2","damageImmunities":"cold","senses":"blindsight 10 ft., darkvision 60 ft.","languages":"Draconic","challenge":"2","actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (1d10 + 2) piercing damage plus 2 (1d4) cold damage."},{"name":"Cold Breath","text":"The dragon exhales an icy blast of hail in a 15-foot cone. Each creature in that area must make a DC 12 Constitution saving throw, taking 22 (5d8) cold damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Wight","size":"Medium","type":"Undead","alignment":"neutral evil","AC":"14 (studded leather)","HP":"45 (6d8+18)","speed":"30 ft.","strength":15,"dexterity":14,"constitution":16,"intelligence":10,"wisdom":13,"charisma":15,"skills":"Perception +3, Stealth +4","damageImmunities":"necrotic; bludgeoning, piercing, and slashing from nonmagical attacks that aren't silvered","conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"the languages it knew in life","challenge":"3","traits":[{"name":"Sunlight Sensitivity","text":"While in sunlight, the wight has disadvantage on attack rolls, as well as on Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Multiattack","text":"The wight makes two longsword attacks or two longbow attacks. It can use its Life Drain in place of one longsword attack."},{"name":"Life Drain","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one creature. Hit: 5 (1d6 + 2) necrotic damage. The target must succeed on a DC 13 Constitution saving throw or its hit point maximum is reduced by an amount equal to the damage taken. This reduction lasts until the target finishes a long rest. The target dies if this effect reduces its hit point maximum to 0.\nA humanoid slain by this attack rises 24 hours later as a zombie under the wight's control, unless the humanoid is restored to life or its body is destroyed. The wight can have no more than twelve zombies under its control at one time."},{"name":"Longsword","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 6 (1d8 + 2) slashing damage, or 7 (1d10 + 2) slashing damage if used with two hands."},{"name":"Longbow","text":"Ranged Weapon Attack: +4 to hit, range 150/600 ft., one target. Hit: 6 (1d8 + 2) piercing damage."}]},{"name":"Will-o'-Wisp","size":"Tiny","type":"Undead","alignment":"chaotic evil","AC":"19","HP":"22 (9d4)","speed":"0 ft., fly 50 ft. (hover)","strength":1,"dexterity":28,"constitution":10,"intelligence":13,"wisdom":14,"charisma":11,"damageResistances":"acid, cold, fire, necrotic, thunder; bludgeoning, piercing, and slashing from nonmagical attacks","damageImmunities":"lightning, poison","conditionImmunities":"exhaustion, grappled, paralyzed, poisoned, prone, restrained, unconscious","senses":"darkvision 120 ft.","languages":"the languages it knew in life","challenge":"2","traits":[{"name":"Consume Life","text":"As a bonus action, the will-o'-wisp can target one creature it can see within 5 ft. of it that has 0 hit points and is still alive. The target must succeed on a DC 10 Constitution saving throw against this magic or die. If the target dies, the will-o'-wisp regains 10 (3d6) hit points."},{"name":"Ephemeral","text":"The will-o'-wisp can't wear or carry anything."},{"name":"Incorporeal Movement","text":"The will-o'-wisp can move through other creatures and objects as if they were difficult terrain. It takes 5 (1d10) force damage if it ends its turn inside an object."},{"name":"Variable Illumination","text":"The will-o'-wisp sheds bright light in a 5- to 20-foot radius and dim light for an additional number of ft. equal to the chosen radius. The will-o'-wisp can alter the radius as a bonus action."}],"actions":[{"name":"Shock","text":"Melee Spell Attack: +4 to hit, reach 5 ft., one creature. Hit: 9 (2d8) lightning damage."},{"name":"Invisibility","text":"The will-o'-wisp and its light magically become invisible until it attacks or uses its Consume Life, or until its concentration ends (as if concentrating on a spell)."}]},{"name":"Winter Wolf","size":"Large","type":"Monstrosity","alignment":"neutral evil","AC":"13 (natural armor)","HP":"75 (10d10+20)","speed":"50 ft.","strength":18,"dexterity":13,"constitution":14,"intelligence":7,"wisdom":12,"charisma":8,"skills":"Perception +5, Stealth +3","damageImmunities":"cold","languages":"Common, Giant, Winter Wolf","challenge":"3","traits":[{"name":"Keen Hearing and Smell","text":"The wolf has advantage on Wisdom (Perception) checks that rely on hearing or smell."},{"name":"Pack Tactics","text":"The wolf has advantage on an attack roll against a creature if at least one of the wolf's allies is within 5 ft. of the creature and the ally isn't incapacitated."},{"name":"Snow Camouflage","text":"The wolf has advantage on Dexterity (Stealth) checks made to hide in snowy terrain."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) piercing damage. If the target is a creature, it must succeed on a DC 14 Strength saving throw or be knocked prone."},{"name":"Cold Breath","text":"The wolf exhales a blast of freezing wind in a 15-foot cone. Each creature in that area must make a DC 12 Dexterity saving throw, taking 18 (4d8) cold damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Wolf","size":"Medium","type":"Beast","alignment":"unaligned","AC":"13 (natural armor)","HP":"11 (2d8+2)","speed":"40 ft.","strength":12,"dexterity":15,"constitution":12,"intelligence":3,"wisdom":12,"charisma":6,"skills":"Perception +3, Stealth +4","challenge":"1/4","traits":[{"name":"Keen Hearing and Smell","text":"The wolf has advantage on Wisdom (Perception) checks that rely on hearing or smell."},{"name":"Pack Tactics","text":"The wolf has advantage on an attack roll against a creature if at least one of the wolf's allies is within 5 ft. of the creature and the ally isn't incapacitated."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +4 to hit, reach 5 ft., one target. Hit: 7 (2d4 + 2) piercing damage. If the target is a creature, it must succeed on a DC 11 Strength saving throw or be knocked prone."}]},{"name":"Worg","size":"Large","type":"Monstrosity","alignment":"neutral evil","AC":"13 (natural armor)","HP":"26 (4d10+4)","speed":"50 ft.","strength":16,"dexterity":13,"constitution":13,"intelligence":7,"wisdom":11,"charisma":8,"skills":"Perception +4","senses":"darkvision 60 ft.","languages":"Goblin, Worg","challenge":"1/2","traits":[{"name":"Keen Hearing and Smell","text":"The worg has advantage on Wisdom (Perception) checks that rely on hearing or smell."}],"actions":[{"name":"Bite","text":"Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 10 (2d6 + 3) piercing damage. If the target is a creature, it must succeed on a DC 13 Strength saving throw or be knocked prone."}]},{"name":"Wraith","size":"Medium","type":"Undead","alignment":"neutral evil","AC":"13","HP":"67 (9d8+27)","speed":"0 ft., fly 60 ft. (hover)","strength":6,"dexterity":16,"constitution":16,"intelligence":12,"wisdom":14,"charisma":15,"damageResistances":"acid, cold, fire, lightning, thunder; bludgeoning, piercing, and slashing from nonmagical attacks that aren't silvered","damageImmunities":"necrotic, poison","conditionImmunities":"charmed, exhaustion, grappled, paralyzed, petrified, poisoned, prone, restrained","senses":"darkvision 60 ft.","languages":"the languages it knew in life","challenge":"5","traits":[{"name":"Incorporeal Movement","text":"The wraith can move through other creatures and objects as if they were difficult terrain. It takes 5 (1d10) force damage if it ends its turn inside an object."},{"name":"Sunlight Sensitivity","text":"While in sunlight, the wraith has disadvantage on attack rolls, as well as on Wisdom (Perception) checks that rely on sight."}],"actions":[{"name":"Life Drain","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one creature. Hit: 21 (4d8 + 3) necrotic damage. The target must succeed on a DC 14 Constitution saving throw or its hit point maximum is reduced by an amount equal to the damage taken. This reduction lasts until the target finishes a long rest. The target dies if this effect reduces its hit point maximum to 0."},{"name":"Create Specter","text":"The wraith targets a humanoid within 10 feet of it that has been dead for no longer than 1 minute and died violently. The target's spirit rises as a specter in the space of its corpse or in the nearest unoccupied space. The specter is under the wraith's control. The wraith can have no more than seven specters under its control at one time."}]},{"name":"Wyvern","size":"Large","type":"Dragon","alignment":"unaligned","AC":"13 (natural armor)","HP":"110 (13d10+39)","speed":"20 ft., fly 80 ft.","strength":19,"dexterity":10,"constitution":16,"intelligence":5,"wisdom":12,"charisma":6,"skills":"Perception +4","senses":"darkvision 60 ft.","challenge":"6","actions":[{"name":"Multiattack","text":"The wyvern makes two attacks: one with its bite and one with its stinger. While flying, it can use its claws in place of one other attack."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 10 ft., one creature. Hit: 11 (2d6 + 4) piercing damage."},{"name":"Claws","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) slashing damage."},{"name":"Stinger","text":"Melee Weapon Attack: +7 to hit, reach 10 ft., one creature. Hit: 11 (2d6 + 4) piercing damage. The target must make a DC 15 Constitution saving throw, taking 24 (7d6) poison damage on a failed save, or half as much damage on a successful one."}]},{"name":"Xorn","size":"Medium","type":"Elemental","alignment":"neutral","AC":"19 (natural armor)","HP":"73 (7d8+42)","speed":"20 ft., burrow 20 ft.","strength":17,"dexterity":10,"constitution":22,"intelligence":11,"wisdom":10,"charisma":11,"skills":"Perception +6, Stealth +3","damageResistances":"piercing and slashing from nonmagical attacks that aren't adamantine","senses":"darkvision 60 ft., tremorsense 60 ft.","languages":"Terran","challenge":"5","traits":[{"name":"Earth Glide","text":"The xorn can burrow through nonmagical, unworked earth and stone. While doing so, the xorn doesn't disturb the material it moves through."},{"name":"Stone Camouflage","text":"The xorn has advantage on Dexterity (Stealth) checks made to hide in rocky terrain."},{"name":"Treasure Sense","text":"The xorn can pinpoint, by scent, the location of precious metals and stones, such as coins and gems, within 60 ft. of it."}],"actions":[{"name":"Multiattack","text":"The xorn makes three claw attacks and one bite attack."},{"name":"Bite","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 13 (3d6 + 3) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 6 (1d6 + 3) slashing damage."}]},{"name":"Young Black Dragon","size":"Large","type":"Dragon","alignment":"chaotic evil","AC":"18 (natural armor)","HP":"127 (15d10+45)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":19,"dexterity":14,"constitution":17,"intelligence":12,"wisdom":11,"charisma":15,"savingThrows":"Dex +5, Con +6, Wis +3, Cha +5","skills":"Perception +6, Stealth +5","damageImmunities":"acid","senses":"blindsight 30 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"7","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."}],"actions":[{"name":"Multiattack","text":"The dragon makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 10 ft., one target. Hit: 15 (2d10 + 4) piercing damage plus 4 (1d8) acid damage."},{"name":"Claw","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) slashing damage."},{"name":"Acid Breath","text":"The dragon exhales acid in a 30-foot line that is 5 feet wide. Each creature in that line must make a DC 14 Dexterity saving throw, taking 49 (11d8) acid damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Young Blue Dragon","size":"Large","type":"Dragon","alignment":"lawful evil","AC":"18 (natural armor)","HP":"152 (16d10+64)","speed":"40 ft., burrow 40 ft., fly 80 ft.","strength":21,"dexterity":10,"constitution":19,"intelligence":14,"wisdom":13,"charisma":17,"savingThrows":"Dex +4, Con +8, Wis +5, Cha +7","skills":"Perception +9, Stealth +4","damageImmunities":"lightning","senses":"blindsight 30 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"9","actions":[{"name":"Multiattack","text":"The dragon makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +9 to hit, reach 10 ft., one target. Hit: 16 (2d10 + 5) piercing damage plus 5 (1d10) lightning damage."},{"name":"Claw","text":"Melee Weapon Attack: +9 to hit, reach 5 ft., one target. Hit: 12 (2d6 + 5) slashing damage."},{"name":"Lightning Breath","text":"The dragon exhales lightning in an 60-foot line that is 5 feet wide. Each creature in that line must make a DC 16 Dexterity saving throw, taking 55 (10d10) lightning damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Young Brass Dragon","size":"Large","type":"Dragon","alignment":"chaotic good","AC":"17 (natural armor)","HP":"110 (13d10+39)","speed":"40 ft., burrow 20 ft., fly 80 ft.","strength":19,"dexterity":10,"constitution":17,"intelligence":12,"wisdom":11,"charisma":15,"savingThrows":"Dex +3, Con +6, Wis +3, Cha +5","skills":"Perception +6, Persuasion +5, Stealth +3","damageImmunities":"fire","senses":"blindsight 30 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"6","actions":[{"name":"Multiattack","text":"The dragon makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 10 ft., one target. Hit: 15 (2d10 + 4) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) slashing damage."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Fire Breath","text":"The dragon exhales fire in a 40-foot line that is 5 feet wide. Each creature in that line must make a DC 14 Dexterity saving throw, taking 42 (12d6) fire damage on a failed save, or half as much damage on a successful one."},{"name":"Sleep Breath","text":"The dragon exhales sleep gas in a 30-foot cone. Each creature in that area must succeed on a DC 14 Constitution saving throw or fall unconscious for 5 minutes. This effect ends for a creature if the creature takes damage or someone uses an action to wake it."}]},{"name":"Young Bronze Dragon","size":"Large","type":"Dragon","alignment":"lawful good","AC":"18 (natural armor)","HP":"142 (15d10+60)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":21,"dexterity":10,"constitution":19,"intelligence":14,"wisdom":13,"charisma":17,"savingThrows":"Dex +3, Con +7, Wis +4, Cha +6","skills":"Insight +4, Perception +7, Stealth +3","damageImmunities":"lightning","senses":"blindsight 30 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"8","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."}],"actions":[{"name":"Multiattack","text":"The dragon makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +8 to hit, reach 10 ft., one target. Hit: 16 (2d10 + 5) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +8 to hit, reach 5 ft., one target. Hit: 12 (2d6 + 5) slashing damage."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Lightning Breath","text":"The dragon exhales lightning in a 60-foot line that is 5 feet wide. Each creature in that line must make a DC 15 Dexterity saving throw, taking 55 (10d10) lightning damage on a failed save, or half as much damage on a successful one."},{"name":"Repulsion Breath","text":"The dragon exhales repulsion energy in a 30-foot cone. Each creature in that area must succeed on a DC 15 Strength saving throw. On a failed save, the creature is pushed 40 feet away from the dragon."}]},{"name":"Young Copper Dragon","size":"Large","type":"Dragon","alignment":"chaotic good","AC":"17 (natural armor)","HP":"119 (14d10+42)","speed":"40 ft., climb 40 ft., fly 80 ft.","strength":19,"dexterity":12,"constitution":17,"intelligence":16,"wisdom":13,"charisma":15,"savingThrows":"Dex +4, Con +6, Wis +4, Cha +5","skills":"Deception +5, Perception +7, Stealth +4","damageImmunities":"acid","senses":"blindsight 30 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"7","actions":[{"name":"Multiattack","text":"The dragon makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 10 ft., one target. Hit: 15 (2d10 + 4) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) slashing damage."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Acid Breath","text":"The dragon exhales acid in an 40-foot line that is 5 feet wide. Each creature in that line must make a DC 14 Dexterity saving throw, taking 40 (9d8) acid damage on a failed save, or half as much damage on a successful one."},{"name":"Slowing Breath","text":"The dragon exhales gas in a 30-foot cone. Each creature in that area must succeed on a DC 14 Constitution saving throw. On a failed save, the creature can't use reactions, its speed is halved, and it can't make more than one attack on its turn. In addition, the creature can use either an action or a bonus action on its turn, but not both. These effects last for 1 minute. The creature can repeat the saving throw at the end of each of its turns, ending the effect on itself with a successful save."}]},{"name":"Young Gold Dragon","size":"Large","type":"Dragon","alignment":"lawful good","AC":"18 (natural armor)","HP":"178 (17d10+85)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":23,"dexterity":14,"constitution":21,"intelligence":16,"wisdom":13,"charisma":20,"savingThrows":"Dex +6, Con +9, Wis +5, Cha +9","skills":"Insight +5, Perception +9, Persuasion +9, Stealth +6","damageImmunities":"fire","senses":"blindsight 30 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"10","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."}],"actions":[{"name":"Multiattack","text":"The dragon makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +10 to hit, reach 10 ft., one target. Hit: 17 (2d10 + 6) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +10 to hit, reach 5 ft., one target. Hit: 13 (2d6 + 6) slashing damage."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Fire Breath","text":"The dragon exhales fire in a 30-foot cone. Each creature in that area must make a DC 17 Dexterity saving throw, taking 55 (10d10) fire damage on a failed save, or half as much damage on a successful one."},{"name":"Weakening Breath","text":"The dragon exhales gas in a 30-foot cone. Each creature in that area must succeed on a DC 17 Strength saving throw or have disadvantage on Strength-based attack rolls, Strength checks, and Strength saving throws for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."}]},{"name":"Young Green Dragon","size":"Large","type":"Dragon","alignment":"lawful evil","AC":"18 (natural armor)","HP":"136 (16d10+48)","speed":"40 ft., fly 80 ft., swim 40 ft.","strength":19,"dexterity":12,"constitution":17,"intelligence":16,"wisdom":13,"charisma":15,"savingThrows":"Dex +4, Con +6, Wis +4, Cha +5","skills":"Deception +5, Perception +7, Stealth +4","damageImmunities":"poison","conditionImmunities":"poisoned","senses":"blindsight 30 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"8","traits":[{"name":"Amphibious","text":"The dragon can breathe air and water."}],"actions":[{"name":"Multiattack","text":"The dragon makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 10 ft., one target. Hit: 15 (2d10 + 4) piercing damage plus 7 (2d6) poison damage."},{"name":"Claw","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) slashing damage."},{"name":"Poison Breath","text":"The dragon exhales poisonous gas in a 30-foot cone. Each creature in that area must make a DC 14 Constitution saving throw, taking 42 (12d6) poison damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Young Red Dragon","size":"Large","type":"Dragon","alignment":"chaotic evil","AC":"18 (natural armor)","HP":"178 (17d10+85)","speed":"40 ft., climb 40 ft., fly 80 ft.","strength":23,"dexterity":10,"constitution":21,"intelligence":14,"wisdom":11,"charisma":19,"savingThrows":"Dex +4, Con +9, Wis +4, Cha +8","skills":"Perception +8, Stealth +4","damageImmunities":"fire","senses":"blindsight 30 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"10","actions":[{"name":"Multiattack","text":"The dragon makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +10 to hit, reach 10 ft., one target. Hit: 17 (2d10 + 6) piercing damage plus 3 (1d6) fire damage."},{"name":"Claw","text":"Melee Weapon Attack: +10 to hit, reach 5 ft., one target. Hit: 13 (2d6 + 6) slashing damage."},{"name":"Fire Breath","text":"The dragon exhales fire in a 30-foot cone. Each creature in that area must make a DC 17 Dexterity saving throw, taking 56 (16d6) fire damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Young Silver Dragon","size":"Large","type":"Dragon","alignment":"lawful good","AC":"18 (natural armor)","HP":"168 (16d10+80)","speed":"40 ft., fly 80 ft.","strength":23,"dexterity":10,"constitution":21,"intelligence":14,"wisdom":11,"charisma":19,"savingThrows":"Dex +4, Con +9, Wis +4, Cha +8","skills":"Arcana +6, History +6, Perception +8, Stealth +4","damageImmunities":"cold","senses":"blindsight 30 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"9","actions":[{"name":"Multiattack","text":"The dragon makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +10 to hit, reach 10 ft., one target. Hit: 17 (2d10 + 6) piercing damage."},{"name":"Claw","text":"Melee Weapon Attack: +10 to hit, reach 5 ft., one target. Hit: 13 (2d6 + 6) slashing damage."},{"name":"Breath Weapons","text":"The dragon uses one of the following breath weapons.","recharge":"Recharge 5-6"},{"name":"Cold Breath","text":"The dragon exhales an icy blast in a 30-foot cone. Each creature in that area must make a DC 17 Constitution saving throw, taking 54 (12d8) cold damage on a failed save, or half as much damage on a successful one."},{"name":"Paralyzing Breath","text":"The dragon exhales paralyzing gas in a 30-foot cone. Each creature in that area must succeed on a DC 17 Constitution saving throw or be paralyzed for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."}]},{"name":"Young White Dragon","size":"Large","type":"Dragon","alignment":"chaotic evil","AC":"17 (natural armor)","HP":"133 (14d10+56)","speed":"40 ft., burrow 20 ft., fly 80 ft., swim 40 ft.","strength":18,"dexterity":10,"constitution":18,"intelligence":6,"wisdom":11,"charisma":12,"savingThrows":"Dex +3, Con +7, Wis +3, Cha +4","skills":"Perception +6, Stealth +3","damageImmunities":"cold","senses":"blindsight 30 ft., darkvision 120 ft.","languages":"Common, Draconic","challenge":"6","traits":[{"name":"Ice Walk","text":"The dragon can move across and climb icy surfaces without needing to make an ability check. Additionally, difficult terrain composed of ice or snow doesn't cost it extra moment."}],"actions":[{"name":"Multiattack","text":"The dragon makes three attacks: one with its bite and two with its claws."},{"name":"Bite","text":"Melee Weapon Attack: +7 to hit, reach 10 ft., one target. Hit: 15 (2d10 + 4) piercing damage plus 4 (1d8) cold damage."},{"name":"Claw","text":"Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 11 (2d6 + 4) slashing damage."},{"name":"Cold Breath","text":"The dragon exhales an icy blast in a 30-foot cone. Each creature in that area must make a DC 15 Constitution saving throw, taking 45 (10d8) cold damage on a failed save, or half as much damage on a successful one.","recharge":"Recharge 5-6"}]},{"name":"Zombie","size":"Medium","type":"Undead","alignment":"neutral evil","AC":"8","HP":"22 (3d8+9)","speed":"20 ft.","strength":13,"dexterity":6,"constitution":16,"intelligence":3,"wisdom":6,"charisma":5,"savingThrows":"Wis +0","conditionImmunities":"poisoned","senses":"darkvision 60 ft.","languages":"understands all languages it spoke in life but can't speak","challenge":"1/4","traits":[{"name":"Undead Fortitude","text":"If damage reduces the zombie to 0 hit points, it must make a Constitution saving throw with a DC of 5+the damage taken, unless the damage is radiant or from a critical hit. On a success, the zombie drops to 1 hit point instead."}],"actions":[{"name":"Slam","text":"Melee Weapon Attack: +3 to hit, reach 5 ft., one target. Hit: 4 (1d6 + 1) bludgeoning damage."}]}],"spells":[{"name":"Acid Splash","level":0,"school":"Conjuration","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You hurl a bubble of acid. Choose one creature within range, or choose two creatures within range that are within 5 feet of each other. A target must succeed on a Dexterity saving throw or take 1d6 acid damage.","higherLevel":"This spell's damage increases by 1d6 when you reach 5th level (2d6), 11th level (3d6), and 17th level (4d6).","emote":"hurls a bubble of acid","save":{"ability":"Dexterity","damage":"((@{level} + 1) / 6 + 0.5)d6","damageType":"acid"}},{"name":"Aid","level":2,"school":"Abjuration","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a tiny strip of white cloth"},"duration":"8 hours","description":"Your spell bolsters your allies with toughness and resolve. Choose up to three creatures within range. Each target's hit point maximum and current hit points increase by 5 for the duration.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, a target's hit points increase by an additional 5 for each slot level above 2nd.","emote":"bolsters {{GENDER_PRONOUN_HE_SHE}} allies with toughness and resolve"},{"name":"Alarm","level":1,"school":"Abjuration","ritual":true,"castingTime":"1 minute","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a tiny bell and a piece of fine silver wire"},"duration":"8 hours","description":"You set an alarm against unwanted intrusion. Choose a door, a window, or an area within range that is no larger than a 20-foot cube. Until the spell ends, an alarm alerts you whenever a Tiny or larger creature touches or enters the warded area. When you cast the spell, you can designate creatures that won't set off the alarm. You also choose whether the alarm is mental or audible.\nA mental alarm alerts you with a ping in your mind if you are within 1 mile of the warded area. This ping awakens you if you are sleeping.\nAn audible alarm produces the sound of a hand bell for 10 seconds within 60 feet.","emote":"sets an alarm against unwanted intrusion"},{"name":"Alter Self","level":2,"school":"Transmutation","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 hour","description":"You assume a different form. When you cast the spell, choose one of the following options, the effects of which last for the duration of the spell. While the spell lasts, you can end one option as an action to gain the benefits of a different one.\nAquatic Adaptation. You adapt your body to an aquatic environment, sprouting gills and growing webbing between your fingers. You can breathe underwater and gain a swimming speed equal to your walking speed.\nChange Appearance. You transform your appearance. You decide what you look like, including your height, weight, facial features, sound of your voice, hair length, coloration, and distinguishing characteristics, if any. You can make yourself appear as a member of another race, though none of your statistics change. You also can't appear as a creature of a different size than you, and your basic shape stays the same; if you're bipedal, you can't use this spell to become quadrupedal, for instance. At any time for the duration of the spell, you can use your action to change your appearance in this way again.\nNatural Weapons. You grow claws, fangs, spines, horns, or a different natural weapon of your choice. Your unarmed strikes deal 1d6 bludgeoning, piercing, or slashing damage, as appropriate to the natural weapon you chose, and you are proficient with your unarmed strikes. Finally, the natural weapon is magic and you have a +1 bonus to the attack and damage rolls you make using it.","emote":"assumes a different form"},{"name":"Animal Friendship","level":1,"school":"Enchantment","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a morsel of food"},"duration":"24 hours","description":"This spell lets you convince a beast that you mean it no harm. Choose a beast that you can see within range. It must see and hear you. If the beast's Intelligence is 4 or higher, the spell fails. Otherwise, the beast must succeed on a Wisdom saving throw or be charmed by you for the spell's duration. If you or one of your companions harms the target, the spells ends.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, you can affect one additional beast for each slot level above 1st.","emote":"tries to convince a beast that it is meant no harm","save":{"ability":"Wisdom"}},{"name":"Animal Messenger","level":2,"school":"Enchantment","ritual":true,"castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a morsel of food"},"duration":"24 hours","description":"By means of this spell, you use an animal to deliver a message. Choose a Tiny beast you can see within range, such as a squirrel, a blue jay, or a bat. You specify a location, which you must have visited, and a recipient who matches a general description, such as \"a man or woman dressed in the uniform of the town guard\" or \"a red-haired dwarf wearing a pointed hat.\" You also speak a message of up to twenty-five words. The target beast travels for the duration of the spell toward the specified location, covering about 50 miles per 24 hours for a flying messenger, or 25 miles for other animals.\nWhen the messenger arrives, it delivers your message to the creature that you described, replicating the sound of your voice. The messenger speaks only to a creature matching the description you gave. If the messenger doesn't reach its destination before the spell ends, the message is lost, and the beast makes its way back to where you cast this spell.","higherLevel":"If you cast this spell using a spell slot of 3nd level or higher, the duration of the spell increases by 48 hours for each slot level above 2nd.","emote":"uses an animal to deliver a message"},{"name":"Animal Shapes","level":8,"school":"Transmutation","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 24 hours","description":"Your magic turns others into beasts. Choose any number of willing creatures that you can see within range. You transform each target into the form of a Large or smaller beast with a challenge rating of 4 or lower. On subsequent turns, you can use your action to transform affected creatures into new forms.\nThe transformation lasts for the duration for each target, or until the target drops to 0 hit points or dies. You can choose a different form for each target. A target's game statistics are replaced by the statistics of the chosen beast, though the target retains its alignment and Intelligence, Wisdom, and Charisma scores. The target assumes the hit points of its new form, and when it reverts to its normal form, it returns to the number of hit points it had before it transformed. If it reverts as a result of dropping to 0 hit points, any excess damage carries over to its normal form. As long as the excess damage doesn't reduce the creature's normal form to 0 hit points, it isn't knocked unconscious. The creature is limited in the actions it can perform by the nature of its new form, and it can't speak or cast spells.\nThe target's gear melds into the new form. The target can't activate, wield, or otherwise benefit from any of its equipment.","emote":"'s magic turns others into beasts"},{"name":"Animate Dead","level":3,"school":"Necromancy","castingTime":"1 minute","range":"10 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a drop of blood, a piece of flesh, and a pinch of bone dust"},"duration":"Instantaneous","description":"This spell creates an undead servant. Choose a pile of bones or a corpse of a Medium or Small humanoid within range. Your spell imbues the target with a foul mimicry of life, raising it as an undead creature. The target becomes a skeleton if you chose bones or a zombie if you chose a corpse (the DM has the creature's game statistics).\nOn each of your turns, you can use a bonus action to mentally command any creature you made with this spell if the creature is within 60 feet of you (if you control multiple creatures, you can command any or all of them at the same time, issuing the same command to each one). You decide what action the creature will take and where it will move during its next turn, or you can issue a general command, such as to guard a particular chamber or corridor. If you issue no commands, the creature only defends itself against hostile creatures. Once given an order, the creature continues to follow it until its task is complete.\nThe creature is under your control for 24 hours, after which it stops obeying any command you've given it. To maintain control of the creature for another 24 hours, you must cast this spell on the creature again before the current 24-hour period ends. This use of the spell reasserts your control over up to four creatures you have animated with this spell, rather than animating a new one.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, you animate or reassert control over two additional undead creatures for each slot level above 3rd. Each of the creatures must come from a different corpse or pile of bones.","emote":"creates an undead servant"},{"name":"Animate Objects","level":5,"school":"Transmutation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"Objects come to life at your command. Choose up to ten nonmagical objects within range that are not being worn or carried. Medium targets count as two objects, Large targets count as four objects, Huge targets count as eight objects. You can't animate any object larger than Huge. Each target animates and becomes a creature under your control until the spell ends or until reduced to 0 hit points.\nAs a bonus action, you can mentally command any creature you made with this spell if the creature is within 500 feet of you (if you control multiple creatures, you can command any or all of them at the same time, issuing the same command to each one). You decide what action the creature will take and where it will move during its next turn, or you can issue a general command, such as to guard a particular chamber or corridor. If you issue no commands, the creature only defends itself against hostile creatures. Once given an order, the creature continues to follow it until its task is complete.\nAn animated object is a construct with AC, hit points, attacks, Strength, and Dexterity determined by its size. Its Constitution is 10 and its Intelligence and Wisdom are 3, and its Charisma is 1. Its speed is 30 feet; if the object lacks legs or other appendages it can use for locomotion, it instead has a flying speed of 30 feet and can hover. If the object is securely attached to a surface or a larger object, such as a chain bolted to a wall, its speed is 0. It has blindsight with a radius of 30 feet and is blind beyond that distance. When the animated object drops to 0 hit points, it reverts to its original object form, and any remaining damage carries over to its original object form.\nIf you command an object to attack, it can make a single melee attack against a creature within 5 feet of it. It makes a slam attack with an attack bonus and bludgeoning damage determined by its size. The DM might rule that a specific object inflicts slashing or piercing damage based on its form.","higherLevel":"If you cast this spell using a spell slot of 6th level or higher, you can animate two additional objects for each slot level above 5th.","emote":"makes objects come to life at {{GENDER_PRONOUN_HIS_HER}} command"},{"name":"Antilife Shell","level":5,"school":"Abjuration","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 hour","description":"A shimmering barrier extends out from you in a 10-foot radius and moves with you, remaining centered on you and hedging out creatures other than undead and constructs. The barrier lasts for the duration.\nThe barrier prevents an affected creature from passing or reaching through. An affected creature can cast spells or make attacks with ranged or reach weapons through the barrier.\nIf you move so that an affected creature is forced to pass through the barrier, the spell ends.","emote":"creates a shimmering barrier that extends out from {{GENDER_PRONOUN_HIM_HER}}"},{"name":"Antimagic Field","level":8,"school":"Abjuration","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of powdered iron or iron filings"},"concentration":true,"duration":"up to 1 hour","description":"A 10-foot-radius invisible sphere of antimagic surrounds you. This area is divorced from the magical energy that suffuses the multiverse. Within the sphere, spells can't be cast, summoned creatures disappear, and even magic items become mundane. Until the spell ends, the sphere moves with you, centered on you.\nSpells and other magical effects, except those created by an artifact or a deity, are suppressed in the sphere and can't protrude into it. A slot expended to cast a suppressed spell is consumed. While an effect is suppressed, it doesn't function, but the time it spends suppressed counts against its duration.\nTargeted Effects. Spells and other magical effects, such as magic missile and charm person, that target a creature or an object in the sphere have no effect on that target.\nAreas of Magic. The area of another spell or magical effect, such as fireball, can't extend into the sphere. If the sphere overlaps an area of magic, the part of the area that is covered by the sphere is suppressed. For example, the flames created by a wall of fire are suppressed within the sphere, creating a gap in the wall if the overlap is large enough.\nSpells. Any active spell or other magical effect on a creature or an object in the sphere is suppressed while the creature or object is in it.\nMagic Items. The properties and powers of magic items are suppressed in the sphere. For example, a +1 longsword in the sphere functions as a nonmagical longsword.\nA magic weapon's properties and powers are suppressed if it is used against a target in the sphere or wielded by an attacker in the sphere. If a magic weapon or a piece of magic ammunition fully leaves the sphere (for example, if you fire a magic arrow or throw a magic spear at a target outside the sphere), the magic of the item ceases to be suppressed as soon as it exits.\nMagical Travel. Teleportation and planar travel fail to work in the sphere, whether the sphere is the destination or the departure point for such magical travel. A portal to another location, world, or plane of existence, as well as an opening to an extradimensional space such as that created by the rope trick spell, temporarily closes while in the sphere.\nCreatures and Objects. A creature or object summoned or created by magic temporarily winks out of existence in the sphere. Such a creature instantly reappears once the space the creature occupied is no longer within the sphere.\nDispel Magic. Spells and magical effects such as dispel magic have no effect on the sphere. Likewise, the spheres created by different antimagic field spells don't nullify each other.","emote":"creates an invisible sphere of antimagic that that surrounds {{GENDER_PRONOUN_HIM_HER}}"},{"name":"Antipathy/Sympathy","level":8,"school":"Enchantment","castingTime":"1 hour","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"either a lump of alum soaked in vinegar for the antipathy effect or a drop of honey for the sympathy effect"},"duration":"10 days","description":"This spell attracts or repels creatures of your choice. You target something within range, either a Huge or smaller object or creature or an area that is no larger than a 200-foot cube. Then specify a kind of intelligent creature, such as red dragons, goblins, or vampires. You invest the target with an aura that either attracts or repels the specified creatures for the duration. Choose antipathy or sympathy as the aura's effect.\nAntipathy. The enchantment causes creatures of the kind you designated to feel an intense urge to leave the area and avoid the target. When such a creature can see the target or comes within 60 feet of it, the creature must succeed on a Wisdom saving throw or become frightened. The creature remains frightened while it can see the target or is within 60 feet of it. While frightened by the target, the creature must use its movement to move to the nearest safe spot from which it can't see the target. If the creature moves more than 60 feet from the target and can't see it, the creature is no longer frightened, but the creature becomes frightened again if it regains sight of the target or moves within 60 feet of it.\nSympathy. The enchantment causes the specified creatures to feel an intense urge to approach the target while within 60 feet of it or able to see it. When such a creature can see the target or comes within 60 feet of it, the creature must succeed on a Wisdom saving throw or use its movement on each of its turns to enter the area or move within reach of the target. When the creature has done so, it can't willingly move away from the target. If the target damages or otherwise harms an affected creature, the affected creature can make a Wisdom saving throw to end the effect, as described below.\nEnding the Effect. If an affected creature ends its turn while not within 60 feet of the target or able to see it, the creature makes a Wisdom saving throw. On a successful save, the creature is no longer affected by the target and recognizes the feeling of repugnance or attraction as magical. In addition, a creature affected by the spell is allowed another Wisdom saving throw every 24 hours while the spell persists.\nA creature that successfully saves against this effect is immune to it for 1 minute, after which time it can be affected again.","emote":"attracts or repels creatures of {{GENDER_PRONOUN_HIS_HER}} choice","save":{"ability":"Wisdom"}},{"name":"Arcane Eye","level":4,"school":"Divination","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of bat fur"},"concentration":true,"duration":"up to 1 hour","description":"You create an invisible, magical eye within range that hovers in the air for the duration.\nYou mentally receive visual information from the eye, which has normal vision and darkvision out to 30 feet. The eye can look in every direction.\nAs an action, you can move the eye up to 30 feet in any direction. There is no limit to how far away from you the eye can move, but it can't enter another plane of existence. A solid barrier blocks the eye's movement, but the eye can pass through an opening as small as 1 inch in diameter.","emote":"creates an invisible, magical eye within range that hovers in the air"},{"name":"Arcane Lock","level":2,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"gold dust worth at least 25gp, which the spell consumes","materialCost":25},"duration":"Until dispelled","description":"You touch a closed door, window, gate, chest, or other entryway, and it becomes locked for the duration. You and the creatures you designate when you cast this spell can open the object normally. You can also set a password that, when spoken within 5 feet of the object, suppresses this spell for 1 minute. Otherwise, it is impassable until it is broken or the spell is dispelled or suppressed. Casting knock on the object suppresses arcane lock for 10 minutes.\nWhile affected by this spell, the object is more difficult to break or force open; the DC to break it or pick any locks on it increases by 10.","emote":"a closed door, window, gate, chest, or other entryway"},{"name":"Astral Projection","level":9,"school":"Necromancy","castingTime":"1 hour","range":"10 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"for each creature you affect with this spell, you must provide one jacinth worth at least 1,000gp and one ornately carved bar of silver worth at least 100gp, all of which the spell consumes","materialCost":100},"duration":"Special","description":"You and up to eight willing creatures within range project your astral bodies into the Astral Plane (the spell fails and the casting is wasted if you are already on that plane). The material body you leave behind is unconscious and in a state of suspended animation; it doesn't need food or air and doesn't age.\nYour astral body resembles your mortal form in almost every way, replicating your game statistics and possessions. The principal difference is the addition of a silvery cord that extends from between your shoulder blades and trails behind you, fading to invisibility after 1 foot. This cord is your tether to your material body. As long as the tether remains intact, you can find your way home. If the cord is cut—something that can happen only when an effect specifically states that it does—your soul and body are separated, killing you instantly.\nYour astral form can freely travel through the Astral Plane and can pass through portals there leading to any other plane. If you enter a new plane or return to the plane you were on when casting this spell, your body and possessions are transported along the silver cord, allowing you to re-enter your body as you enter the new plane. Your astral form is a separate incarnation. Any damage or other effects that apply to it have no effect on your physical body, nor do they persist when you return to it.\nThe spell ends for you and your companions when you use your action to dismiss it. When the spell ends, the affected creature returns to its physical body, and it awakens.\nThe spell might also end early for you or one of your companions. A successful dispel magic spell used against an astral or physical body ends the spell for that creature. If a creature's original body or its astral form drops to 0 hit points, the spell ends for that creature. If the spell ends and the silver cord is intact, the cord pulls the creature's astral form back to its body, ending its state of suspended animation.\nIf you are returned to your body prematurely, your companions remain in their astral forms and must find their own way back to their bodies, usually by dropping to 0 hit points.","emote":"and {{GENDER_PRONOUN_HIS_HER}} allies project their astral bodies into the Astral Plane"},{"name":"Augury","level":2,"school":"Divination","ritual":true,"castingTime":"1 minute","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"specially marked sticks, bones, or similar tokens worth at least 25gp","materialCost":25},"duration":"Instantaneous","description":"By casting gem-inlaid sticks, rolling dragon bones, laying out ornate cards, or employing some other divining tool, you receive an omen from an otherworldly entity about the results of a specific course of action that you plan to take within the next 30 minutes. The DM chooses from the following possible omens:\n- Weal, for good results\n- Woe, for bad results\n- Weal and woe, for both good and bad results\n- Nothing, for results that aren't especially good or bad\nThe spell doesn't take into account any possible circumstances that might change the outcome, such as the casting of additional spells or the loss or gain of a companion.\nIf you cast the spell two or more times before completing your next long rest, there is a cumulative 25% chance for each casting after the first that you get a random reading. The DM makes this roll in secret.","emote":"casts gem-inlaid sticks, rolls dragon bones, lays out ornate cards, or employs some other divining tool to receive an omen from an otherworldly entity about the results of a specific course of action"},{"name":"Awaken","level":5,"school":"Transmutation","castingTime":"8 hours","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"an agate worth at least 1,000 gp, which the spell consumes","materialCost":1000},"duration":"Instantaneous","description":"After spending the casting time tracing magical pathways within a precious gemstone, you touch a Huge or smaller beast or plant. The target must have either no Intelligence score or an Intelligence of 3 or less. The target gains an Intelligence of 10. The target also gains the ability to speak one language you know. If the target is a plant, it gains the ability to move its limbs, roots, vines, creepers, and so forth, and it gains senses similar to a human's. Your DM chooses statistics appropriate for the awakened plant, such as the statistics for the awakened shrub or the awakened tree.\nThe awakened beast or plant is charmed by you for 30 days or until you or your companions do anything harmful to it. When the charmed condition ends, the awakened creature chooses whether to remain friendly to you, based on how you treated it while it was charmed.","emote":"traces magical pathways within a precious gemstone"},{"name":"Bane","level":1,"school":"Enchantment","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a drop of blood"},"concentration":true,"duration":"up to 1 minute","description":"Up to three creatures of your choice that you can see within range must make Charisma saving throws. Whenever a target that fails this saving throw makes an attack roll or a saving throw before the spell ends, the target must roll a d4 and subtract the number rolled from the attack roll or saving throw.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st.","emote":"afflicts his targets with Bane","save":{"ability":"Charisma"}},{"name":"Banishment","level":4,"school":"Abjuration","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"an item distasteful to the target"},"concentration":true,"duration":"up to 1 minute","description":"You attempt to send one creature that you can see within range to another plane of existence. The target must succeed on a Charisma saving throw or be banished.\nIf the target is native to the plane of existence you're on, you banish the target to a harmless demiplane. While there, the target is incapacitated. The target remains there until the spell ends, at which point the target reappears in the space it left or in the nearest unoccupied space if that space is occupied.\nIf the target is native to a different plane of existence than the one you're on, the target is banished with a faint popping noise, returning to its home plane. If the spell ends before 1 minute has passed, the target reappears in the space it left or in the nearest unoccupied space if that space is occupied. Otherwise, the target doesn't return.","higherLevel":"When you cast this spell using a spell slot of 5th level or higher, you can target one additional creature for each slot level above 4th.","emote":"attempts to banish a creature to another plane of existence","save":{"ability":"Charisma"}},{"name":"Barkskin","level":2,"school":"Transmutation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a handful of oak bark"},"concentration":true,"duration":"up to 1 hour","description":"You touch a willing creature. Until the spell ends, the target's skin has a rough, bark-like appearance, and the target's AC can't be less than 16, regardless of what kind of armor it is wearing.","emote":"turns the target's skin into a rough, bark-like appearance"},{"name":"Beacon of Hope","level":3,"school":"Abjuration","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"This spell bestows hope and vitality. Choose any number of creatures within range. For the duration, each target has advantage on Wisdom saving throws and death saving throws, and regains the maximum number of hit points possible from any healing.","emote":"bestows hope and vitality to those around him"},{"name":"Bestow Curse","level":3,"school":"Necromancy","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"You touch a creature, and that creature must succeed on a Wisdom saving throw or become cursed for the duration of the spell. When you cast this spell, choose the nature of the curse from the following options:\n- Choose one ability score. While cursed, the target has disadvantage on ability checks and saving throws made with that ability score.\n- While cursed, the target has disadvantage on attack rolls against you.\n- While cursed, the target must make a Wisdom saving throw at the start of each of its turns. If it fails, it wastes its action that turn doing nothing.\n- While the target is cursed, your attacks and spells deal an extra 1d8 necrotic damage to the target.\nA remove curse spell ends this effect. At the DM's option, you may choose an alternative curse effect, but it should be no more powerful than those described above. The DM has final say on such a curse's effect.","higherLevel":"If you cast this spell using a spell slot of 4th level or higher, the duration is concentration, up to 10 minutes. If you use a spell slot of 5th level or higher, the duration is 8 hours. If you use a spell slot of 7th level or higher, the duration is 24 hours. If you use a 9th level spell slot, the spell lasts until it is dispelled. Using a spell slot of 5th level or higher grants a duration that doesn't require concentration.","emote":"bestows a curse upon the target creature","save":{"ability":"Wisdom"}},{"name":"Blade Barrier","level":6,"school":"Evocation","castingTime":"1 action","range":"90 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 10 minutes","description":"You create a vertical wall of whirling, razor-sharp blades made of magical energy. The wall appears within range and lasts for the duration. You can make a straight wall up to 100 feet long, 20 feet high, and 5 feet thick, or a ringed wall up to 60 feet in diameter, 20 feet high, and 5 feet thick. The wall provides three-quarters cover to creatures behind it, and its space is difficult terrain.\nWhen a creature enters the wall's area for the first time on a turn or starts its turn there, the creature must make a Dexterity saving throw. On a failed save, the creature takes 6d10 slashing damage. On a successful save, the creature takes half as much damage.","emote":"creates a vertical wall of whirling, razor-sharp blades made of magical energy","save":{"ability":"Dexterity","damage":"6d10","damageType":"slashing","saveSuccess":"half damage"}},{"name":"Bless","level":1,"school":"Enchantment","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a sprinkling of holy water"},"concentration":true,"duration":"up to 1 minute","description":"You bless up to three creatures of your choice within range. Whenever a target makes an attack roll or a saving throw before the spell ends, the target can roll a d4 and add the number rolled to the attack roll or saving throw.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st.","emote":"blesses the targets"},{"name":"Blight","level":4,"school":"Necromancy","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"Necromantic energy washes over a creature of your choice that you can see within range, draining moisture and vitality from it. The target must make a Constitution saving throw. The target takes 8d8 necrotic damage on a failed save, or half as much damage on a successful one. The spell has no effect on undead or constructs.\nIf you target a plant creature or a magical plant, it makes the saving throw with disadvantage, and the spell deals maximum damage to it.\nIf you target a nonmagical plant that isn't a creature, such as a tree or shrub, it doesn't make a saving throw; it simply withers and dies.","higherLevel":"When you cast this spell using a spell slot of 5th level of higher, the damage increases by 1d8 for each slot level above 4th.","emote":"drains moisture and vitality from a creature","save":{"ability":"Constitution","damage":"8d8","damageType":"necrotic","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Blindness/Deafness","level":2,"school":"Necromancy","castingTime":"1 action","range":"30 feet","components":{"verbal":true},"duration":"1 minute","description":"You can blind or deafen a foe. Choose one creature that you can see within range to make a Constitution saving throw. If it fails, the target is either blinded or deafened (your choice) for the duration. At the end of each of its turns, the target can make a Constitution saving throw. On a success, the spell ends.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.","emote":"blinds or deafens a foe","save":{"ability":"Constitution"}},{"name":"Blink","level":3,"school":"Transmutation","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"duration":"1 minute","description":"Roll a d20 at the end of each of your turns for the duration of the spell. On a roll of 11 or higher, you vanish from your current plane of existence and appear in the Ethereal Plane (the spell fails and the casting is wasted if you were already on that plane). At the start of your next turn, and when the spell ends if you are on the Ethereal Plane, you return to an unoccupied space of your choice that you can see within 10 feet of the space you vanished from. If no unoccupied space is available within that range, you appear in the nearest unoccupied space (chosen at random if more than one space is equally near). You can dismiss this spell as an action.\nWhile on the Ethereal Plane, you can see and hear the plane you originated from, which is cast in shades of gray, and you can't see anything there more than 60 feet away. You can only affect and be affected by other creatures on the Ethereal Plane. Creatures that aren't there can't perceive you or interact with you, unless they have the ability to do so.","emote":"starts blinking in and out of this plane"},{"name":"Blur","level":2,"school":"Illusion","castingTime":"1 action","range":"Self","components":{"verbal":true},"concentration":true,"duration":"up to 1 minute","description":"Your body becomes blurred, shifting and wavering to all who can see you. For the duration, any creature has disadvantage on attack rolls against you. An attacker is immune to this effect if it doesn't rely on sight, as with blindsight, or can see through illusions, as with truesight.","emote":"'s body becomes blurred"},{"name":"Branding Smite","level":2,"school":"Evocation","castingTime":"1 bonus action","range":"Self","components":{"verbal":true},"concentration":true,"duration":"up to 1 minute","description":"The next time you hit a creature with a weapon attack before this spell ends, the weapon gleams with astral radiance as you strike. The attack deals an extra 2d6 radiant damage to the target, which becomes visible if it's invisible, and the target sheds dim light in a 5-foot radius and can't become invisible until the spell ends.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, the extra damage increases by 1d6 for each slot level above 2nd.","emote":"'s weapons gleams with astral radiance","damage":{"damage":"2d6","damageType":"radiant","higherLevelDice":1}},{"name":"Burning Hands","level":1,"school":"Evocation","castingTime":"1 action","range":"Self (15-foot cone)","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"As you hold your hands with thumbs touching and fingers spread, a thin sheet of flames shoots forth from your outstretched fingertips. Each creature in a 15-foot cone must make a Dexterity saving throw. A creature takes 3d6 fire damage on a failed save, or half as much damage on a successful one.\nThe fire ignites any flammable objects in the area that aren't being worn or carried.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d6 for each slot level above 1st.","emote":"holds {{GENDER_PRONOUN_HIS_HER}} hands with thumbs touching and fingers spread as a thin sheet of flames shoots forth from {{GENDER_PRONOUN_HIS_HER}} fingertips","save":{"ability":"Dexterity","damage":"3d6","damageType":"fire","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Call Lightning","level":3,"school":"Conjuration","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 10 minutes","description":"A storm cloud appears in the shape of a cylinder that is 10 feet tall with a 60-foot radius, centered on a point you can see 100 feet directly above you. The spell fails if you can't see a point in the air where the storm cloud could appear (for example, if you are in a room that can't accommodate the cloud).\nWhen you cast the spell, choose a point you can see within range. A bolt of lightning flashes down from the cloud to that point. Each creature within 5 feet of that point must make a Dexterity saving throw. A creature takes 3d10 lightning damage on a failed save, or half as much damage on a successful one. On each of your turns until the spell ends, you can use your action to call down lightning in this way again, targeting the same point or a different one.\nIf you are outdoors in stormy conditions when you cast this spell, the spell gives you control over the existing storm instead of creating a new one. Under such conditions, the spell's damage increases by 1d10.","higherLevel":"When you cast this spell using a spell slot of 4th or higher level, the damage increases by 1d10 for each slot level above 3rd.","emote":"creates a cylindrical storm cloud directly above {{GENDER_PRONOUN_HIM_HER}}. A bolt of lightning then flashes down from the cloud","save":{"ability":"Dexterity","damage":"3d10","damageType":"lightning","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Calm Emotions","level":2,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"You attempt to suppress strong emotions in a group of people. Each humanoid in a 20-foot-radius sphere centered on a point you choose within range must make a Charisma saving throw; a creature can choose to fail this saving throw if it wishes. If a creature fails its saving throw, choose one of the following two effects. You can suppress any effect causing a target to be charmed or frightened. When this spell ends, any suppressed effect resumes, provided that its duration has not expired in the meantime.\nAlternatively, you can make a target indifferent about creatures of your choice that it is hostile toward. This indifference ends if the target is attacked or harmed by a spell or if it witnesses any of its friends being harmed. When the spell ends, the creature becomes hostile again, unless the DM rules otherwise.","emote":"attempts to suppress strong emotions in a group of people","save":{"ability":"Charisma"}},{"name":"Chain Lightning","level":6,"school":"Evocation","castingTime":"1 action","range":"150 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of fur; a piece of amber, glass, or a crystal rod; and three silver pins"},"duration":"Instantaneous","description":"You create a bolt of lightning that arcs toward a target of your choice that you can see within range. Three bolts then leap from that target to as many as three other targets, each of which must be within 30 feet of the first target. A target can be a creature or an object and can be targeted by only one of the bolts.\nA target must make a Dexterity saving throw. The target takes 10d8 lightning damage on a failed save, or half as much damage on a successful one.","higherLevel":"When you cast this spell using a spell slot of 7th level or higher, one additional bolt leaps from the first target to another target for each slot level above 6th.","emote":"creates a bolt of lightning that arcs toward a target. Three bolts then leap from that target to as many as three other targets","save":{"ability":"Dexterity","damage":"10d8","damageType":"lightning","saveSuccess":"half damage"}},{"name":"Charm Person","level":1,"school":"Enchantment","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true},"duration":"1 hour","description":"You attempt to charm a humanoid you can see within range. It must make a Wisdom saving throw, and does so with advantage if you or your companions are fighting it. If it fails the saving throw, it is charmed by you until the spell ends or until you or your companions do anything harmful to it. The charmed creature regards you as a friendly acquaintance. When the spell ends, the creature knows it was charmed by you.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st. The creatures must be within 30 feet of each other when you target them.","emote":"attempts to charm a humanoid","save":{"ability":"Wisdom"}},{"name":"Chill Touch","level":0,"school":"Necromancy","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"duration":"1 round","description":"You create a ghostly, skeletal hand in the space of a creature within range. Make a ranged spell attack against the creature to assail it with the chill of the grave. On a hit, the target takes 1d8 necrotic damage, and it can't regain hit points until the start of your next turn. Until then, the hand clings to the target.\nIf you hit an undead target, it also has disadvantage on attack rolls against you until the end of your next turn.","higherLevel":"This spell's damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8).","emote":"creates a ghostly, skeletal hand in the space of a creature","attack":{"type":"ranged","damage":"((@{level} + 1) / 6 + 0.5)d8","damageType":"necrotic"}},{"name":"Circle of Death","level":6,"school":"Necromancy","castingTime":"1 action","range":"150 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"the powder of a crushed black pearl worth at least 500 gp","materialCost":500},"duration":"Instantaneous","description":"A sphere of negative energy ripples out in a 60-foot-radius sphere from a point within range. Each creature in that area must make a Constitution saving throw. A target takes 8d6 necrotic damage on a failed save, or half as much damage on a successful one.","higherLevel":"When you cast this spell using a spell slot of 7th level or higher, the damage increases by 2d6 for each slot level above 6th.","emote":"creates a sphere of negative energy that ripples out from a sphere","save":{"ability":"Constitution","damage":"8d6","damageType":"necrotic","saveSuccess":"half damage","higherLevelDice":2}},{"name":"Clairvoyance","level":3,"school":"Divination","castingTime":"10 minutes","range":"1 mile","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a focus worth at least 100gp, either a jeweled horn for hearing or a glass eye for seeing","materialCost":100},"concentration":true,"duration":"up to 10 minutes","description":"You create an invisible sensor within range in a location familiar to you (a place you have visited or seen before) or in an obvious location that is unfamiliar to you (such as behind a door, around a corner, or in a grove of trees). The sensor remains in place for the duration, and it can't be attacked or otherwise interacted with.\nWhen you cast the spell, you choose seeing or hearing. You can use the chosen sense through the sensor as if you were in its space. As your action, you can switch between seeing and hearing.\nA creature that can see the sensor (such as a creature benefiting from see invisibility or truesight) sees a luminous, intangible orb about the size of your fist.","emote":"creates an invisible sensor"},{"name":"Clone","level":8,"school":"Necromancy","castingTime":"1 hour","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a diamond worth at least 1,000 gp and at least 1 cubic inch of flesh of the creature that is to be cloned, which the spell consumes, and a vessel worth at least 2,000 gp that has a sealable lid and is large enough to hold a Medium creature, such as a huge urn, coffin, mud-filled cyst in the ground, or crystal container filled with salt water","materialCost":3000},"duration":"Instantaneous","description":"This spell grows an inert duplicate of a living creature as a safeguard against death. This clone forms inside a sealed vessel and grows to full size and maturity after 120 days; you can also choose to have the clone be a younger version of the same creature. It remains inert and endures indefinitely, as long as its vessel remains undisturbed.\nAt any time after the clone matures, if the original creature dies, its soul transfers to the clone, provided that the soul is free and willing to return. The clone is physically identical to the original and has the same personality, memories, and abilities, but none of the original's equipment. The original creature's physical remains, if they still exist, become inert and can't thereafter be restored to life, since the creature's soul is elsewhere.","emote":"grows an inert duplicate of a living creature as a safeguard against death"},{"name":"Cloudkill","level":5,"school":"Conjuration","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 10 minutes","description":"You create a 20-foot-radius sphere of poisonous, yellow-green fog centered on a point you choose within range. The fog spreads around corners. It lasts for the duration or until strong wind disperses the fog, ending the spell. Its area is heavily obscured.\nWhen a creature enters the spell's area for the first time on a turn or starts its turn there, that creature must make a Constitution saving throw. The creature takes 5d8 poison damage on a failed save, or half as much damage on a successful one. Creatures are affected even if they hold their breath or don't need to breathe.\nThe fog moves 10 feet away from you at the start of each of your turns, rolling along the surface of the ground. The vapors, being heavier than air, sink to the lowest level of the land, even pouring down openings.","higherLevel":"When you cast this spell using a spell slot of 6th level or higher, the damage increases by 1d8 for each slot level above 5th.","emote":"creates a sphere of poisonous, yellow-green fog","save":{"ability":"Constitution","damage":"5d8","damageType":"poison","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Color Spray","level":1,"school":"Illusion","castingTime":"1 action","range":"Self (15-foot cone)","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of powder or sand that is colored red, yellow, and blue"},"duration":"1 round","description":"A dazzling array of flashing, colored light springs from your hand. Roll 6d10; the total is how many hit points of creatures this spell can effect. Creatures in a 15-foot cone originating from you are affected in ascending order of their current hit points (ignoring unconscious creatures and creatures that can't see).\nStarting with the creature that has the lowest current hit points, each creature affected by this spell is blinded until the spell ends. Subtract each creature's hit points from the total before moving on to the creature with the next lowest hit points. A creature's hit points must be equal to or less than the remaining total for that creature to be affected.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, roll an additional 2d10 for each slot level above 1st.","emote":"shoots forth a dazzling array of flashing, colored light from {{GENDER_PRONOUN_HIS_HER}} hand"},{"name":"Command","level":1,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true},"duration":"1 round","description":"You speak a one-word command to a creature you can see within range. The target must succeed on a Wisdom saving throw or follow the command on its next turn. The spell has no effect if the target is undead, if it doesn't understand your language, or if your command is directly harmful to it.\nSome typical commands and their effects follow. You might issue a command other than one described here. If you do so, the DM determines how the target behaves. If the target can't follow your command, the spell ends.\nApproach. The target moves toward you by the shortest and most direct route, ending its turn if it moves within 5 feet of you.\nDrop The target drops whatever it is holding and then ends its turn.\nFlee. The target spends its turn moving away from you by the fastest available means.\nGrovel. The target falls prone and then ends its turn.\nHalt. The target doesn't move and takes no actions. A flying creature stays aloft, provided that it is able to do so. If it must move to stay aloft, it flies the minimum distance needed to remain in the air.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, you can affect one additional creature for each slot level above 1st. The creatures must be within 30 feet of each other when you target them.","emote":"speaks a one-word command","save":{"ability":"Wisdom"}},{"name":"Commune","level":5,"school":"Divination","ritual":true,"castingTime":"1 minute","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"incense and a vial of holy or unholy water"},"duration":"1 minute","description":"You contact your deity or a divine proxy and ask up to three questions that can be answered with a yes or no. You must ask your questions before the spell ends. You receive a correct answer for each question.\nDivine beings aren't necessarily omniscient, so you might receive \"unclear\" as an answer if a question pertains to information that lies beyond the deity's knowledge. In a case where a one-word answer could be misleading or contrary to the deity's interests, the DM might offer a short phrase as an answer instead.\nIf you cast the spell two or more times before finishing your next long rest, there is a cumulative 25% chance for each casting after the first that you get no answer. The DM makes this roll in secret.","emote":"communes with {{GENDER_PRONOUN_HIS_HER}} deity or divine proxy"},{"name":"Commune with Nature","level":5,"school":"Divination","ritual":true,"castingTime":"1 minute","range":"Self","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You briefly become one with nature and gain knowledge of the surrounding territory. In the outdoors, the spell gives you knowledge of the land within 3 miles of you. In caves and other natural underground settings, the radius is limited to 300 feet. The spell doesn't function where nature has been replaced by construction, such as in dungeons and towns.\n You instantly gain knowledge of up to three facts of your choice about any of the following subjects as they relate to the area:\n- terrain and bodies of water\n- prevalent plants, minerals, animals, or peoples\n- powerful celestials, fey, fiends, elementals, or undead\n- influence from other planes of existence\n- buildings\nFor example, you could determine the location of powerful undead in the area, the location of major sources of safe drinking water, and the location of any nearby towns.","emote":"briefly becomes one with nature and gains knowledge of the surrounding territory"},{"name":"Comprehend Languages","level":1,"school":"Divination","ritual":true,"castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of soot and salt"},"duration":"1 hour","description":"For the duration, you understand the literal meaning of any spoken language that you hear. You also understand any written language that you see, but you must be touching the surface on which the words are written. It takes about 1 minute to read one page of text.\nThis spell doesn't decode secret messages in a text or a glyph, such as an arcane sigil, that isn't part of a written language.","emote":"understands the literal meaning of any spoken languages that {{GENDER_PRONOUN_HE_SHE}} hears and any writing that {{GENDER_PRONOUN_HE_SHE}} touches"},{"name":"Compulsion","level":4,"school":"Enchantment","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"Creatures of your choice that you can see within range and that can hear you must make a Wisdom saving throw. A target automatically succeeds on this saving throw if it can't be charmed. On a failed save, a target is affected by this spell. Until the spell ends, you can use a bonus action on each of your turns to designate a direction that is horizontal to you. Each affected target must use as much of its movement as possible to move in that direction on its next turn. It can take any action before it moves. After moving in this way, it can make another Wisdom save to try to end the effect.\nA target isn't compelled to move into an obviously deadly hazard, such as a fire or a pit, but it will provoke opportunity attacks to move in the designated direction.","emote":"compells creatures to move away","save":{"ability":"Wisdom"}},{"name":"Cone of Cold","level":5,"school":"Evocation","castingTime":"1 action","range":"Self (60-foot cone)","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a small crystal or glass cone"},"duration":"Instantaneous","description":"A blast of cold air erupts from your hands. Each creature in a 60-foot cone must make a Constitution saving throw. A creature takes 8d8 cold damage on a failed save, or half as much damage on a successful one.\nA creature killed by this spell becomes a frozen statue until it thaws.","higherLevel":"When you cast this spell using a spell slot of 6th level or higher, the damage increases by 1d8 for each slot level above 5th.","emote":"'s hands erupt with a blast of frigid air","save":{"ability":"Constitution","damage":"8d8","damageType":"cold","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Confusion","level":4,"school":"Enchantment","castingTime":"1 action","range":"90 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"three walnut shells"},"concentration":true,"duration":"up to 1 minute","description":"This spell assaults and twists creatures' minds, spawning delusions and provoking uncontrolled action. Each creature in a 10-foot-radius sphere centered on a point you choose within range must succeed on a Wisdom saving throw when you cast this spell or be affected by it.\nAn affected target can't take reactions and must roll a d10 at the start of each of its turns to determine its behavior for that turn.\non a 1 the creature uses all its movement to move in a random direction. To determine the direction, roll a d8 and assign a direction to each die face. The creature doesn't take an action this turn.\non a 2-6 The creature doesn't move or take actions this turn.\non a 7-8 The creature uses its action to make a melee attack against a randomly determined creature within its reach. If there is no creature within its reach, the creature does nothing this turn.\non a 9-10 The creature can act and move normally.\nAt the end of each of its turns, an affected target can make a Wisdom saving throw. If it succeeds. this effect ends for that target.","higherLevel":"When you cast this spell using a level spell slot 5 or more, the radius of the sphere increases by 5 feet for each level of higher spell slot to 4.","emote":"assaults and twists creatures' minds, spawning delusions and provoking uncontrolled action","save":{"ability":"Wisdom"}},{"name":"Conjure Animals","level":3,"school":"Conjuration","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 hour","description":"You summon fey spirits that take the form of beasts and appear in unoccupied spaces that you can see within range. Choose one of the following options for what appears:\n- One beast of challenge rating 2 or lower\n- Two beasts of challenge rating 1 or lower\n- Four beasts of challenge rating 1/2 or lower\n- Eight beasts of challenge rating 1/4 or lower\n- Each beast is also considered fey, and it disappears when it drops to 0 hit points or when the spell ends.\nThe summoned creatures are friendly to you and your companions. Roll initiative for the summoned creatures as a group, which has its own turns. They obey any verbal commands that you issue to them (no action required by you). If you don't issue any commands to them, they defend themselves from hostile creatures, but otherwise take no actions.\nThe DM has the creatures' statistics.","higherLevel":"When you cast this spell using certain higher-level spell slots, you choose one of the summoning options above, and more creatures appear: twice as many with a 5th-level slot, three times as many with a 7th-level.","emote":"summons fey spirits that take the form of beasts"},{"name":"Conjure Celestial","level":7,"school":"Conjuration","castingTime":"1 minute","range":"90 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 hour","description":"You summon a celestial of challenge rating 4 or lower, which appears in an unoccupied space that you can see within range. The celestial disappears when it drops to 0 hit points or when the spell ends.\nThe celestial is friendly to you and your companions for the duration. Roll initiative for the celestial, which has its own turns. It obeys any verbal commands that you issue to it (no action required by you), as long as they don't violate its alignment. If you don't issue any commands to the celestial, it defends itself from hostile creatures but otherwise takes no actions.\nThe DM has the celestial's statistics.","higherLevel":"When you cast this spell using a 9th-level spell slot, you summon a celestial of challenge rating 5 or lower.","emote":"summons a celestial"},{"name":"Conjure Elemental","level":5,"school":"Conjuration","castingTime":"1 minute","range":"90 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"burning incense for air, soft clay for earth, sulfur and phosphorus for fire, or water and sand for water"},"concentration":true,"duration":"up to 1 hour","description":"You call forth an elemental servant. Choose an area of air, earth, fire, or water that fills a 10-foot cube within range. An elemental of challenge rating 5 or lower appropriate to the area you chose appears in an unoccupied space within 10 feet of it. For example, a fire elemental emerges from a bonfire, and an earth elemental rises up from the ground. The elemental disappears when it drops to 0 hit points or when the spell ends.\nThe elemental is friendly to you and your companions for the duration. Roll initiative for the elemental, which has its own turns. It obeys any verbal commands that you issue to it (no action required by you). If you don't issue any commands to the elemental, it defends itself from hostile creatures but otherwise takes no actions.\nIf your concentration is broken, the elemental doesn't disappear. Instead, you lose control of the elemental, it becomes hostile toward you and your companions, and it might attack. An uncontrolled elemental can't be dismissed by you, and it disappears 1 hour after you summoned it.\nThe DM has the elemental's statistics.","higherLevel":"When you cast this spell using a spell slot of 6th level or higher, the challenge rating increases by 1 for each slot level above 5th.","emote":"calls forth an elemental servant"},{"name":"Conjure Fey","level":6,"school":"Conjuration","castingTime":"1 minute","range":"90 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 hour","description":"You summon a fey creature of challenge rating 6 or lower, or a fey spirit that takes the form of a beast of challenge rating 6 or lower. It appears in an unoccupied space that you can see within range. The fey creature disappears when it drops to 0 hit points or when the spell ends.\nThe fey creature is friendly to you and your companions for the duration. Roll initiative for the creature, which has its own turns. It obeys any verbal commands that you issue to it (no action required by you), as long as they don't violate its alignment. If you don't issue any commands to the fey creature, it defends itself from hostile creatures but otherwise takes no actions.\nIf your concentration is broken, the fey creature doesn't disappear. Instead, you lose control of the fey creature, it becomes hostile toward you and your companions, and it might attack. An uncontrolled fey creature can't be dismissed by you, and it disappears 1 hour after you summoned it.\nThe DM has the fey creature's statistics.","higherLevel":"When you cast this spell using a spell slot of 7th level or higher, the challenge rating increases by 1 for each slot level above 6th.","emote":"summons a fey creature"},{"name":"Conjure Minor Elementals","level":4,"school":"Conjuration","castingTime":"1 minute","range":"90 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 hour","description":"You summon elementals that appear in unoccupied spaces that you can see within range. You choose one the following options for what appears:\n- One elemental of challenge rating 2 or lower\n- Two elementals of challenge rating 1 or lower\n- Four elementals of challenge rating 1/2 or lower\n- Eight elementals of challenge rating 1/4 or lower.\nAn elemental summoned by this spell disappears when it drops to 0 hit points or when the spell ends.\nThe summoned creatures are friendly to you and your companions. Roll initiative for the summoned creatures as a group, which has its own turns. They obey any verbal commands that you issue to them (no action required by you). If you don't issue any commands to them, they defend themselves from hostile creatures, but otherwise take no actions.\nThe DM has the creatures' statistics.","higherLevel":"When you cast this spell using certain higher-level spell slots, you choose one of the summoning options above, and more creatures appear: twice as many with a 6th-level slot and three times as many with an 8th-level slot.","emote":"summons elementals"},{"name":"Conjure Woodland Beings","level":4,"school":"Conjuration","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"one holly berry per creature summoned"},"concentration":true,"duration":"up to 1 hour","description":"You summon fey creatures that appear in unoccupied spaces that you can see within range. Choose one of the following options for what appears:\n- One fey creature of challenge rating 2 or lower\n- Two fey creatures of challenge rating 1 or lower\n- Four fey creatures of challenge rating 1/2 or lower\n- Eight fey creatures of challenge rating 1/4 or lower\nA summoned creature disappears when it drops to 0 hit points or when the spell ends.\nThe summoned creatures are friendly to you and your companions. Roll initiative for the summoned creatures as a group, which have their own turns. They obey any verbal commands that you issue to them (no action required by you). If you don't issue any commands to them, they defend themselves from hostile creatures, but otherwise take no actions.\nThe DM has the creatures' statistics.","higherLevel":"When you cast this spell using certain higher-level spell slots, you choose one of the summoning options above, and more creatures appear: twice as many with a 6th-level slot and three times as many with an 8th-level slot.","emote":"summons fey creatures"},{"name":"Contact Other Plane","level":5,"school":"Divination","ritual":true,"castingTime":"1 minute","range":"Self","components":{"verbal":true},"duration":"1 minute","description":"You mentally contact a demigod, the spirit of a long-dead sage, or some other mysterious entity from another plane. Contacting this extraplanar intelligence can strain or even break your mind. When you cast this spell, make a DC 15 Intelligence saving throw. On a failure, you take 6d6 psychic damage and are insane until you finish a long rest. While insane, you can't take actions, can't understand what other creatures say, can't read, and speak only in gibberish. A greater restoration spell cast on you ends this effect.\nOn a successful save, you can ask the entity up to five questions. You must ask your questions before the spell ends. The DM answers each question with one word, such as \"yes,\" \"no,\" \"maybe,\" \"never,\" \"irrelevant,\" or \"unclear\" (if the entity doesn't know the answer to the question). If a one-word answer would be misleading, the DM might instead offer a short phrase as an answer.","emote":"mentally contacts a demigod, the spirit of a long-dead sage, or some other mysterious entity from another plane."},{"name":"Contagion","level":5,"school":"Necromancy","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"duration":"7 days","description":"Your touch inflicts disease. Make a melee spell attack against a creature within your reach. On a hit, you afflict the creature with a disease of your choice from any of the ones described below.\nAt the end of each of the target's turns, it must make a Constitution saving throw. After failing three of these saving throws, the disease's effects last for the duration, and the creature stops making these saves. After succeeding on three of these saving throws, the creature recovers from the disease, and the spell ends.\nSince this spell induces a natural disease in its target, any effect that removes a disease or otherwise ameliorates a disease's effects apply to it.\nBlinding Sickness. Pain grips the creature's mind, and its eyes turn milky white. The creature has disadvantage on wisdom checks and Wisdom saving throws and is blinded.\nFilth Fever. A raging fever sweeps through the creature's body. The creature has disadvantage on strength checks, Strength saving throws, and attack rolls that use Strength.\nFlesh Rot. The creature's flesh decays. The creature has disadvantage on Charisma checks and vulnerability to all damage.\nMindfire. The creature's mind becomes feverish. The creature has disadvantage on intelligence checks and Intelligence saving throws, and the creature behaves as if under the effects of the confusion spell during combat.\nSeizure. The creature is overcome with shaking. The creature has disadvantage on dexterity checks, Dexterity saving throws, and attack rolls that use Dexterity.\nSlimy Doom. The creature begins to bleed uncontrollably. The creature has disadvantage on constitution checks and Constitution saving throws. In addition, whenever the creature takes damage, it is stunned until the end of its next turn.","emote":"'s touch inflicts disease","attack":{"type":"melee"},"save":{"ability":"Constitution"}},{"name":"Contingency","level":6,"school":"Evocation","castingTime":"10 minutes","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a statuette of yourself carved from ivory and decorated with gems worth at least 1,500 gp","materialCost":1500},"duration":"10 days","description":"Choose a spell of 5th level or lower that you can cast, that has a casting time of 1 action, and that can target you. You cast that spell—called the contingent spell—as part of casting contingency, expending spell slots for both, but the contingent spell doesn't come into effect. Instead, it takes effect when a certain circumstance occurs. You describe that circumstance when you cast the two spells. For example, a contingency cast with water breathing might stipulate that water breathing comes into effect when you are engulfed in water or a similar liquid. \nThe contingent spell takes effect immediately after the circumstance is met for the first time, whether or not you want it to, and then contingency ends.\nThe contingent spell takes effect only on you, even if it can normally target others. You can use only one contingency spell at a time. If you cast this spell again, the effect of another contingency spell on you ends. Also, contingency ends on you if its material component is ever not on your person.","emote":"prepares a spell in case the worst happens"},{"name":"Continual Flame","level":2,"school":"Evocation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"ruby dust worth 50 gp, which the spell consumes","materialCost":50},"duration":"Until dispelled","description":"A flame, equivalent in brightness to a torch, springs forth from an object that you touch. The effect looks like a regular flame, but it creates no heat and doesn't use oxygen. A continual flame can be covered or hidden but not smothered or quenched.","emote":"evokes a flame, equivalent in brightness to a torch, to spring forth from an object"},{"name":"Control Water","level":4,"school":"Transmutation","castingTime":"1 action","range":"300 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a drop of water and a pinch of dust"},"concentration":true,"duration":"up to 10 minutes","description":"Until the spell ends, you control any freestanding water inside an area you choose that is a cube up to 100 feet on a side. You can choose from any of the following effects when you cast this spell. As an action on your turn, you can repeat the same effect or choose a different one.\nFlood. You cause the water level of all standing water in the area to rise by as much as 20 feet. If the area includes a shore, the flooding water spills over onto dry land.\ninstead create a 20-foot tall wave that travels from one side of the area to the other and then crashes down. Any Huge or smaller vehicles in the wave's path are carried with it to the other side. Any Huge or smaller vehicles struck by the wave have a 25% chance of capsizing.\nThe water level remains elevated until the spell ends or you choose a different effect. If this effect produced a wave, the wave repeats on the start of your next turn while the flood effect lasts.\nPart Water. You cause water in the area to move apart and create a trench. The trench extends across the spell's area, and the separated water forms a wall to either side. The trench remains until the spell ends or you choose a different effect. The water then slowly fills in the trench over the course of the next round until the normal water level is restored.\nRedirect Flow. You cause flowing water in the area to move in a direction you choose, even if the water has to flow over obstacles, up walls, or in other unlikely directions. The water in the area moves as you direct it, but once it moves beyond the spell's area, it resumes its flow based on the terrain conditions. The water continues to move in the direction you chose until the spell ends or you choose a different effect.\nWhirlpool. This effect requires a body of water at least 50 feet square and 25 feet deep. You cause a whirlpool to form in the center of the area. The whirlpool forms a vortex that is 5 feet wide at the base, up to 50 feet wide at the top, and 25 feet tall. Any creature or object in the water and within 25 feet of the vortex is pulled 10 feet toward it. A creature can swim away from the vortex by making a Strength (Athletics) check against your spell save DC.\nWhen a creature enters the vortex for the first time on a turn or starts its turn there, it must make a Strength saving throw. On a failed save, the creature takes 2d8 bludgeoning damage and is caught in the vortex until the spell ends. On a successful save, the creature takes half damage, and isn't caught in the vortex. A creature caught in the vortex can use its action to try to swim away from the vortex as described above, but has disadvantage on the Strength (Athletics) check to do so.\nThe first time each turn that an object enters the vortex, the object takes 2d8 bludgeoning damage; this damage occurs each round it remains in the vortex.","emote":"controls freestanding water"},{"name":"Control Weather","level":8,"school":"Transmutation","castingTime":"10 minutes","range":"Self (5-mile radius)","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"burning incense and bits of earth and wood mixed in water"},"concentration":true,"duration":"up to 8 hours","description":"You take control of the weather within 5 miles of you for the duration. You must be outdoors to cast this spell. Moving to a place where you don't have a clear path to the sky ends the spell early.\nWhen you cast the spell, you change the current weather conditions, which are determined by the DM based on the climate and season. You can change precipitation, temperature, and wind. It takes 1d4 x 10 minutes for the new conditions to take effect. Once they do so, you can change the conditions again. When the spell ends, the weather gradually returns to normal.\nWhen you change the weather conditions, find a current condition on the following tables and change its stage by one, up or down. When changing the wind, you can change its direction.","emote":"takes control of the weather"},{"name":"Counterspell","level":3,"school":"Abjuration","castingTime":"1 reaction","range":"60 feet","components":{"somatic":true},"duration":"Instantaneous","description":"You attempt to interrupt a creature in the process of casting a spell. If the creature is casting a spell of 3rd level or lower, its spell fails and has no effect. If it is casting a spell of 4th level or higher, make an ability check using your spellcasting ability. The DC equals 10 + the spell's level. On a success, the creature's spell fails and has no effect.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, the interrupted spell has no effect if its level is less than or equal to the level of the spell slot you used.","emote":"attempts to interrupt a creature in the process of casting a spell"},{"name":"Create Food and Water","level":3,"school":"Conjuration","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You create 45 pounds of food and 30 gallons of water on the ground or in containers within range, enough to sustain up to fifteen humanoids or five steeds for 24 hours. The food is bland but nourishing, and spoils if uneaten after 24 hours. The water is clean and doesn't go bad.","emote":"creates a plethora of food and water"},{"name":"Create or Destroy Water","level":1,"school":"Transmutation","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a drop of water if creating water, or a few grains of sand if destroying it"},"duration":"Instantaneous","description":"You either create or destroy water.\nCreate Water. You create up to 10 gallons of clean water within range in an open container. Alternatively, the water falls as rain in a 30-foot cube within range.\nDestroy Water. You destroy up to 10 gallons of water in an open container within range. Alternatively, you destroy fog in a 30-foot cube within range.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, you create or destroy 10 additional gallons of water, or the size of the cube increases by 5 feet, for each slot level above 1st.","emote":"creates or destroys water"},{"name":"Create Undead","level":6,"school":"Necromancy","castingTime":"1 minute","range":"10 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"one clay pot filled with grave dirt, one clay pot filled with brackish water, and one 150 gp black onyx stone for each corpse","materialCost":150},"duration":"Instantaneous","description":"You can cast this spell only at night. Choose up to three corpses of Medium or Small humanoids within range. Each corpse becomes a ghoul under your control. (The DM has game statistics for these creatures.)\nAs a bonus action on each of your turns, you can mentally command any creature you animated with this spell if the creature is within 120 feet of you (if you control multiple creatures, you can command any or all of them at the same time, issuing the same command to each one). You decide what action the creature will take and where it will move during its next turn, or you can issue a general command, such as to guard a particular chamber or corridor. If you issue no commands, the creature only defends itself against hostile creatures. Once given an order, the creature continues to follow it until its task is complete.\nThe creature is under your control for 24 hours, after which it stops obeying any command you have given it. To maintain control of the creature for another 24 hours, you must cast this spell on the creature before the current 24-hour period ends. This use of the spell reasserts your control over up to three creatures you have animated with this spell, rather than animating new ones.","higherLevel":"When you cast this spell using a 7th-level spell slot, you can animate or reassert control over four ghouls. When you cast this spell using an 8th-level spell slot, you can animate or reassert control over five ghouls or two ghasts or wights. When you cast this spell using a 9th-level spell slot, you can animate or reassert control over six ghouls, three ghasts or wights, or two mummies.","emote":"raises undead creatures"},{"name":"Creation","level":5,"school":"Illusion","castingTime":"1 minute","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a tiny piece of matter of the same type of the item you plan to create"},"duration":"Special","description":"You pull wisps of shadow material from the Shadowfell to create a nonliving object of vegetable matter within range: soft goods, rope, wood, or something similar. You can also use this spell to create mineral objects such as stone, crystal, or metal. The object created must be no larger than a 5-foot cube, and the object must be of a form and material that you have seen before.\nThe duration depends on the object's material. If the object is composed of multiple materials, use the shortest duration.\nVegetable matter 1 day\nStone or crystal 12 hours\nPrecious metals 1 hour\nGems 10 minutes\nAdamantine or mithral 1 minute\nUsing any material created by this spell as another spell's material component causes that spell to fail.","higherLevel":"When you cast this spell using a spell slot of 6th level or higher, the cube increases by 5 feet for each slot level above 5th.","emote":"pulls wisps of shadow material from the Shadowfell to create a nonliving object of vegetable matter"},{"name":"Cure Wounds","level":1,"school":"Evocation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"A creature you touch regains a number of hit points equal to 1d8 + your spellcasting ability modifier. This spell has no effect on undead or constructs.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, the healing increases by 1d8 for each slot level above 1st.","emote":"cures a creature's wounds","heal":{"heal":"1d8","castingStat":true,"higherLevelDice":1}},{"name":"Dancing Lights","level":0,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of phosphorus or wychwood, or a glowworm"},"concentration":true,"duration":"up to 1 minute","description":"You create up to four torch-sized lights within range, making them appear as torches, lanterns, or glowing orbs that hover in the air for the duration. You can also combine the four lights into one glowing vaguely humanoid form of Medium size. Whichever form you choose, each light sheds dim light in a 10-foot radius.\nAs a bonus action on your turn, you can move the lights up to 60 feet to a new spot within range. A light must be within 20 feet of another light created by this spell, and a light winks out if it exceeds the spell's range.","emote":"creates up to 4 torch-sized lights within range, making them appear as torches, lanterns, or glowing orbs that hover in the air"},{"name":"Darkness","level":2,"school":"Evocation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"material":true,"materialMaterial":"bat fur and a drop of pitch or piece of coal"},"concentration":true,"duration":"up to 10 minutes","description":"Magical darkness spreads from a point you choose within range to fill a 15-foot-radius sphere for the duration. The darkness spreads around corners. A creature with darkvision can't see through this darkness, and nonmagical light can't illuminate it.\nIf the point you choose is on an object you are holding or one that isn't being worn or carried, the darkness emanates from the object and moves with it. Completely covering the source of the darkness with an opaque object, such as a bowl or a helm, blocks the darkness.\nIf any of this spell's area overlaps with an area of light created by a spell of 2nd level or lower, the spell that created the light is dispelled.","emote":"evokes magical darkness that spreads"},{"name":"Darkvision","level":2,"school":"Transmutation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"either a pinch of dried carrot or an agate"},"duration":"8 hours","description":"You touch a willing creature to grant it the ability to see in the dark. For the duration, that creature has darkvision out to a range of 60 feet.","emote":"touches a creature, granting it the ability to see in the dark"},{"name":"Daylight","level":3,"school":"Evocation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"1 hour","description":"A 60-foot-radius sphere of light spreads out from a point you choose within range. The sphere is bright light and sheds dim light for an additional 60 feet.\nIf you chose a point on an object you are holding or one that isn't being worn or carried, the light shines from the object and moves with it. Completely covering the affected object with an opaque object, such as a bowl or a helm, blocks the light.\nIf any of this spell's area overlaps with an area of darkness created by a spell of 3rd level or lower, the spell that created the darkness is dispelled.","emote":"evokes a sphere of light"},{"name":"Death Ward","level":4,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"duration":"8 hours","description":"You touch a creature and grant it a measure of protection from death.\nThe first time the target would drop to 0 hit points as a result of taking damage, the target instead drops to 1 hit point, and the spell ends.\nIf the spell is still in effect when the target is subjected to an effect that would kill it instantaneously without dealing damage, that effect is instead negated against the target, and the spell ends.","emote":"wards a creature a measure of protection from death"},{"name":"Delayed Blast Fireball","level":7,"school":"Evocation","castingTime":"1 action","range":"150 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a tiny ball of bat guano and sulfur"},"concentration":true,"duration":"up to 1 minute","description":"A beam of yellow light flashes from your pointing finger, then condenses to linger at a chosen point within range as a glowing bead for the duration. When the spell ends, either because your concentration is broken or because you decide to end it, the bead blossoms with a low roar into an explosion of flame that spreads around corners. Each creature in a 20-foot-radius sphere centered on that point must make a Dexterity saving throw. A creature takes fire damage equal to the total accumulated damage on a failed save, or half as much damage on a successful one.\nThe spell's base damage is 12d6. If at the end of your turn the bead has not yet detonated, the damage increases by 1d6.\nIf the glowing bead is touched before the interval has expired, the creature touching it must make a Dexterity saving throw. On a failed save, the spell ends immediately, causing the bead to erupt in flame. On a successful save, the creature can throw the bead up to 40 feet. When it strikes a creature or a solid object, the spell ends, and the bead explodes.\nThe fire damages objects in the area and ignites flammable objects that aren't being worn or carried.","higherLevel":"When you cast this spell using a spell slot of 8th level or higher, the base damage increases by 1d6 for each slot level above 7th.","emote":"evokes a beam of yellow light that flashes from {{GENDER_PRONOUN_HIS_HER}} pointing finger, then condenses to linger at a chosen point within range as a glowing bead.","save":{"ability":"Dexterity","damage":"12d6","damageType":"fire","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Demiplane","level":8,"school":"Conjuration","castingTime":"1 action","range":"60 feet","components":{"somatic":true},"duration":"1 hour","description":"You create a shadowy door on a flat solid surface that you can see within range. The door is large enough to allow Medium creatures to pass through unhindered. When opened, the door leads to a demiplane that appears to be an empty room 30 feet in each dimension, made of wood or stone. When the spell ends, the door disappears, and any creatures or objects inside the demiplane remain trapped there, as the door also disappears from the other side.\nEach time you cast this spell, you can create a new demiplane, or have the shadowy door connect to a demiplane you created with a previous casting of this spell. Additionally, if you know the nature and contents of a demiplane created by a casting of this spell by another creature, you can have the shadowy door connect to its demiplane instead.","emote":"creates a shadowy"},{"name":"Detect Evil and Good","level":1,"school":"Divination","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 10 minutes","description":"For the duration, you know if there is an aberration, celestial, elemental, fey, fiend, or undead within 30 feet of you, as well as where the creature is located. Similarly, you know if there is a place or object within 30 feet of you that has been magically consecrated or desecrated.\nThe spell can penetrate most barriers, but it is blocked by 1 foot of stone, 1 inch of common metal, a thin sheet of lead, or 3 feet of wood or dirt.","emote":"detects if there is an aberration, celestial, elemental, fey, fiend, or undead nearby"},{"name":"Detect Magic","level":1,"school":"Divination","ritual":true,"castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 10 minutes","description":"For the duration, you sense the presence of magic within 30 feet of you. If you sense magic in this way, you can use your action to see a faint aura around any visible creature or object in the area that bears magic, and you learn its school of magic, if any.\nThe spell can penetrate most barriers, but it is blocked by 1 foot of stone, 1 inch of common metal, a thin sheet of lead, or 3 feet of wood or dirt.","emote":"senses the presence of magic"},{"name":"Detect Poison and Disease","level":1,"school":"Divination","ritual":true,"castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a yew leaf"},"concentration":true,"duration":"up to 10 minutes","description":"For the duration, you can sense the presence and location of poisons, poisonous creatures, and diseases within 30 feet of you. You also identify the kind of poison, poisonous creature, or disease in each case.\nThe spell can penetrate most barriers, but it is blocked by 1 foot of stone, 1 inch of common metal, a thin sheet of lead, or 3 feet of wood or dirt.","emote":"senses the presence and location of poisons, poisonous creatures, and diseases"},{"name":"Detect Thoughts","level":2,"school":"Divination","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a copper coin"},"concentration":true,"duration":"up to 1 minute","description":"For the duration, you can read the thoughts of certain creatures. When you cast the spell and as your action on each turn until the spell ends, you can focus your mind on any one creature that you can see within 30 feet of you. If the creature you choose has an Intelligence of 3 or lower or doesn't speak any language, the creature is unaffected.\nYou initially learn the surface thoughts of the creature—what is most on its mind in that moment. As an action, you can either shift your attention to another creature's thoughts or attempt to probe deeper into the same creature's mind. If you probe deeper, the target must make a Wisdom saving throw. If it fails, you gain insight into its reasoning (if any), its emotional state, and something that looms large in its mind (such as something it worries over, loves, or hates). If it succeeds, the spell ends. Either way, the target knows that you are probing into its mind, and unless you shift your attention to another creature's thoughts, the creature can use its action on its turn to make an Intelligence check contested by your Intelligence check; if it succeeds, the spell ends.\nQuestions verbally directed at the target creature naturally shape the course of its thoughts, so this spell is particularly effective as part of an interrogation. You can also use this spell to detect the presence of thinking creatures you can't see. When you cast the spell or as your action during the duration, you can search for thoughts within 30 feet of you. The spell can penetrate barriers, but 2 feet of rock, 2 inches of any metal other than lead, or a thin sheet of lead blocks you. You can't detect a creature with an Intelligence of 3 or lower or one that doesn't speak any language.\n Once you detect the presence of a creature in this way, you can read its thoughts for the rest of the duration as described above, even if you can't see it, but it must still be within range.","emote":"gains the ability to read thoughts","save":{"ability":"Wisdom","saveSuccess":"the spell ends"}},{"name":"Dimension Door","level":4,"school":"Conjuration","castingTime":"1 action","range":"500 feet","components":{"verbal":true},"duration":"Instantaneous","description":"You teleport yourself from your current location to any other spot within range. You arrive at exactly the spot desired. It can be a place you can see, one you can visualize, or one you can describe by stating distance and direction, such as \"200 feet straight downward\" or \"upward to the northwest at a 45° angle, 300 feet.\"\nYou can bring along objects as long as their weight doesn't exceed what you can carry. You can also bring one willing creature of your size or smaller who is carrying gear up to its carrying capacity. The creature must be within 5 feet of you when you cast this spell.\nIf you would arrive in a place already occupied by an object or a creature, you and any creature traveling with you each take 4d6 force damage, and the spell fails to teleport you.","emote":"teleports away"},{"name":"Disguise Self","level":1,"school":"Illusion","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"duration":"1 hour","description":"You make yourself—including your clothing, armor, weapons, and other belongings on your person—look different until the spell ends or until you use your action to dismiss it. You can seem 1 foot shorter or taller and can appear thin, fat, or in between. You can't change your body type, so you must adopt a form that has the same basic arrangement of limbs. Otherwise, the extent of the illusion is up to you.\nThe changes wrought by this spell fail to hold up to physical inspection. For example, if you use this spell to add a hat to your outfit, objects pass through the hat, and anyone who touches it would feel nothing or would feel your head and hair. If you use this spell to appear thinner than you are, the hand of someone who reaches out to touch you would bump into you while it was seemingly still in midair.\nTo discern that you are disguised, a creature can use its action to inspect your appearance and must succeed on an Intelligence (Investigation) check against your spell save DC.","emote":"disguises {{GENDER_PRONOUN_HIMSELF_HERSELF}}"},{"name":"Disintegrate","level":6,"school":"Transmutation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a lodestone and a pinch of dust"},"duration":"Instantaneous","description":"A thin green ray springs from your pointing finger to a target that you can see within range. The target can be a creature, an object, or a creation of magical force, such as the wall created by wall of force.\nA creature targeted by this spell must make a Dexterity saving throw. On a failed save, the target takes 10d6 + 40 force damage. If this damage reduces the target to 0 hit points, it is disintegrated.\nA disintegrated creature and everything it is wearing and carrying, except magic items, are reduced to a pile of fine gray dust. The creature can be restored to life only by means of a true resurrection or a wish spell.\nThis spell automatically disintegrates a Large or smaller nonmagical object or a creation of magical force. If the target is a Huge or larger object or creation of force, this spell disintegrates a 10-foot-cube portion of it. A magic item is unaffected by this spell.","higherLevel":"When you cast this spell using a spell slot of 7th level or higher, the damage increases by 3d6 for each slot level above 6th.","emote":"shoots a thin green ray from {{GENDER_PRONOUN_HIS_HER}} pointing finger","save":{"ability":"Dexterity","damage":"10d6","damageBonus":"40","damageType":"force","saveSuccess":"half damage","higherLevelDice":3}},{"name":"Dispel Evil and Good","level":5,"school":"Abjuration","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"holy water or powdered silver and iron"},"concentration":true,"duration":"up to 1 minute","description":"Shimmering energy surrounds and protects you from fey, undead, and creatures originating from beyond the Material Plane. For the duration, celestials, elementals, fey, fiends, and undead have disadvantage on attack rolls against you.\nYou can end the spell early by using either of the following special functions.\nBreak Enchantment. As your action, you touch a creature you can reach that is charmed, frightened, or possessed by a celestial, an elemental, a fey, a fiend, or an undead. The creature you touch is no longer charmed, frightened, or possessed by such creatures.\nDismissal. As your action, make a melee spell attack against a celestial, an elemental, a fey, a fiend, or an undead you can reach. On a hit, you attempt to drive the creature back to its home plane. The creature must succeed on a Charisma saving throw or be sent back to its home plane (if it isn't there already). If they aren't on their home plane, undead are sent to the Shadowfell, and fey are sent to the Feywild.","emote":"abjures shimmering energy that surrounds and protects {{GENDER_PRONOUN_HIM_HER}} from fey, undead, and creatures originating from beyond the Material Plane"},{"name":"Dispel Magic","level":3,"school":"Abjuration","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"Choose one creature, object, or magical effect within range. Any spell of 3rd level or lower on the target ends. For each spell of 4th level or higher on the target, make an ability check using your spellcasting ability. The DC equals 10 + the spell's level. On a successful check, the spell ends.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, you automatically end the effects of a spell on the target if the spell's level is equal to or less than the level of the spell slot you used.","emote":"dispels a magical effect"},{"name":"Divination","level":4,"school":"Divination","ritual":true,"castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"incense and a sacrificial offering appropriate to your religion, together worth at least 25 gp, which the spell consumes","materialCost":25},"duration":"Instantaneous","description":"Your magic and an offering put you in contact with a god or a god's servants. You ask a single question concerning a specific goal, event, or activity to occur within 7 days. The DM offers a truthful reply. The reply might be a short phrase, a cryptic rhyme, or an omen.\nThe spell doesn't take into account any possible circumstances that might change the outcome, such as the casting of additional spells or the loss or gain of a companion.\nIf you cast the spell two or more times before finishing your next long rest, there is a cumulative 25% chance for each casting after the first that you get a random reading. The DM makes this roll in secret.","emote":"'s magic and an offering puts {{GENDER_PRONOUN_HIM_HER}} in contact with a god or a god's servant."},{"name":"Divine Favor","level":1,"school":"Evocation","castingTime":"1 bonus action","range":"Self","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"Your prayer empowers you with divine radiance. Until the spell ends, your weapon attacks deal an extra 1d4 radiant damage on a hit.","emote":"is empowered by prayer with divine radiance"},{"name":"Divine Word","level":7,"school":"Evocation","castingTime":"1 bonus action","range":"30 feet","components":{"verbal":true},"duration":"Instantaneous","description":"You utter a divine word, imbued with the power that shaped the world at the dawn of creation. Choose any number of creatures you can see within range. Each creature that can hear you must make a Charisma saving throw. On a failed save, a creature suffers an effect based on its current hit points:\n&#8226; 50 hit points or fewer: deafened for 1 minute\n&#8226; 40 hit points or fewer: deafened and blinded for 10 minutes\n&#8226; 30 hit points or fewer: blinded, deafened, and stunned for 1 hour\n&#8226; 20 hit points or fewer: killed instantly.\nRegardless of its current hit points, a celestial, an elemental, a fey, or a fiend that fails its save is forced back to its plane of origin (if it isn't there already) and can't return to your current plane for 24 hours by any means short of a wish spell.","emote":"utters a divine word, imbued with the power that shaped the world at the dawn of creation","save":{"ability":"Charisma"}},{"name":"Dominate Beast","level":4,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"You attempt to beguile a beast that you can see within range. It must succeed on a Wisdom saving throw or be charmed by you for the duration. If you or creatures that are friendly to you are fighting it, it has advantage on the saving throw.\nWhile the creature is charmed, you have a telepathic link with it as long as the two of you are on the same plane of existence. You can use this telepathic link to issue commands to the creature while you are conscious (no action required), which it does its best to obey. You can specify a simple and general course of action, such as \"Attack that creature,\" \"Run over there,\" or \"Fetch that object.\" If the creature completes the order and doesn't receive further direction from you, it defends and preserves itself to the best of its ability.\nYou can use your action to take total and precise control of the target. Until the end of your next turn, the creature takes only the actions you choose, and doesn't do anything that you don't allow it to do. During this time, you can also cause the creature to use a reaction, but this requires you to use your own reaction as well. Each time the target takes damage, it makes a new Wisdom saving throw against the spell. If the saving throw succeeds, the spell ends.","higherLevel":"When you cast this spell with a 9th level spell slot, the duration is concentration, up to 8 hours.","emote":"attempts to beguile a creature","save":{"ability":"Wisdom"}},{"name":"Dominate Monster","level":8,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 hour","description":"You attempt to beguile a creature that you can see within range. It must succeed on a Wisdom saving throw or be charmed by you for the duration. If you or creatures that are friendly to you are fighting it, it has advantage on the saving throw.\nWhile the creature is charmed, you have a telepathic link with it as long as the two of you are on the same plane of existence. You can use this telepathic link to issue commands to the creature while you are conscious (no action required), which it does its best to obey. You can specify a simple and general course of action, such as \"Attack that creature,\" \"Run over there,\" or \"Fetch that object.\" If the creature completes the order and doesn't receive further direction from you, it defends and preserves itself to the best of its ability.\nYou can use your action to take total and precise control of the target. Until the end of your next turn, the creature takes only the actions you choose, and doesn't do anything that you don't allow it to do. During this time, you can also cause the creature to use a reaction, but this requires you to use your own reaction as well.\nEach time the target takes damage, it makes a new Wisdom saving throw against the spell. If the saving throw succeeds, the spell ends.","higherLevel":"When you cast this spell with a 9th-level spell slot, the duration is concentration, up to 8 hours.","emote":"attempts to beguile a creature","save":{"ability":"Wisdom"}},{"name":"Dominate Person","level":5,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"You attempt to beguile a humanoid that you can see within range. It must succeed on a Wisdom saving throw or be charmed by you for the duration. If you or creatures that are friendly to you are fighting it, it has advantage on the saving throw.\nWhile the target is charmed, you have a telepathic link with it as long as the two of you are on the same plane of existence. You can use this telepathic link to issue commands to the creature while you are conscious (no action required), which it does its best to obey. You can specify a simple and general course of action, such as \"Attack that creature,\" \"Run over there,\" or \"Fetch that object.\" If the creature completes the order and doesn't receive further direction from you, it defends and preserves itself to the best of its ability.\nYou can use your action to take total and precise control of the target. Until the end of your next turn, the creature takes only the actions you choose, and doesn't do anything that you don't allow it to do. During this time you can also cause the creature to use a reaction, but this requires you to use your own reaction as well.\nEach time the target takes damage, it makes a new Wisdom saving throw against the spell. If the saving throw succeeds, the spell ends.","higherLevel":"When you cast this spell using a 6th-level spell slot, the duration is concentration, up to 10 minutes. When you use a 7th-level spell slot, the duration is concentration, up to 1 hour. When you use a spell slot of 8th level or higher, the duration is concentration, up to 8 hours.","emote":"attempts to beguile a humanoid","save":{"ability":"Wisdom"}},{"name":"Dream","level":5,"school":"Illusion","castingTime":"1 minute","range":"Special","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a handful of sand, a dab of ink, and a writing quill plucked from a sleeping bird"},"duration":"8 hours","description":"This spell shapes a creature's dreams. Choose a creature known to you as the target of this spell. The target must be on the same plane of existence as you. Creatures that don't sleep, such as elves, can't be contacted by this spell. You, or a willing creature you touch, enters a trance state, acting as a messenger.\nWhile in the trance, the messenger is aware of his or her surroundings, but can't take actions or move.\nIf the target is asleep, the messenger appears in the target's dreams and can converse with the target as long as it remains asleep, through the duration of the spell. The messenger can also shape the environment of the dream, creating landscapes, objects, and other images. The messenger can emerge from the trance at any time, ending the effect of the spell early. The target recalls the dream perfectly upon waking. If the target is awake when you cast the spell, the messenger knows it, and can either end the trance (and the spell) or wait for the target to fall asleep, at which point the messenger appears in the target's dreams.\nYou can make the messenger appear monstrous and terrifying to the target. If you do, the messenger can deliver a message of no more than ten words and then the target must make a Wisdom saving throw. On a failed save, echoes of the phantasmal monstrosity spawn a nightmare that lasts the duration of the target's sleep and prevents the target from gaining any benefit from that rest. In addition, when the target wakes up, it takes 3d6 psychic damage.\nIf you have a body part, lock of hair, clipping from a nail, or similar portion of the target's body, the target makes its saving throw with disadvantage.","emote":"shapes a creature's dreams"},{"name":"Druidcraft","level":0,"school":"Transmutation","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"Whispering to the spirits of nature, you create one of the following effects within 'range':\n- You create a tiny, harmless sensory effect that predicts what the weather will be at your location for the next 24 hours. The effect might manifest as a golden orb for clear skies, a cloud for rain, falling snowflakes for snow, and so on. This effect persists for 1 round.\n- You instantly make a flower bloom, a seed pod open, or a leaf bud bloom.\n- You create an instantaneous, harmless sensory effect, such as falling leaves, a puff of wind, the sound of a small animal, or the faint order of skunk. The effect must fit in a 5-foot cube.\n- You instantly light or snuff out a candle, a torch, or a small campfire.","emote":"whispers to the spirits of nature"},{"name":"Earthquake","level":8,"school":"Evocation","castingTime":"1 action","range":"500 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of dirt, a piece of rock, and a lump of clay"},"concentration":true,"duration":"up to 1 minute","description":"You create a seismic disturbance at a point on the ground that you can see within range. For the duration, an intense tremor rips through the ground in a 100-foot-radius circle centered on that point and shakes creatures and structures in contact with the ground in that area.\nThe ground in the area becomes difficult terrain. Each creature on the ground that is concentrating must make a Constitution saving throw. On a failed save, the creature's concentration is broken.\nWhen you cast this spell and at the end of each turn you spend concentrating on it, each creature on the ground in the area must make a Dexterity saving throw. On a failed save, the creature is knocked prone.\nThis spell can have additional effects depending on the terrain in the area, as determined by the DM.\nFissures. Fissures open throughout the spell's area at the start of your next turn after you cast the spell. A total of 1d6 such fissures open in locations chosen by the DM. Each is 1d10 × 10 feet deep, 10 feet wide, and extends from one edge of the spell's area to the opposite side. A creature standing on a spot where a fissure opens must succeed on a Dexterity saving throw or fall in. A creature that successfully saves moves with the fissure's edge as it opens.\nA fissure that opens beneath a structure causes it to automatically collapse (see below).\nStructures. The tremor deals 50 bludgeoning damage to any structure in contact with the ground in the area when you cast the spell and at the start of each of your turns until the spell ends. If a structure drops to 0 hit points, it collapses and potentially damages nearby creatures. A creature within half the distance of a structure's height must make a Dexterity saving throw. On a failed save, the creature takes 5d6 bludgeoning damage, is knocked prone, and is buried in the rubble, requiring a DC 20 Strength (Athletics) check as an action to escape. The DM can adjust the DC higher or lower, depending on the nature of the rubble. On a successful save, the creature takes half as much damage and doesn't fall prone or become buried.","emote":"creates a seismic disturbance"},{"name":"Eldritch Blast","level":0,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"A beam of crackling energy streaks toward a creature within range. Make a ranged spell attack against the target. On a hit, the target takes 1d10 force damage.\nThe spell creates more than one beam when you reach higher levels: two beams at 5th level, three beams at 11th level, and four beams at 17th level. You can direct the beams at the same target or at different ones. Make a separate attack roll for each beam.","higherLevel":"The spell creates more than one beam when you reach higher levels: two beams at 5th level, three beams at 11th level, and four beams at 17th level. You can direct the beams at the same target or at different ones. Make a separate attack roll for each beam.","emote":"shoots a beam of crackling energy streaks","attack":{"type":"ranged","damage":"d10","damageType":"force"}},{"name":"Enhance Ability","level":2,"school":"Transmutation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"fur or a feather from a beast"},"concentration":true,"duration":"up to 1 hour","description":"You touch a creature and bestow upon it a magical enhancement. Choose one of the following effects; the target gains that effect until the spell ends.\nBear's Endurance. The target has advantage on constitution checks. It also gains 2d6 temporary hit points, which are lost when the spell ends. \nBull's Strength. The target has advantage on strength checks, and his or her carrying capacity doubles.\nCat's Grace. The target has advantage on dexterity checks. It also doesn't take damage from falling 20 feet or less if it isn't incapacitated.\nEagle's Splendor. The target has advantage on Charisma checks.\nFox's Cunning. The target has advantage on intelligence checks.\nOwl's Wisdom. The target has advantage on wisdom checks.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.","emote":"bestows magical enhancements with a touch"},{"name":"Enlarge/Reduce","level":2,"school":"Transmutation","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch iron powder"},"concentration":true,"duration":"up to 1 minute","description":"You cause a creature or an object you can see within range to grow larger or smaller for the duration. Choose either a creature or an object that is neither worn nor carried. If the target is unwilling, it can make a Constitution saving throw. On a success, the spell has no effect.\nIf the target is a creature, everything it is wearing and carrying changes size with it. Any item dropped by an affected creature returns to normal size at once.\nEnlarge. The target's size doubles in all dimensions, and its weight is multiplied by eight. This growth increases its size by one category—from Medium to Large, for example. If there isn't enough room for the target to double its size, the creature or object attains the maximum possible size in the space available. Until the spell ends, the target also has advantage on Strength checks and Strength saving throws. The target's weapons also grow to match its new size. While these weapons are enlarged, the target's attacks with them deal 1d4 extra damage.\nReduce.The target's size is halved in all dimensions, and its weight is reduced to one-eighth of normal. This reduction decreases its size by one category—from Medium to Small, for example. Until the spell ends, the target also has disadvantage on Strength checks and Strength saving throws. The target's weapons also shrink to match its new size. While these weapons are reduced, the target's attacks with them deal 1d4 less damage (this can't reduce the damage below 1).","emote":"causes a creature or an object to grow larger or smaller","save":{"ability":"Constitution","saveSuccess":"the spell has no effect"}},{"name":"Entangle","level":1,"school":"Conjuration","castingTime":"1 action","range":"90 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"Grasping weeds and vines sprout from the ground in a 20-foot square starting from a point within range. For the duration, these plants turn the ground in the area into difficult terrain.\nA creature in the area when you cast the spell must succeed on a Strength saving throw or be restrained by the entangling plants until the spell ends. A creature restrained by the plants can use its action to make a Strength check against your spell save DC. On a success, it frees itself.\nWhen the spell ends, the conjured plants wilt away.","emote":"causes grasping weeds and vines to sprout from the ground","save":{"ability":"Strength"}},{"name":"Enthrall","level":2,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"1 minute","description":"You weave a distracting string of words, causing creatures of your choice that you can see within range and that can hear you to make a Wisdom saving throw. Any creature that can't be charmed succeeds on this saving throw automatically, and if you or your companions are fighting a creature, it has advantage on the save. On a failed save, the target has disadvantage on Wisdom (Perception) checks made to perceive any creature other than you until the spell ends or until the target can no longer hear you. The spell ends if you are incapacitated or can no longer speak.","emote":"weaves a distracting string of words","save":{"ability":"Wisdom"}},{"name":"Etherealness","level":7,"school":"Transmutation","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"duration":"8 hours","description":"You step into the border regions of the Ethereal Plane, in the area where it overlaps with your current plane. You remain in the Border Ethereal for the duration or until you use your action to dismiss the spell. During this time, you can move in any direction. If you move up or down, every foot of movement costs an extra foot. You can see and hear the plane you originated from, but everything there looks gray, and you can't see anything more than 60 feet away.\nWhile on the Ethereal Plane, you can only affect and be affected by other creatures on that plane. Creatures that aren't on the Ethereal Plane can't perceive you and can't interact with you, unless a special ability or magic has given them the ability to do so.\nYou ignore all objects and effects that aren't on the Ethereal Plane, allowing you to move through objects you perceive on the plane you originated from.\nWhen the spell ends, you immediately return to the plane you originated from in the spot you currently occupy. If you occupy the same spot as a solid object or creature when this happens, you are immediately shunted to the nearest unoccupied space that you can occupy and take force damage equal to twice the number of feet you are moved.\nThis spell has no effect if you cast it while you are on the Ethereal Plane or a plane that doesn't border it, such as one of the Outer Planes.","higherLevel":"When you cast this spell using a spell slot of 8th level or higher, you can target up to three willing creatures (including you) for each slot level above 7th. The creatures must be within 10 feet of you when you cast the spell.","emote":"steps into the border regions of the Ethereal Plane, in the area where it overlaps with {{GENDER_PRONOUN_HIS_HER}} current plane"},{"name":"Expeditious Retreat","level":1,"school":"Transmutation","castingTime":"1 bonus action","range":"Self","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 10 minutes","description":"This spell allows you to move at an incredible pace. When you cast this spell, and then as a bonus action on each of your turns until the spell ends, you can take the Dash action.","emote":"moves at an incredible pace"},{"name":"Eyebite","level":6,"school":"Necromancy","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"For the spell's duration, your eyes become an inky void imbued with dread power. One creature of your choice within 60 feet of you that you can see must succeed on a Wisdom saving throw or be affected by one of the following effects of your choice for the duration. On each of your turns until the spell ends, you can use your action to target another creature but can't target a creature again if it has succeeded on a saving throw against this casting of eyebite.\nAsleep. The target falls unconscious. It wakes up if it takes any damage or if another creature uses its action to shake the sleeper awake.\nPanicked. The target is frightened of you. On each of its turns, the frightened creature must take the Dash action and move away from you by the safest and shortest available route, unless there is nowhere to move. If the target moves to a place at least 60 feet away from you where it can no longer see you, this effect ends.\nSickened. The target has disadvantage on attack rolls and ability checks. At the end of each of its turns, it can make another Wisdom saving throw. If it succeeds, the effect ends.","emote":"'s eyes become an inky void imbued with dread power","save":{"ability":"Wisdom"}},{"name":"Fabricate","level":4,"school":"Transmutation","castingTime":"10 minutes","range":"120 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You convert raw materials into products of the same material. For example, you can fabricate a wooden bridge from a clump of trees, a rope from a patch of hemp, and clothes from flax or wool.\nChoose raw materials that you can see within range. You can fabricate a Large or smaller object (contained within a 10-foot cube, or eight connected 5-foot cubes), given a sufficient quantity of raw material. If you are working with metal, stone, or another mineral substance, however, the fabricated object can be no larger than Medium (contained within a single 5-foot cube). The quality of objects made by the spell is commensurate with the quality of the raw materials.\nCreatures or magic items can't be created or transmuted by this spell. You also can't use it to create items that ordinarily require a high degree of craftsmanship, such as jewelry, weapons, glass, or armor, unless you have proficiency with the type of artisan's tools used to craft such objects.","emote":"transmutes raw materials into products of the same material. For example, {{GENDER_PRONOUN_HE_SHE}} can fabricate a wooden bridge from a clump of trees, a rope from a patch of hemp, and clothes from flax or wool."},{"name":"Faerie Fire","level":1,"school":"Evocation","castingTime":"1 action","range":"60 feet","components":{"verbal":true},"concentration":true,"duration":"up to 1 minute","description":"Each object in a 20-foot cube within range is outlined in blue, green, or violet light (your choice). Any creature in the area when the spell is cast is also outlined in light if it fails a Dexterity saving throw. For the duration, objects and affected creatures shed dim light in a 10-foot radius.\nAny attack roll against an affected creature or object has advantage if the attacker can see it, and the affected creature or object can't benefit from being invisible.","emote":"evokes a cube that outlines creatures in blue, green, or violet light ({{GENDER_PRONOUN_HIS_HER}} choice)","save":{"ability":"Dexterity"}},{"name":"False Life","level":1,"school":"Necromancy","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a small amount of alcohol or distilled spirits"},"duration":"1 hour","description":"Bolstering yourself with a necromantic facsimile of life, you gain 1d4 + 4 temporary hit points for the duration.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, you gain 5 additional temporary hit points for each slot level above 1st.","emote":"Bolstering {{GENDER_PRONOUN_HIMSELF_HERSELF}} with a necromantic facsimile of life"},{"name":"Fear","level":3,"school":"Illusion","castingTime":"1 action","range":"Self (30-foot cone)","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a white feather or the heart of a hen"},"concentration":true,"duration":"up to 1 minute","description":"You project a phantasmal image of a creature's worst fears. Each creature in a 30-foot cone must succeed on a Wisdom saving throw or drop whatever it is holding and become frightened for the duration.\nWhile frightened by this spell, a creature must take the Dash action and move away from you by the safest available route on each of its turns, unless there is nowhere to move. If the creature ends its turn in a location where it doesn't have line of sight to you, the creature can make a Wisdom saving throw. On a successful save, the spell ends for that creature.","emote":"projects a phantasmal image of a creature's worst fears","save":{"ability":"Wisdom"}},{"name":"Feather Fall","level":1,"school":"Transmutation","castingTime":"1 reaction","range":"60 feet","components":{"verbal":true,"material":true,"materialMaterial":"a small feather or a piece of down"},"duration":"1 minute","description":"Choose up to five falling creatures within range. A falling creature's rate of descent slows to 60 feet per round until the spell ends. If the creature lands before the spell ends, it takes no falling damage and can land on its feet, and the spell ends for that creature.","emote":"slows {{GENDER_PRONOUN_HIMSELF_HERSELF}} and {{GENDER_PRONOUN_HIS_HER}} allies' descent"},{"name":"Feeblemind","level":8,"school":"Enchantment","castingTime":"1 action","range":"150 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a handful of clay, crystal, glass, or mineral spheres"},"duration":"Instantaneous","description":"You blast the mind of a creature that you can see within range, attempting to shatter its intellect and personality. The target takes 4d6 psychic damage and must make an Intelligence saving throw.\nOn a failed save, the creature's Intelligence and Charisma scores become 1. The creature can't cast spells, activate magic items, understand language, or communicate in any intelligible way. The creature can, however, identify its friends, follow them, and even protect them.\nAt the end of every 30 days, the creature can repeat its saving throw against this spell. If it succeeds on its saving throw, the spell ends.\nThe spell can also be ended by greater restoration, heal, or wish.","emote":"blasts the mind of a creature, attempting to shatter its intellect and personality","save":{"ability":"Intelligence"},"damage":{"damage":"4d6","damageType":"psychic"}},{"name":"Find Familiar","level":1,"school":"Conjuration","ritual":true,"castingTime":"1 hour","range":"10 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"10gp worth of charcoal, incense, and herbs that must be consumed by fire in a brass brazier.\nYou gain the service of a familiar, a spirit that takes an animal form you choose: bat, cat, crab, frog (toad), hawk, lizard, octopus, owl, poisonous snake, fish (quipper), rat, raven, sea horse, spider, or weasel. Appearing in an unoccupied space within range, the familiar has the statistics of the chosen form, though it is a celestial, fey, or fiend (your choice) instead of a beast","materialCost":10},"duration":"Instantaneous","description":"You gain the service of a familiar, a spirit that takes an animal form you choose: bat, cat, crab, frog (toad), hawk, lizard, octopus, owl, poisonous snake, fish (quipper), rat, raven, sea horse, spider, or weasel. Appearing in an unoccupied space within range, the familiar has the statistics of the chosen form, though it is a celestial, fey, or fiend (your choice) instead of a beast.\nYour familiar acts independently of you, but it always obeys your commands. In combat, it rolls its own initiative and acts on its own turn. A familiar can't attack, but it can take other actions as normal.\nWhen the familiar drops to 0 hit points, it disappears, leaving behind no physical form. It reappears after you cast this spell again.\nWhile your familiar is within 100 feet of you, you can communicate with it telepathically. Additionally, as an action, you can see through your familiar's eyes and hear what it hears until the start of your next turn, gaining the benefits of any special senses that the familiar has. During this time, you are deaf and blind with regard to your own senses.\nAs an action, you can temporarily dismiss your familiar. It disappears into a pocket dimension where it awaits your summons. Alternatively, you can dismiss it forever. As an action while it is temporarily dismissed, you can cause it to reappear in any unoccupied space within 30 feet of you.\nYou can't have more than one familiar at a time. If you cast this spell while you already have a familiar, you instead cause it to adopt a new form. Choose one of the forms from the above list. Your familiar transforms into the chosen creature.\nFinally, when you cast a spell with a range of touch, your familiar can deliver the spell as if it had cast the spell. Your familiar must be within 100 feet of you, and it must use its reaction to deliver the spell when you cast it. If the spell requires an attack roll, you use your attack modifier for the roll.","emote":"conjures a Familiar"},{"name":"Find Steed","level":2,"school":"Conjuration","castingTime":"10 minutes","range":"30 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You summon a spirit that assumes the form of an unusually intelligent, strong, and loyal steed, creating a long-lasting bond with it. Appearing in an unoccupied space within range, the steed takes on a form that you choose, such as a warhorse, a pony, a camel, an elk, or a mastiff. (Your DM might allow other animals to be summoned as steeds.) The steed has the statistics of the chosen form, though it is a celestial, fey, or fiend (your choice) instead of its normal type. Additionally, if your steed has an Intelligence of 5 or less, its Intelligence becomes 6, and it gains the ability to understand one language of your choice that you speak.\nYour steed serves you as a mount, both in combat and out, and you have an instinctive bond with it that allows you to fight as a seamless unit. While mounted on your steed, you can make any spell you cast that targets only you also target your steed.\nWhen the steed drops to 0 hit points, it disappears, leaving behind no physical form. You can also dismiss your steed at any time as an action, causing it to disappear. In either case, casting this spell again summons the same steed, restored to its hit point maximum.\nWhile your steed is within 1 mile of you, you can communicate with it telepathically.\nYou can't have more than one steed bonded by this spell at a time. As an action, you can release the steed from its bond at any time, causing it to disappear.","emote":"summons a spirit that assumes the form of an unusually intelligent, strong, and loyal steed, creating a long-lasting bond with it"},{"name":"Find the Path","level":6,"school":"Divination","castingTime":"1 minute","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a set of divinatory tools—such as bones, ivory sticks, cards, teeth, or carved runes—worth 100gp and an object from the location you wish to find","materialCost":100},"concentration":true,"duration":"up to 24 hours","description":"This spell allows you to find the shortest, most direct physical route to a specific fixed location that you are familiar with on the same plane of existence. If you name a destination on another plane of existence, a destination that moves (such as a mobile fortress), or a destination that isn't specific (such as \"a green dragon's lair\"), the spell fails.\nFor the duration, as long as you are on the same plane of existence as the destination, you know how far it is and in what direction it lies. While you are traveling there, whenever you are presented with a choice of paths along the way, you automatically determine which path is the shortest and most direct route (but not necessarily the safest route) to the destination.","emote":"divines the shortest, most direct physical route to a specific fixed location that {{GENDER_PRONOUN_HE_SHE}} is familiar with on the same plane of existence"},{"name":"Find Traps","level":2,"school":"Divination","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You sense the presence of any trap within range that is within line of sight. A trap, for the purpose of this spell, includes anything that would inflict a sudden or unexpected effect you consider harmful or undesirable, which was specifically intended as such by its creator. Thus, the spell would sense an area affected by the alarm spell, a glyph of warding, or a mechanical pit trap, but it would not reveal a natural weakness in the floor, an unstable ceiling, or a hidden sinkhole.\nThis spell merely reveals that a trap is present. You don't learn the location of each trap, but you do learn the general nature of the danger posed by a trap you sense.","emote":"senses the presence of any trap"},{"name":"Finger of Death","level":7,"school":"Necromancy","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You send negative energy coursing through a creature that you can see within range, causing it searing pain. The target must make a Constitution saving throw. It takes 7d8 + 30 necrotic damage on a failed save, or half as much damage on a successful one.\nA humanoid killed by this spell rises at the start of your next turn as a zombie that is permanently under your command, following your verbal orders to the best of its ability.","emote":"sends negative energy coursing through a creature, causing it searing pain","save":{"ability":"Constitution","damage":"7d8","damageBonus":"30","damageType":"necrotic","saveSuccess":"half damage"}},{"name":"Fireball","level":3,"school":"Evocation","castingTime":"1 action","range":"150 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a tiny ball of bat guano and sulfur"},"duration":"Instantaneous","description":"A bright streak flashes from your pointing finger to a point you choose within range and then blossoms with a low roar into an explosion of flame. Each creature in a 20-foot-radius sphere centered on that point must make a Dexterity saving throw. A target takes 8d6 fire damage on a failed save, or half as much damage on a successful one.\nThe fire spreads around corners. It ignites flammable objects in the area that aren't being worn or carried.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d6 for each slot level above 3rd.","emote":"evokes a bright streak that flashes from {{GENDER_PRONOUN_HIS_HER}} pointing finger to a point and then blossoms with a low roar into an explosion of flame","save":{"ability":"Dexterity","damage":"8d6","damageType":"fire","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Fire Bolt","level":0,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You hurl a mote of fire at a creature or object within range. Make a ranged spell attack against the target. On a hit, the target takes 1d10 fire damage. A flammable object hit by this spell ignites if it isn't being worn or carried.","higherLevel":"This spell's damage increases by 1d10 when you reach 5th level (2d10), 11th level (3d10), and 17th level (4d10).","emote":"hurls a mote of fire at a creature or object","attack":{"type":"ranged","damage":"((@{level} + 1) / 6 + 0.5)d10","damageType":"fire"}},{"name":"Fire Shield","level":4,"school":"Evocation","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a little phosphorus or a firefly"},"duration":"10 minutes","description":"Thin and vaporous flame surround your body for the duration of the spell, radiating a bright light bright light in a 10-foot radius and dim light for an additional 10 feet. You can end the spell using an action to make it disappear.\nThe flames are around you a heat shield or cold, your choice. The heat shield gives you cold damage resistance and the cold resistance to fire damage.\nIn addition, whenever a creature within 5 feet of you hits you with a melee attack, flames spring from the shield. The attacker then suffers 2d8 points of fire damage or cold, depending on the model.","emote":"evokes thin and vaporous flames that surround {{GENDER_PRONOUN_HIS_HER}} body, radiating a bright light bright light in a 10 foot radius and dim light for an additional 10 feet"},{"name":"Fire Storm","level":7,"school":"Evocation","castingTime":"1 action","range":"150 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"A storm made up of sheets of roaring flame appears in a location you choose within range. The area of the storm consists of up to ten 10-foot cubes, which you can arrange as you wish. Each cube must have at least one face adjacent to the face of another cube. Each creature in the area must make a Dexterity saving throw. It takes 7d10 fire damage on a failed save, or half as much damage on a successful one.\nThe fire damages objects in the area and ignites flammable objects that aren't being worn or carried. If you choose, plant life in the area is unaffected by this spell.","emote":"evokes a storm made up of sheets of roaring flame","save":{"ability":"Dexterity","damage":"7d10","damageType":"fire","saveSuccess":"half damage"}},{"name":"Flame Blade","level":2,"school":"Evocation","castingTime":"1 bonus action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"leaf of sumac"},"concentration":true,"duration":"up to 10 minutes","description":"You evoke a fiery blade in your free hand. The blade is similar in size and shape to a scimitar, and it lasts for the duration. If you let go of the blade, it disappears, but you can evoke the blade again as a bonus action.\nYou can use your action to make a melee spell attack with the fiery blade. On a hit, the target takes 3d6 fire damage.\nThe flaming blade sheds bright light in a 10-foot radius and dim light for an additional 10 feet.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d6 for every two slot levels above 2nd.","emote":"evokes a fiery blade in {{GENDER_PRONOUN_HIS_HER}} free hand. The blade is similar in size and shape to a scimitar.","attack":{"type":"melee","damage":"3d6","damageType":"fire","higherLevelDice":1}},{"name":"Flame Strike","level":5,"school":"Evocation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"pinch of sulfur"},"duration":"Instantaneous","description":"A vertical column of divine fire roars down from the heavens in a location you specify. Each creature in a 10-foot-radius, 40-foot-high cylinder centered on a point within range must make a Dexterity saving throw. A creature takes 4d6 fire damage and 4d6 radiant damage on a failed save, or half as much damage on a successful one.","higherLevel":"When you cast this spell using a spell slot of 6th level or higher, the fire damage or the radiant damage (your choice) increases by 1d6 for each slot level above 5th.","emote":"evokes a vertical column of divine fire roars down from the heavens","save":{"ability":"Dexterity","damage":"4d6","damageType":"fire","secondaryDamage":"4d6","secondaryDamageType":"radiant","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Flaming Sphere","level":2,"school":"Conjuration","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of tallow, a pinch of brimstone, and a dusting of powdered iron"},"concentration":true,"duration":"up to 1 minute","description":"A 5-foot-diameter sphere of fire appears in an unoccupied space of your choice within range and lasts for the duration. Any creature that ends its turn within 5 feet of the sphere must make a Dexterity saving throw. The creature takes 2d6 fire damage on a failed save, or half as much damage on a successful one.\nAs a bonus action, you can move the sphere up to 30 feet. If you ram the sphere into a creature, that creature must make the saving throw against the sphere's damage, and the sphere stops moving this turn.\nWhen you move the sphere, you can direct it over barriers up to 5 feet tall and jump it across pits up to 10 feet wide. The sphere ignites flammable objects not being worn or carried, and it sheds bright light in a 20-foot radius and dim light for an additional 20 feet.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, the damage increases by 1d6 for each slot level above 2nd.","emote":"conjures a sphere of fire","save":{"ability":"Dexterity","damage":"2d6","damageType":"fire","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Flesh to Stone","level":6,"school":"Transmutation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of lime, water, and earth"},"concentration":true,"duration":"up to 1 minute","description":"You attempt to turn one creature that you can see within range into stone. If the target's body is made of flesh, the creature must make a Constitution saving throw. On a failed save, it is restrained as its flesh begins to harden. On a successful save, the creature isn't affected.\nA creature restrained by this spell must make another Constitution saving throw at the end of each of its turns. If it successfully saves against this spell three times, the spell ends. If it fails its saves three times, it is turned to stone and subjected to the petrified condition for the duration. The successes and failures don't need to be consecutive; keep track of both until the target collects three of a kind.\nIf the creature is physically broken while petrified, it suffers from similar deformities if it reverts to its original state.\nIf you maintain your concentration on this spell for the entire possible duration, the creature is turned to stone until the effect is removed.","emote":"attempts to turn a creature into stone","save":{"ability":"Constitution"}},{"name":"Fly","level":3,"school":"Transmutation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a wing feather from any bird"},"concentration":true,"duration":"up to 10 minutes","description":"You touch a willing creature. The target gains a flying speed of 60 feet for the duration. When the spell ends, the target falls if it is still aloft, unless it can stop the fall.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, you can target one additional creature for each slot level above 3rd.","emote":"touches a target who begins to hover in the air"},{"name":"Fog Cloud","level":1,"school":"Conjuration","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 hour","description":"You create a 20-foot-radius sphere of fog centered on a point within range. The sphere spreads around corners, and its area is heavily obscured. It lasts for the duration or until a wind of moderate or greater speed (at least 10 miles per hour) disperses it.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, the radius of the fog increases by 20 feet for each slot level above 1st.","emote":"creates a sphere of fog"},{"name":"Forbiddance","level":6,"school":"Abjuration","ritual":true,"castingTime":"10 minutes","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a sprinkling of holy water, rare incense, and powdered ruby worth at least 1,000 gp","materialCost":1000},"duration":"24 hours","description":"You create a ward against magical travel that protects up to 40,000 square feet of floor space to a height of 30 feet above the floor. For the duration, creatures can't teleport into the area or use portals, such as those created by the gate spell, to enter the area. The spell proofs the area against planar travel, and therefore prevents creatures from accessing the area by way of the Astral Plane, Ethereal Plane, Feywild, Shadowfell, or the plane shift spell.\nIn addition, the spell damages types of creatures that you choose when you cast it. Choose one or more of the following: celestials, elementals, fey, fiends, and undead. When a chosen creature enters the spell's area for the first time on a turn or starts its turn there, the creature takes 5d10 radiant or necrotic damage (your choice when you cast this spell).\nWhen you cast this spell, you can designate a password. A creature that speaks the password as it enters the area takes no damage from the spell.\nThe spell's area can't overlap with the area of another forbiddance spell. If you cast forbiddance every day for 30 days in the same location, the spell lasts until it is dispelled, and the material components are consumed on the last casting.","emote":"creates a ward against magical travel"},{"name":"Forcecage","level":7,"school":"Evocation","castingTime":"1 action","range":"100 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"ruby dust worth 1,500 gp","materialCost":1500},"duration":"1 hour","description":"An immobile, invisible, cube-shaped prison composed of magical force springs into existence around an area you choose within range. The prison can be a cage or a solid box, as you choose.\nA prison in the shape of a cage can be up to 20 feet on a side and is made from 1/2-inch diameter bars spaced 1/2 inch apart. \nA prison in the shape of a box can be up to 10 feet on a side, creating a solid barrier that prevents any matter from passing through it and blocking any spells cast into or out from the area.\nWhen you cast the spell, any creature that is completely inside the cage's area is trapped. Creatures only partially within the area, or those too large to fit inside the area, are pushed away from the center of the area until they are completely outside the area.\nA creature inside the cage can't leave it by nonmagical means. If the creature tries to use teleportation or interplanar travel to leave the cage, it must first make a Charisma saving throw. On a success, the creature can use that magic to exit the cage. On a failure, the creature can't exit the cage and wastes the use of the spell or effect. The cage also extends into the Ethereal Plane, blocking ethereal travel.\nThis spell can't be dispelled by dispel magic.","emote":"evokes an immobile, invisible, cube-shaped prison composed of magical force springs into existence around an area","save":{"ability":"Charisma","saveSuccess":"the creature can use that magic to exit the cage"}},{"name":"Foresight","level":9,"school":"Divination","castingTime":"1 minute","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a hummingbird feather"},"duration":"8 hours","description":"You touch a willing creature and bestow a limited ability to see into the immediate future. For the duration, the target can't be surprised and has advantage on attack rolls, ability checks, and saving throws. Additionally, other creatures have disadvantage on attack rolls against the target for the duration.\nThis spell immediately ends if you cast it again before its duration ends.","emote":"bestows a limited ability to see into the immediate future upon a creature"},{"name":"Freedom of Movement","level":4,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a leather strap, bound around the arm or a similar appendage"},"duration":"1 hour","description":"You touch a willing creature. For the duration, the target's movement is unaffected by difficult terrain, and spells and other magical effects can neither reduce the target's speed nor cause the target to be paralyzed or restrained.\nThe target can also spend 5 feet of movement to automatically escape from nonmagical restraints, such as manacles or a creature that has it grappled. Finally, being underwater imposes no penalties on the target's movement or attacks.","emote":"alters a creature to be as nimble as a cat"},{"name":"Gaseous Form","level":3,"school":"Transmutation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of gauze and a wisp of smoke"},"concentration":true,"duration":"up to 1 hour","description":"You transform a willing creature you touch, along with everything it's wearing and carrying, into a misty cloud for the duration. The spell ends if the creature drops to 0 hit points. An incorporeal creature isn't affected.\nWhile in this form, the target's only method of movement is a flying speed of 10 feet. The target can enter and occupy the space of another creature. The target has resistance to nonmagical damage, and it has advantage on Strength, Dexterity, and Constitution saving throws. The target can pass through small holes, narrow openings, and even mere cracks, though it treats liquids as though they were solid surfaces. The target can't fall and remains hovering in the air even when stunned or otherwise incapacitated.\nWhile in the form of a misty cloud, the target can't talk or manipulate objects, and any objects it was carrying or holding can't be dropped, used, or otherwise interacted with. The target can't attack or cast spells.","emote":"transforms a creature, along with everything it's wearing and carrying, into a misty cloud"},{"name":"Gate","level":9,"school":"Conjuration","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a diamond worth at least 5,000gp","materialCost":5000},"concentration":true,"duration":"up to 1 minute","description":"You conjure a portal linking an unoccupied space you can see within range to a precise location on a different plane of existence. The portal is a circular opening, which you can make 5 to 20 feet in diameter. You can orient the portal in any direction you choose. The portal lasts for the duration.\nThe portal has a front and a back on each plane where it appears. Travel through the portal is possible only by moving through its front. Anything that does so is instantly transported to the other plane, appearing in the unoccupied space nearest to the portal.\nDeities and other planar rulers can prevent portals created by this spell from opening in their presence or anywhere within their domains.\nWhen you cast this spell, you can speak the name of a specific creature (a pseudonym, title, or nickname doesn't work). If that creature is on a plane other than the one you are on, the portal opens in the named creature's immediate vicinity and draws the creature through it to the nearest unoccupied space on your side of the portal. You gain no special power over the creature, and it is free to act as the DM deems appropriate. It might leave, attack you, or help you.","emote":"conjures a portal linking an unoccupied space you can see within range to a precise location on a different plane of existence."},{"name":"Geas","level":5,"school":"Enchantment","castingTime":"1 minute","range":"60 feet","components":{"verbal":true},"duration":"30 days","description":"You place a magical command on a creature that you can see within range, forcing it to carry out some service or refrain from some action or course of activity as you decide. If the creature can understand you, it must succeed on a Wisdom saving throw or become charmed by you for the duration. While the creature is charmed by you, it takes 5d10 psychic damage each time it acts in a manner directly counter to your instructions, but no more than once each day. A creature that can't understand you is unaffected by the spell.\nYou can issue any command you choose, short of an activity that would result in certain death. Should you issue a suicidal command, the spell ends.\nYou can end the spell early by using an action to dismiss it. A remove curse, greater restoration, or wish spell also ends it.","higherLevel":"When you cast this spell using a spell slot of 7th or 8th level, the duration is 1 year. When you cast this spell using a spell slot of 9th level, the spell lasts until it is ended by one of the spells mentioned above.","emote":"place a magical command on a creature, forcing it to carry out some service or refrain from some action or course of activity as you decide","save":{"ability":"Wisdom"}},{"name":"Gentle Repose","level":2,"school":"Necromancy","ritual":true,"castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of salt and one copper piece placed on each of the corpse's eyes, which must remain there for the duration"},"duration":"10 days","description":"You touch a corpse or other remains. For the duration, the target is protected from decay and can't become undead.\nThe spell also effectively extends the time limit on raising the target from the dead, since days spent under the influence of this spell don't count against the time limit of spells such as raise dead.","emote":"preserves a corpse"},{"name":"Giant Insect","level":4,"school":"Transmutation","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 10 minutes","description":"You transform up to ten centipedes, three spiders, five wasps, or one scorpion within range into giant versions of their natural forms for the duration. A centipede becomes a giant centipede, a spider becomes a giant spider, a wasp becomes a giant wasp, and a scorpion becomes a giant scorpion.\nEach creature obeys your verbal commands, and in combat, they act on your turn each round. The DM has the statistics for these creatures and resolves their actions and movement.\nA creature remains in its giant size for the duration, until it drops to 0 hit points, or until you use an action to dismiss the effect on it.\nThe DM might allow you to choose different targets. For example, if you transform a bee, its giant version might have the same statistics as a giant wasp.","emote":"transmutes insects into giant versions of their natural forms"},{"name":"Glibness","level":8,"school":"Transmutation","castingTime":"1 action","range":"Self","components":{"verbal":true},"duration":"1 hour","description":"Until the spell ends, when you make a Charisma check, you can replace the number you roll with a 15. Additionally, no matter what you say, magic that would determine if you are telling the truth indicates that you are being truthful.","emote":"'s speech becomes fluent and more believable"},{"name":"Globe of Invulnerability","level":6,"school":"Abjuration","castingTime":"1 action","range":"Self (10-foot radius)","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a glass or crystal bead that shatters when the spell ends"},"concentration":true,"duration":"up to 1 minute","description":"An immobile, faintly shimmering barrier springs into existence in a 10-foot radius around you and remains for the duration.\nAny spell of 5th level or lower cast from outside the barrier can't affect creatures or objects within it, even if the spell is cast using a higher level spell slot. Such a spell can target creatures and objects within the barrier, but the spell has no effect on them. Similarly, the area within the barrier is excluded from the areas affected by such spells.","higherLevel":"When you cast this spell using a spell slot of 7th level or higher, the barrier blocks spells of one level higher for each slot level above 6th.","emote":"creates an immobile, faintly shimmering barrier"},{"name":"Glyph of Warding","level":3,"school":"Abjuration","castingTime":"1 hour","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"incense and powdered diamond worth at least 200 gp, the spell consumes","materialCost":200},"duration":"Until dispelled or triggered","description":"When you cast this spell, you inscribe a glyph that harms other creatures, either upon a surface (such as a table or a section of floor or wall) or within an object that can be closed (such as a book, a scroll, or a treasure chest) to conceal the glyph. The glyph can cover an area no larger than 10 feet in diameter. If the sur-face or object is moved more than 10 feet from where you cast this spell, the glyph is broken, and the spell ends without being triggered.\nThe glyph is nearly invisible and requires a successful Intelligence (Investigation) check against your spell save DC to be found.\nYou decide what triggers the glyph when you cast the spell. For glyphs inscribed on a surface, the most typical triggers include touching or standing on the glyph, removing another object covering the glyph, approaching within a certain distance of the glyph, or manipulating the object on which the glyph is inscribed. For glyphs inscribed within an object, the most commontriggers include opening that object, approaching within a certain distance of the object, or seeing or reading the glyph. Once a glyph is triggered, this spell ends.\nYou can further refine the trigger so the spell activates only under certain circumstances or according to physical characteristics (such as height or weight), creature kind (for example, the ward could be set to affect aberrations or drow), or alignment. You can also set conditions for creatures that don't trigger the glyph, such as those w ho say a certain password.\nWhen you inscribe the glyph, choose explosive runes or a spell glyph.\nExplosive Runes. When triggered, the glyph erupts with magical energy in a 20-foot-radius sphere centered on the glyph. The sphere spreads around corners. Each creature in the area must make a Dexterity saving throw. A creature takes 5d8 acid, cold, fire, lightning, or thunder damage on a failed saving throw (your choice when you create the glyph), or half as much damage on a successful one.\nSpell Glyph. You can store a prepared spell of 3rd level or lower in the glyph by casting it as part of creating the glyph. The spell must target a single creature or an area. The spell being stored has no immediate effect when cast in this way. When the glyph is triggered, the stored spell is cast. If the spell has a target, it targets the creature that triggered the glyph. If the spell affects an area, the area is centered on that creature. If the spell summons hostile creatures or creates harmful objects or traps, they appear as close as possible to the intruder and attack it. If the spell requires concentration, it lasts until the end of its full duration.","higherLevel":"when you cast this spell using a spell slot of 4th level or higher, the damage of an explosive runes glyph increases by 1d8 for each slot level above 3rd. If you create a spell glyph, you can store any spell of up to the same level as the slot you use for the glyph of warding.","emote":"inscribes a glyph that harms other creatures, either upon a surface (such as a table or a section of floor or wall) or within an object that can be closed (such as a book, a scroll, or a treasure chest) to conceal the glyph"},{"name":"Goodberry","level":1,"school":"Transmutation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a sprig of mistletoe"},"duration":"Instantaneous","description":"Up to ten berries appear in your hand and are infused with magic for the duration. A creature can use its action to eat one berry. Eating a berry restores 1 hit point, and the berry provides enough nourishment to sustain a creature for a day.\nThe berries lose their potency if they have not been consumed within 24 hours of the casting of this spell.","emote":"conjures goodberries"},{"name":"Grease","level":1,"school":"Conjuration","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of pork rind or butter"},"duration":"1 minute","description":"Slick grease covers the ground in a 10-foot square centered on a point within range and turns it into difficult terrain for the duration.\nWhen the grease appears, each creature standing in its area must succeed on a Dexterity saving throw or fall prone. A creature that enters the area or ends its turn there must also succeed on a Dexterity saving throw or fall prone.","emote":"creates slick grease that covers the ground","save":{"ability":"Dexterity"}},{"name":"Greater Invisibility","level":4,"school":"Illusion","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"You or a creature you touch becomes invisible until the spell ends. Anything the target is wearing or carrying is invisible as long as it is on the target's person.","emote":"touches a creature who becomes invisible"},{"name":"Greater Restoration","level":5,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"diamond dust worth at least 100gp, which the spell consumes","materialCost":100},"duration":"Instantaneous","description":"You imbue a creature you touch with positive energy to undo a debilitating effect. You can reduce the target's exhaustion level by one, or end one of the following effects on the target:\n- One effect that charmed or petrified the target\n- One curse, including the target's attunement to a cursed magic item\n- Any reduction to one of the target's ability scores\n- One effect reducing the target's hit point maximum","emote":"imbuse a creature with positive energy to undo a debilitating effect"},{"name":"Guardian of Faith","level":4,"school":"Conjuration","castingTime":"1 action","range":"30 feet","components":{"verbal":true},"duration":"8 hours","description":"A Large spectral guardian appears and hovers for the duration in an unoccupied space of your choice that you can see within range. The guardian occupies that space and is indistinct except for a gleaming sword and shield emblazoned with the symbol of your deity.\nAny creature hostile to you that moves to a space within 10 feet of the guardian for the first time on a turn must succeed on a Dexterity saving throw. The creature takes 20 radiant damage on a failed save, or half as much damage on a successful one. The guardian vanishes when it has dealt a total of 60 damage.","emote":"conjures a Large spectral guardian that hovers","save":{"ability":"Dexterity","damage":"20","damageType":"radiant","saveSuccess":"half damage"}},{"name":"Guards and Wards","level":6,"school":"Abjuration","castingTime":"10 minutes","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"burning incense, a small measure of brimstone and oil, a knotted string, a small amount of umber hulk blood, and a small silver rod worth at least 10 gp","materialCost":10},"duration":"24 hours","description":"You create a ward that protects up to 2,500 square feet of floor space (an area 50 feet square, or one hundred 5-foot squares or twenty-five 10-foot squares). The warded area can be up to 20 feet tall, and shaped as you desire. You can ward several stories of a stronghold by dividing the area among them, as long as you can walk into each contiguous area while you are casting the spell.\nWhen you cast this spell, you can specify individuals that are unaffected by any or all of the effects that you choose. You can also specify a password that, when spoken aloud, makes the speaker immune to these effects.\nGuards and wards creates the following effects within the warded area.\nCorridors. Fog fills all the warded corridors, making them heavily obscured. In addition, at each intersection or branching passage offering a choice of direction, there is a 50% chance that a creature other than you will believe it is going in the opposite direction from the one it chooses.\nDoors. All doors in the warded area are magically locked, as if sealed by an arcane lock spell. In addition, you can cover up to ten doors with an illusion (equivalent to the illusory object function of the minor illusion spell) to make them appear as plain sections of wall. \nStairs. Webs fill all stairs in the warded area from top to bottom, as the web spell. These strands regrow in 10 minutes if they are burned or torn away while guards and wards lasts.\nOther Spell Effect. You can place your choice of one of the following magical effects within the warded area of the stronghold.\n- Place dancing lights in four corridors. You can design nate a simple program that the lights repeat as long as guards and wards lasts.\n- Place magic mouth in two locations.\n- Place stinking cloud in two locations. The vapors appear in the places you designate; they return within 10 minutes if dispersed by wind while guards and wards lasts.\n- Place a constant gust of wind in one corridor or room.\n- Place a suggestion in one location. You select an area of up to 5 feet square, and any creature that enters or passes through the area receives the suggestion mentally.\nThe whole warded area radiates magic. A dispel magic cast on a specific effect, if successful, removes only that effect.\nYou can create a permanently guarded and warded structure by casting this spell there every day for one year.","emote":"creates a ward that protects"},{"name":"Guidance","level":0,"school":"Divination","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"You touch one willing creature. Once before the spell ends, the target can roll a d4 and add the number rolled to one ability check of its choice. It can roll the die before or after making the ability check. The spell then ends.","emote":"is blessed with divine guidance"},{"name":"Guiding Bolt","level":1,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"duration":"1 round","description":"A flash of light streaks toward a creature of your choice within range. Make a ranged spell attack against the target. On a hit, the target takes 4d6 radiant damage, and the next attack roll made against this target before the end of your next turn has advantage, thanks to the mystical dim light glittering on the target until then.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d6 for each slot level above 1st.","emote":"evokes a flash of light that streaks toward a creature","attack":{"type":"ranged","damage":"4d6","damageType":"radiant","higherLevelDice":1}},{"name":"Gust of Wind","level":2,"school":"Evocation","castingTime":"1 action","range":"Self (60-foot line)","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a legume seed"},"concentration":true,"duration":"up to 1 minute","description":"A line of strong wind 60 feet long and 10 feet wide blasts from you in a direction you choose for the spell's duration. Each creature that starts its turn in the line must succeed on a Strength saving throw or be pushed 15 feet away from you in a direction following the line.\nAny creature in the line must spend 2 feet of movement for every 1 foot it moves when moving closer to you.\nThe gust disperses gas or vapor, and it extinguishes candles, torches, and similar unprotected flames in the area. It causes protected flames, such as those of lanterns, to dance wildly and has a 50% chance to extinguish them.\nAs a bonus action on each of your turns before the spell ends, you can change the direction in which the line blasts from you.","emote":"blasts out a line of strong wind","save":{"ability":"Strength"}},{"name":"Hallow","level":5,"school":"Evocation","castingTime":"24 hours","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"herbs, oils, and incense worth at least 1,000 gp, which the spell consumes","materialCost":1000},"duration":"Until dispelled","description":"You touch a point and infuse an area around it with holy (or unholy) power. The area can have a radius up to 60 feet, and the spell fails if the radius includes an area already under the effect a hallow spell. The affected area is subject to the following effects.\nFirst, celestials, elementals, fey, fiends, and undead can't enter the area, nor can such creatures charm, frighten, or possess creatures within it. Any creature charmed, frightened, or possessed by such a creature is no longer charmed, frightened, or possessed upon entering the area. You can exclude one or more of those types of creatures from this effect.\nSecond, you can bind an extra effect to the area. Choose the effect from the following list, or choose an effect offered by the DM. Some of these effects apply to creatures in the area; you can designate whether the effect applies to all creatures, creatures that follow a specific deity or leader, or creatures of a specific sort, such as ores or trolls. When a creature that would be affected enters the spell's area for the first time on a turn or starts its turn there, it can make a Charisma saving throw. On a success, the creature ignores the extra effect until it leaves the area.\nCourage. Affected creatures can't be frightened while in the area.\nDarkness. Darkness fills the area. Normal light, as well as magical light created by spells of a lower level than the slot you used to cast this spell, can't illuminate the area.\nDaylight. Bright light fills the area. Magical darkness created by spells of a lower level than the slot you used to cast this spell can't extinguish the light.\nEnergy Protection. Affected creatures in the area have resistance to one damage type of your choice, except for bludgeoning, piercing, or slashing.\nEnergy Vulnerability. Affected creatures in the area have vulnerability to one damage type of your choice, except for bludgeoning, piercing, or slashing.\nEverlasting Rest. Dead bodies interred in the area can't be turned into undead.\nExtradimensional Interference. Affected creatures can't move or travel using teleportation or by extradimensional or interplanar means.\nFear. Affected creatures are frightened while in the area.\nSilence. No sound can emanate from within the area, and no sound can reach into it.\nTongues. Affected creatures can communicate with any other creature in the area, even if they don't share a common language.","emote":"infuses an area around a point with holy (or unholy) power"},{"name":"Hallucinatory Terrain","level":4,"school":"Illusion","castingTime":"10 minutes","range":"300 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a stone, a twig, and a bit of green plant.\nYou make natural terrain in a 150-foot cube in range look, sound, and smell like some other sort of natural terrain. Thus, open fields or a road can be made to resemble a swamp, hill, crevasse, or some other difficult or impassable terrain. A pond can be made to seem like a grassy meadow, a precipice like a gentle slope, or a rock-strewn gully like a wide and smooth road. Manufactured structures, equipment, and creatures within the area aren't changed in appearance"},"duration":"24 hours","description":"You make natural terrain in a 150-foot cube in range look, sound, and smell like some other sort of natural terrain. Thus, open fields or a road can be made to resemble a swamp, hill, crevasse, or some other difficult or impassable terrain. A pond can be made to seem like a grassy meadow, a precipice like a gentle slope, or a rock-strewn gully like a wide and smooth road. Manufactured structures, equipment, and creatures within the area aren't changed in appearance.\nThe tactile characteristics of the terrain are unchanged, so creatures entering the area are likely to see through the illusion. If the difference isn't obvious by touch, a creature carefully examining the illusion can attempt an Intelligence (Investigation) check against your spell save DC to disbelieve it. A creature who discerns the illusion for what it is, sees it as a vague image superimposed on the terrain.","emote":"makes natural terrain look, sound, and smell like some other sort of natural terrain"},{"name":"Harm","level":6,"school":"Necromancy","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You unleash a virulent disease on a creature that you can see within range. The target must make a Constitution saving throw. On a failed save, it takes 14d6 necrotic damage, or half as much damage on a successful save. The damage can't reduce the target's hit points below 1. If the target fails the saving throw, its hit point maximum is reduced for 1 hour by an amount equal to the necrotic damage it took. Any effect that removes a disease allows a creature's hit point maximum to return to normal before that time passes.","emote":"unleashes a virulent disease on a creature","save":{"ability":"Constitution","damage":"14d6","damageType":"necrotic","saveSuccess":"half damage"}},{"name":"Haste","level":3,"school":"Transmutation","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a shaving of licorice root"},"concentration":true,"duration":"up to 1 minute","description":"Choose a willing creature that you can see within range. Until the spell ends, the target's speed is doubled, it gains a +2 bonus to AC, it has advantage on Dexterity saving throws, and it gains an additional action on each of its turns. That action can be used only to take the Attack (one weapon attack only), Dash, Disengage, Hide, or Use an Object action.\nWhen the spell ends, the target can't move or take actions until after its next turn, as a wave of lethargy sweeps over it.","emote":"transmutes a creature to move with lightning speed"},{"name":"Heal","level":6,"school":"Evocation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"Choose a creature that you can see within range. A surge of positive energy washes through the creature, causing it to regain 70 hit points. This spell also ends blindness, deafness, and any diseases affecting the target. This spell has no effect on constructs or undead.","higherLevel":"When you cast this spell using a spell slot of 7th level or higher, the amount of healing increases by 10 for each slot level above 6th.","emote":"heals an ally's wounds","heal":{"bonus":70,"higherLevelAmount":10}},{"name":"Healing Word","level":1,"school":"Evocation","castingTime":"1 bonus action","range":"60 feet","components":{"verbal":true},"duration":"Instantaneous","description":"A creature of your choice that you can see within range regains hit points equal to 1d4 + your spellcasting ability modifier. This spell has no effect on undead or constructs.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, the healing increases by 1d4 for each slot level above 1st.","emote":"heals an ally's wounds","heal":{"heal":"1d4","castingStat":true,"higherLevelDice":1}},{"name":"Heat Metal","level":2,"school":"Transmutation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a piece of iron and a flame"},"concentration":true,"duration":"up to 1 minute","description":"Choose a manufactured metal object, such as a metal weapon or a suit of heavy or medium metal armor, that you can see within range. You cause the object to glow red-hot. Any creature in physical contact with the object takes 2d8 fire damage when you cast the spell. Until the spell ends, you can use a bonus action on each of your subsequent turns to cause this damage again.\nIf a creature is holding or wearing the object and takes the damage from it, the creature must succeed on a Constitution saving throw or drop the object if it can. If it doesn't drop the object, it has disadvantage on attack rolls and ability checks until the start of your next turn.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, the damage increases by 1d8 for each slot level above 2nd.","emote":"causes an object to glow red-hot","save":{"ability":"Constitution"},"damage":{"damage":"2d8","damageType":"fire","higherLevelDice":1}},{"name":"Hellish Rebuke","level":1,"school":"Evocation","castingTime":"1 reaction","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You point your finger, and the creature that damaged you is momentarily surrounded by hellish flames. The creature must make a Dexterity saving throw. It takes 2d10 fire damage on a failed save, or half as much damage on a successful one.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d10 for each slot level above 1st.","emote":"rebukes {{GENDER_PRONOUN_HIS_HER}} attacker with hellish flames","save":{"ability":"Dexterity","damage":"2d10","damageType":"fire","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Heroism","level":1,"school":"Enchantment","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"A willing creature you touch is imbued with bravery. Until the spell ends, the creature is immune to being frightened and gains temporary hit points equal to your spellcasting ability modifier at the start of each of its turns. When the spell ends, the target loses any remaining temporary hit points from this spell.","emote":"imbues a creature with bravery"},{"name":"Hold Monster","level":5,"school":"Enchantment","castingTime":"1 action","range":"90 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a small piece of iron"},"concentration":true,"duration":"up to 1 minute","description":"Choose a creature that you can see within range. The target must succeed on a Wisdom saving throw or be paralyzed for the duration. This spell has no effect on undead. At the end of each of its turns, the target can make another Wisdom saving throw. On a success, the spell ends on the target.","higherLevel":"When you cast this spell using a spell slot of 6th level or higher, you can target one additional creature for each slot level above 5th. The creatures must be within 30 feet of each other when you target them.","emote":"compels a creature to be unable to move","save":{"ability":"Wisdom"}},{"name":"Hold Person","level":2,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a small, straight piece of iron"},"concentration":true,"duration":"up to 1 minute","description":"Choose a humanoid that you can see within range. The target must succeed on a Wisdom saving throw or be paralyzed for the duration. At the end of each of its turns, the target can make another Wisdom saving throw. On a success, the spell ends on the target.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, you can target one additional humanoid for each slot level above 2nd. The humanoids must be within 30 feet of each other when you target them.","emote":"enchants a creature to be unable to move","save":{"ability":"Wisdom"}},{"name":"Holy Aura","level":8,"school":"Abjuration","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a tiny reliquary worth at least 1,000 gp containing a sacred relic, such as a scrap of cloth from a saint's robe or a piece of parchment from a religious text","materialCost":1000},"concentration":true,"duration":"up to 1 minute","description":"Divine light washes out from you and coalesces in a soft radiance in a 30-foot radius around you. Creatures of your choice in that radius when you cast this spell shed dim light in a 5-foot radius and have advantage on all saving throws, and other creatures have disadvantage on attack rolls against them until the spell ends. In addition, when a fiend or an undead hits an affected creature with a melee attack, the aura flashes with brilliant light. The attacker must succeed on a Constitution saving throw or be blinded until the spell ends.","emote":"causes divine light to wash out from {{GENDER_PRONOUN_HIM_HER}} which coalesces in a soft radiance around {{GENDER_PRONOUN_HIM_HER}}","save":{"ability":"Constitution"}},{"name":"Hunter's Mark","level":1,"school":"Divination","castingTime":"1 bonus action","range":"90 feet","components":{"verbal":true},"concentration":true,"duration":"up to 1 hour","description":"You choose a creature you can see within range and mystically mark it as your quarry. Until the spell ends, you deal an extra 1d6 damage to the target whenever you hit it with a weapon attack, and you have advantage on any Wisdom (Perception) or Wisdom (Survival) check you make to find it. If the target drops to 0 hit points before this spell ends, you can use a bonus action on a subsequent turn of yours to mark a new creature.","higherLevel":"When you cast this spell using a spell slot of 3rd or 4th level, you can maintain your concentration on the spell for up to 8 hours. When you use a spell slot of 5th level or higher, you can maintain your concentration on the spell for up to 24 hours.","emote":"mystically marks a target as {{GENDER_PRONOUN_HIS_HER}} quarry","damage":{"damage":"1d6"}},{"name":"Hypnotic Pattern","level":3,"school":"Illusion","castingTime":"1 action","range":"120 feet","components":{"somatic":true,"material":true,"materialMaterial":"a glowing stick of incense or a crystal vial filled with phosphorescent material"},"concentration":true,"duration":"up to 1 minute","description":"You create a twisting pattern of colors that weaves through the air inside a 30-foot cube within range. The pattern appears for a moment and vanishes. Each creature in the area who sees the pattern must make a Wisdom saving throw. On a failed save, the creature becomes charmed for the duration. While charmed by this spell, the creature is incapacitated and has a speed of 0.\nThe spell ends for an affected creature if it takes any damage or if someone else uses an action to shake the creature out of its stupor.","emote":"creates a twisting pattern of colors that weaves through the air. The pattern appears for a moment and vanishes.","save":{"ability":"Wisdom"}},{"name":"Ice Storm","level":4,"school":"Evocation","castingTime":"1 action","range":"300 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of dust and a few drops of water"},"duration":"Instantaneous","description":"A hail of rock-hard ice pounds to the ground in a 20-foot-radius, 40-foot-high cylinder centered on a point within range. Each creature in the cylinder must make a Dexterity saving throw. A creature takes 2d8 bludgeoning damage and 4d6 cold damage on a failed save, or half as much damage on a successful one.\nHailstones turn the storm's area of effect into difficult terrain until the end of your next turn.","higherLevel":"When you cast this spell using a spell slot of 5th level or higher, the bludgeoning damage increases by 1d8 for each slot level above 4th.","emote":"causes a hail of rock-hard ice pounds to the ground","save":{"ability":"Dexterity","damage":"2d8","damageType":"bludgeoning","secondaryDamage":"4d6","secondaryDamageType":"cold","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Identify","level":1,"school":"Divination","ritual":true,"castingTime":"1 minute","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pearl worth at least 100 gp and an owl feather","materialCost":100},"duration":"Instantaneous","description":"You choose one object that you must touch throughout the casting of the spell. If it is a magic item or some other magic-imbued object, you learn its properties and how to use them, whether it requires attunement to use, and how many charges it has, if any. You learn whether any spells are affecting the item and what they are. If the item was created by a spell, you learn which spell created it.\nIf you instead touch a creature throughout the casting, you learn what spells, if any, are currently affecting it.","emote":"identifies an object"},{"name":"Illusory Script","level":1,"school":"Illusion","ritual":true,"castingTime":"1 minute","range":"Touch","components":{"somatic":true,"material":true,"materialMaterial":"a lead-based ink worth at least 10gp, which this spell consumes","materialCost":10},"duration":"10 days","description":"You write on parchment, paper, or some other suitable writing material and imbue it with a potent illusion that lasts for the duration.\nTo you and any creatures you designate when you cast the spell, the writing appears normal, written in your hand, and conveys whatever meaning you intended when you wrote the text. To all others, the writing appears as if it were written in an unknown or magical script that is unintelligible. Alternatively, you can cause the writing to appear to be an entirely different message, written in a different hand and language, though the language must be one you know.\nShould the spell be dispelled, the original script and the illusion both disappear.\nA creature with truesight can read the hidden message.","emote":"writes words imbued with a potent illusion"},{"name":"Imprisonment","level":9,"school":"Abjuration","castingTime":"1 minute","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a vellum depiction or a carved statuette in the likeness of the target, and a special component that varies according to the version of the spell you choose, worth at least 500gp per Hit Die of the target","materialCost":500},"duration":"Until dispelled","description":"You create a magical restraint to hold a creature that you can see within range. The target must succeed on a Wisdom saving throw or be bound by the spell; if it succeeds, it is immune to this spell if you cast it again. While affected by this spell, the creature doesn't need to breathe, eat, or drink, and it doesn't age. Divination spells can't locate or perceive the target.\nWhen you cast the spell, you choose one of the following forms of imprisonment.\nBurial. The target is entombed far beneath the earth in a sphere of magical force that is just large enough to contain the target. Nothing can pass through the sphere, nor can any creature teleport or use planar travel to get into or out of it.\nThe special component for this version of the spell is a small mithral orb.\nChaining. Heavy chains, firmly rooted in the ground, hold the target in place. The target is restrained until the spell ends, and it can't move or be moved by any means until then.\nThe special component for this version of the spell is a fine chain of precious metal.\nHedged Prison. The spell transports the target into a tiny demiplane that is warded against teleportation and planar travel. The demiplane can be a labyrinth, a cage, a tower, or any similar confined structure or area of your choice.\nThe special component for this version of the spell is a miniature representation of the prison made from jade.\nMinimus Containment. The target shrinks to a height of 1 inch and is imprisoned inside a gemstone or similar object. Light can pass through the gemstone normally (allowing the target to see out and other creatures to see in), but nothing else can pass through, even by means of teleportation or planar travel. The gemstone can't be cut or broken while the spell remains in effect.\nThe special component for this version of the spell is a large, transparent gemstone, such as a corundum, diamond, or ruby.\nSlumber. The target falls asleep and can't be awoken.\nThe special component for this version of the spell consists of rare soporific herbs.\nEnding the Spell. During the casting of the spell, in any of its versions, you can specify a condition that will cause the spell to end and release the target. The condition can be as specific or as elaborate as you choose, but the DM must agree that the condition is reasonable and has a likelihood of coming to pass. The conditions can be based on a creature's name, identity, or deity but otherwise must be based on observable actions or qualities and not based on intangibles such as level, class, or hit points.\nA dispel magic spell can end the spell only if it is cast as a 9th-level spell, targeting either the prison or the special component used to create it.\nYou can use a particular special component to create only one prison at a time. If you cast the spell again using the same component, the target of the first casting is immediately freed from its binding.","emote":"creates a magical restraint to hold a creature","save":{"ability":"Wisdom","saveSuccess":"it is immune to this spell if you cast it again"}},{"name":"Incendiary Cloud","level":8,"school":"Conjuration","castingTime":"1 action","range":"150 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"A swirling cloud of smoke shot through with white-hot embers appears in a 20-foot-radius sphere centered on a point within range. The cloud spreads around corners and is heavily obscured. It lasts for the duration or until a wind of moderate or greater speed (at least 10 miles per hour) disperses it.\nWhen the cloud appears, each creature in it must make a Dexterity saving throw. A creature takes 10d8 fire damage on a failed save, or half as much damage on a successful one. A creature must also make this saving throw when it enters the spell's area for the first time on a turn or ends its turn there.\nThe cloud moves 10 feet directly away from you in a direction that you choose at the start of each of your turns.","emote":"conjures a swirling cloud of smoke shot through with white-hot embers","save":{"ability":"Dexterity","damage":"10d8","damageType":"fire","saveSuccess":"half damage"}},{"name":"Inflict Wounds","level":1,"school":"Necromancy","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"Make a melee spell attack against a creature you can reach. On a hit, the target takes 3d10 necrotic damage.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d10 for each slot level above 1st.","emote":"inflicts wounds","attack":{"type":"melee","damage":"3d10","damageType":"necrotic","higherLevelDice":1}},{"name":"Insect Plague","level":5,"school":"Conjuration","castingTime":"1 action","range":"300 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a few grains of sugar, some kernels of grain, and a smear of fat"},"concentration":true,"duration":"up to 10 minutes","description":"Swarming, biting locusts fill a 20-foot-radius sphere centered on a point you choose within range. The sphere spreads around corners. The sphere remains for the duration, and its area is lightly obscured. The sphere's area is difficult terrain.\nWhen the area appears, each creature in it must make a Constitution saving throw. A creature takes 4d10 piercing damage on a failed save, or half as much damage on a successful one. A creature must also make this saving throw when it enters the spell's area for the first time on a turn or ends its turn there.","higherLevel":"When you cast this spell using a spell slot of 6th level or higher, the damage increases by 1d10 for each slot level above 5th.","emote":"conjures swarming, biting locusts","save":{"ability":"Constitution","damage":"4d10","damageType":"piercing","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Invisibility","level":2,"school":"Illusion","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"an eyelash encased in gum arabic"},"concentration":true,"duration":"up to 1 hour","description":"A creature you touch becomes invisible until the spell ends. Anything the target is wearing or carrying is invisible as long as it is on the target's person. The spell ends for a target that attacks or casts a spell.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.","emote":"touches a creature who becomes invisible"},{"name":"Jump","level":1,"school":"Transmutation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a grasshopper's hind leg"},"duration":"1 minute","description":"You touch a creature. The creature's jump distance is tripled until the spell ends.","emote":"gains the ability to jump far and high"},{"name":"Knock","level":2,"school":"Transmutation","castingTime":"1 action","range":"60 feet","components":{"verbal":true},"duration":"Instantaneous","description":"Choose an object that you can see within range. The object can be a door, a box, a chest, a set of manacles, a padlock, or another object that contains a mundane or magical means that prevents access.\nA target that is held shut by a mundane lock or that is stuck or barred becomes unlocked, unstuck, or unbarred. If the object has multiple locks, only one of them is unlocked.\nIf you choose a target that is held shut with arcane lock, that spell is suppressed for 10 minutes, during which time the target can be opened and shut normally.\nWhen you cast the spell, a loud knock, audible from as far away as 300 feet, emanates from the target object.","emote":"causes an object to magically open with a loud knock"},{"name":"Legend Lore","level":5,"school":"Divination","castingTime":"10 minutes","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"incense worth at least 250 gp, which the spell consumes, and four ivory strips worth 50 gp each","materialCost":25},"duration":"Instantaneous","description":"Name or describe a person, place, or object. The spell brings to your mind a brief summary of the significant lore about the thing you named. The lore might consist of current tales, forgotten stories, or even secret lore that has never been widely known. If the thing you named isn't of legendary importance, you gain no information. The more information you already have about the thing, the more precise and detailed the information you receive is.\nThe information you learn is accurate but might be couched in figurative language. For example, if you have a mysterious magic axe on hand, the spell might yield this information: \"Woe to the evildoer whose hand touches the axe, for even the haft slices the hand of the evil ones. Only a true Child of Stone, lover and beloved of Moradin, may awaken the true powers of the axe, and only with the sacred word Rudnogg on the lips.\"","emote":"names or describes a person, place or object, gaining a brief summary of the significant lore about the thing named"},{"name":"Lesser Restoration","level":2,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You touch a creature and can end either one disease or one condition afflicting it. The condition can be blinded, deafened, paralyzed, or poisoned.","emote":"ends a creature's affliction"},{"name":"Levitate","level":2,"school":"Transmutation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"either a small leather loop or a piece of golden wire bent into a cup shape with a long shank on one end"},"concentration":true,"duration":"up to 10 minutes","description":"One creature or object of your choice that you can see within range rises vertically, up to 20 feet, and remains suspended there for the duration. The spell can levitate a target that weighs up to 500 pounds. An unwilling creature that succeeds on a Constitution saving throw is unaffected.\nThe target can move only by pushing or pulling against a fixed object or surface within reach (such as a wall or a ceiling), which allows it to move as if it were climbing. You can change the target's altitude by up to 20 feet in either direction on your turn. If you are the target, you can move up or down as part of your move. Otherwise, you can use your action to move the target, which must remain within the spell's range.\nWhen the spell ends, the target floats gently to the ground if it is still aloft.","emote":"causes a creature or object to rise vertically in the air","save":{"ability":"Constitution"}},{"name":"Light","level":0,"school":"Evocation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"material":true,"materialMaterial":"a firefly or phosphorescent moss"},"duration":"1 hour","description":"You touch one object that is no larger than 10 feet in any dimension. Until the spell ends, the object sheds bright light in a 20-foot radius and dim light for an additional 20 feet. The light can be colored as you like. Completely covering the object with something opaque blocks the light. The spell ends if you cast it again or dismiss it as an action.\nIf you target an object held or worn by a hostile creature, that creature must succeed on a Dexterity saving throw to avoid the spell.","emote":"Lights an object with magical energy","save":{"ability":"Dexterity"}},{"name":"Lightning Bolt","level":3,"school":"Evocation","castingTime":"1 action","range":"Self (100-foot line)","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of fur and a rod of amber, crystal, or glass"},"duration":"Instantaneous","description":"A stroke of lightning forming a line 100 feet long and 5 feet wide blasts out from you in a direction you choose. Each creature in the line must make a Dexterity saving throw. A creature takes 8d6 lightning damage on a failed save, or half as much damage on a successful one.\nThe lightning ignites flammable objects in the area that aren't being worn or carried.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d6 for each slot level above 3rd.","emote":"blasts out a stroke a lightning in a line","save":{"ability":"Dexterity","damage":"8d6","damageType":"lightning","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Locate Animals or Plants","level":2,"school":"Divination","ritual":true,"castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of fur from a bloodhound"},"duration":"Instantaneous","description":"Describe or name a specific kind of beast or plant. Concentrating on the voice of nature in your surroundings, you learn the direction and distance to the closest creature or plant of that kind within 5 miles, if any are present.","emote":"describes or names a a specific kind of beast or plant while concentrating on the voice of nature in {{GENDER_PRONOUN_HIS_HER}} surroundings"},{"name":"Locate Creature","level":4,"school":"Divination","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of fur from a bloodhound"},"concentration":true,"duration":"up to 1 hour","description":"Describe or name a creature that is familiar to you. You sense the direction to the creature's location, as long as that creature is within 1,000 feet of you. If the creature is moving, you know the direction of its movement.\nThe spell can locate a specific creature known to you, or the nearest creature of a specific kind (such as a human or a unicorn), so long as you have seen such a creature up close—within 30 feet—at least once. If the creature you described or named is in a different form, such as being under the effects of a polymorph spell, this spell doesn't locate the creature.\nThis spell can't locate a creature if running water at least 10 feet wide blocks a direct path between you and the creature.","emote":"describes or names a creature that is familiar to {{GENDER_PRONOUN_HIS_HER}} and senses the direction to the creature's location, as long as that creature is within 1,000 feet"},{"name":"Locate Object","level":2,"school":"Divination","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a forked twig"},"concentration":true,"duration":"up to 10 minutes","description":"Describe or name an object that is familiar to you. You sense the direction to the object's location, as long as that object is within 1,000 feet of you. If the object is in motion, you know the direction of its movement.\nThe spell can locate a specific object known to you, as long as you have seen it up close—within 30 feet—at least once. Alternatively, the spell can locate the nearest object of a particular kind, such as a certain kind of apparel, jewelry, furniture, tool, or weapon.\nThis spell can't locate an object if any thickness of lead, even a thin sheet, blocks a direct path between you and the object.","emote":"describes or names an object that is familiar to {{GENDER_PRONOUN_HIS_HER}} and senses the direction to the object's location, as long as that object is within 1,000 feet"},{"name":"Longstrider","level":1,"school":"Transmutation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of dirt"},"duration":"1 hour","description":"You touch a creature. The target's speed increases by 10 feet until the spell ends.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each spell slot above 1st.","emote":"you lengthen the target's step"},{"name":"Mage Armor","level":1,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a piece of cured leather"},"duration":"8 hours","description":"You touch a willing creature who isn't wearing armor, and a protective magical force surrounds it until the spell ends. The target's base AC becomes 13 + its Dexterity modifier. The spell ends if the target dons armor or if you dismiss the spell as an action.","emote":"creates a protective magical force which surrounds the target"},{"name":"Mage Hand","level":0,"school":"Conjuration","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true},"duration":"1 minute","description":"A spectral, floating hand appears at a point you choose within range. The hand lasts for the duration or until you dismiss it as an action. The hand vanishes if it is ever more than 30 feet away from you or if you cast this spell again.\nYou can use your action to control the hand. You can use the hand to manipulate an object, open an unlocked door or container, stow or retrieve an item from an open container, or pour the contents out of a vial. You can move the hand up to 30 feet each time you use it.\nThe hand can't attack, activate magic items, or carry more than 10 pounds.","emote":"conjures a spectral, floating hand"},{"name":"Magic Circle","level":3,"school":"Abjuration","castingTime":"1 minute","range":"10 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"holy water or powdered silver and iron worth at least 100 gp, which the spell consumes","materialCost":100},"duration":"1 hour","description":"You create a 10-foot-radius, 20-foot-tall cylinder of magical energy centered on a point on the ground that you can see within range. Glowing runes appear wherever the cylinder intersects with the floor or other surface. Choose one or more of the following types of creatures: celestials, elementals, fey, fiends, or undead. The circle affects a creature of the chosen type in the following ways:\n- The creature can't willingly enter the cylinder by nonmagical means. If the creature tries to use teleportation or interplanar travel to do so, it must first succeed on a Charisma saving throw.\n- The creature has disadvantage on attack rolls against targets within the cylinder.\n- Targets within the cylinder can't be charmed, frightened, or possessed by the creature.\nWhen you cast this spell, you can elect to cause its magic to operate in the reverse direction, preventing a creature of the specified type from leaving the cylinder and protecting targets outside it.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, the duration increases by 1 hour for each slot level above 3rd.","emote":"creates a cylinder of magical energy. Glowing runes appear wherever the cylinder intersects with the floor or other surface"},{"name":"Magic Jar","level":6,"school":"Necromancy","castingTime":"1 minute","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a gem, crystal, reliquary, or some other ornamental container worth at least 500 gp","materialCost":500},"duration":"Until dispelled","description":"Your body falls into a catatonic state as your soul leaves it and enters the container you used for the spell's material component. While your soul inhabits the container, you are aware of your surroundings as if you were in the container's space. You can't move or use reactions. The only action you can take is to project your soul up to 100 feet out of the container, either returning to your living body (and ending the spell) or attempting to possess a humanoids body.\nYou can attempt to possess any humanoid within 100 feet of you that you can see (creatures warded by a protection from evil and good or magic circle spell can't be possessed). The target must make a Charisma saving throw. On a failure, your soul moves into the target's body, and the target's soul becomes trapped in the container. On a success, the target resists your efforts to possess it, and you can't attempt to possess it again for 24 hours.\nOnce you possess a creature's body, you control it. Your game statistics are replaced by the statistics of the creature, though you retain your alignment and your Intelligence, Wisdom, and Charisma scores. You retain the benefit of your own class features. If the target has any class levels, you can't use any of its class features.\nMeanwhile, the possessed creature's soul can perceive from the container using its own senses, but it can't move or take actions at all.\nWhile possessing a body, you can use your action to return from the host body to the container if it is within 100 feet of you, returning the host creature's soul to its body. If the host body dies while you're in it, the creature dies, and you must make a Charisma saving throw against your own spellcasting DC. On a success, you return to the container if it is within 100 feet of you. Otherwise, you die.\nIf the container is destroyed or the spell ends, your soul immediately returns to your body. If your body is more than 100 feet away from you or if your body is dead when you attempt to return to it, you die. If another creature's soul is in the container when it is destroyed, the creature's soul returns to its body if the body is alive and within 100 feet. Otherwise, that creature dies.\nWhen the spell ends, the container is destroyed.","emote":"'s body falls into a catatonic state as {{GENDER_PRONOUN_HIS_HER}} soul leaves it and enters the container {{GENDER_PRONOUN_HE_SHE}} used for the spell's material component","save":{"ability":"Charisma","saveSuccess":"the target resists your efforts to possess it, and you can't attempt to possess it again for 24 hours"}},{"name":"Magic Missile","level":1,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You create three glowing darts of magical force. Each dart hits a creature of your choice that you can see within range. A dart deals 1d4 + 1 force damage to its target. The darts all strike simultaneously, and you can direct them to hit one creature or several.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, the spell creates one more dart for each slot level above 1st.","emote":"hurls 3 glowing darts of magical force","damage":{"damage":"1d4","damageBonus":"1","damageType":"force"}},{"name":"Magic Mouth","level":2,"school":"Illusion","ritual":true,"castingTime":"1 minute","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a honeycomb and jade dust of at least 10 inches, the spell consumes"},"duration":"Until dispelled","description":"You implant a message within an object in range, a message that is uttered when a trigger condition is met. Choose an object that you can see and that isn't being worn or carried by another creature. Then speak the message, which must be 25 words or less, though it can be delivered over as long as 10 minutes. Finally, determine the circumstance that will trigger the spell to deliver your message.\nWhen that circumstance occurs, a magical mouth appears on the object and recites the message in your voice and at the same volume you spoke. If the object you chose has a mouth or something that looks like a mouth (for example, the mouth of a statue), the magical mouth appears there so that the words appear to come from the object's mouth. When you cast this spell, you can have the spell end after it delivers its message, or it can remain and repeat its message whenever the trigger occurs.\nThe triggering circumstance can be as general or as detailed as you like, though it must be based on visual or audible conditions that occur within 30 feet of the object. For example, you could instruct the mouth to speak when any creature moves within 30 feet of the object or when a silver bell rings within 30 feet of it.","emote":"implants a message within an object"},{"name":"Magic Weapon","level":2,"school":"Transmutation","castingTime":"1 bonus action","range":"Touch","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 hour","description":"You touch a nonmagical weapon. Until the spell ends, that weapon becomes a magic weapon with a +1 bonus to attack rolls and damage rolls.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, the bonus increases to +2. When you use a spell slot of 6th level or higher, the bonus increases to +3.","emote":"causes a weapon to glow with magic"},{"name":"Major Image","level":3,"school":"Illusion","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of fleece"},"concentration":true,"duration":"up to 10 minutes","description":"You create the image of an object, a creature, or some other visible phenomenon that is no larger than a 20-foot cube. The image appears at a spot that you can see within range and lasts for the duration. It seems completely real, including sounds, smells, and temperature appropriate to the thing depicted. You can't create sufficient heat or cold to cause damage, a sound loud enough to deal thunder damage or deafen a creature, or a smell that might sicken a creature (like a troglodyte's stench).\nAs long as you are within range of the illusion, you can use your action to cause the image to move to any other spot within range. As the image changes location, you can alter its appearance so that its movements appear natural for the image. For example, if you create an image of a creature and move it, you can alter the image so that it appears to be walking. Similarly, you can cause the illusion to make different sounds at different times, even making it carry on a conversation, for example.\nPhysical interaction with the image reveals it to be an illusion, because things can pass through it. A creature that uses its action to examine the image can determine that it is an illusion with a successful Intelligence (Investigation) check against your spell save DC. If a creature discerns the illusion for what it is, the creature can see through the image, and its other sensory qualities become faint to the creature.","higherLevel":"When you cast this spell using a spell slot of 6th level or higher, the spell lasts until dispelled, without requiring your concentration.","emote":"creates an image of an object, a creature, or some other visible phenomenon"},{"name":"Mass Cure Wounds","level":5,"school":"Evocation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"A wave of healing energy washes out from a point of your choice within range. Choose up to six creatures in a 30-foot-radius sphere centered on that point. Each target regains hit points equal to 3d8 + your spellcasting ability modifier. This spell has no effect on undead or constructs.","higherLevel":"When you cast this spell using a spell slot of 6th level or higher, the healing increases by 1d8 for each slot level above 5th.","emote":"conjures a wave of healing energy that washes out from a point","heal":{"heal":"3d8","castingStat":true,"higherLevelDice":1}},{"name":"Mass Heal","level":9,"school":"Evocation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"A flood of healing energy flows from you into injured creatures around you. You restore up to 700 hit points, divided as you choose among any number of creatures that you can see within range. Creatures healed by this spell are also cured of all diseases and any effect making them blinded or deafened. This spell has no effect on undead or constructs.","emote":"conjures a flood of healing energy that flows from {{GENDER_PRONOUN_HIM_HER}} into injured creatures around {{GENDER_PRONOUN_HIMSELF_HERSELF}}"},{"name":"Mass Healing Word","level":3,"school":"Evocation","castingTime":"1 bonus action","range":"60 feet","components":{"verbal":true},"duration":"Instantaneous","description":"As you call out words of restoration, up to six creatures of your choice that you can see within range regain hit points equal to 1d4 + your spellcasting ability modifier. This spell has no effect on undead or constructs.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, the healing increases by 1d4 for each slot level above 3rd.","emote":"calls out words of restoration","heal":{"heal":"1d4","castingStat":true,"higherLevelDice":1}},{"name":"Mass Suggestion","level":6,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"material":true,"materialMaterial":"a snake's tongue and either a bit of honeycomb or a drop of sweet oil"},"duration":"24 hours","description":"You suggest a course of activity (limited to a sentence or two) and magically influence up to twelve creatures of your choice that you can see within range and that can hear and understand you. Creatures that can't be charmed are immune to this effect. The suggestion must be worded in such a manner as to make the course of action sound reasonable. Asking the creature to stab itself, throw itself onto a spear, immolate itself, or do some other obviously harmful act automatically negates the effect of the spell.\nEach target must make a Wisdom saving throw. On a failed save, it pursues the course of action you described to the best of its ability. The suggested course of action can continue for the entire duration. If the suggested activity can be completed in a shorter time, the spell ends when the subject finishes what it was asked to do.\nYou can also specify conditions that will trigger a special activity during the duration. For example, you might suggest that a group of soldiers give all their money to the first beggar they meet. If the condition isn't met before the spell ends, the activity isn't performed.\nIf you or any of your companions damage a creature affected by this spell, the spell ends for that creature.","higherLevel":"When you cast this spell using a 7th-level spell slot, the duration is 10 days. When you use an 8th-level spell slot, the duration is 30 days. When you use a 9th-level spell slot, the duration is a year and a day.","emote":"suggests a course of activity and magically influences nearby creatures","save":{"ability":"Wisdom"}},{"name":"Maze","level":8,"school":"Conjuration","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 10 minutes","description":"You banish a creature that you can see within range into a labyrinthine demiplane. The target remains there for the duration or until it escapes the maze.\nThe target can use its action to attempt to escape. When it does so, it makes a DC 20 Intelligence check. If it succeeds, it escapes, and the spell ends (a minotaur or goristro demon automatically succeeds).\nWhen the spell ends, the target reappears in the space it left or, if that space is occupied, in the nearest unoccupied space.","emote":"banishes a creature into a labyrinthine demiplane"},{"name":"Meld into Stone","level":3,"school":"Transmutation","ritual":true,"castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"duration":"8 hours","description":"You step into a stone object or surface large enough to fully contain your body, melding yourself and all the equipment you carry with the stone for the duration. Using your movement, you step into the stone at a point you can touch. Nothing of your presence remains visible or otherwise detectable by nonmagical senses.\nWhile merged with the stone, you can't see what occurs outside it, and any Wisdom (Perception) checks you make to hear sounds outside it are made with disadvantage. You remain aware of the passage of time and can cast spells on yourself while merged in the stone. You can use your movement to leave the stone where you entered it, which ends the spell. You otherwise can't move.\nMinor physical damage to the stone doesn't harm you, but its partial destruction or a change in its shape (to the extent that you no longer fit within it) expels you and deals 6d6 bludgeoning damage to you. The stone's complete destruction (or transmutation into a different substance) expels you and deals 50 bludgeoning damage to you. If expelled, you fall prone in an unoccupied space closest to where you first entered.","emote":"steps into a stone object or surface, melding yourself and all the equipment you carry with the stone for the duration"},{"name":"Mending","level":0,"school":"Transmutation","castingTime":"1 minute","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"two lodestones"},"duration":"Instantaneous","description":"This spell repairs a single break or tear in an object you touch, such as a broken key, a torn cloak, or a leaking wineskin. As long as the break or tear is no longer than 1 foot in any dimension, you mend it, leaving no trace of the former damage.\nThis spell can physically repair a magic item or construct, but the spell can't restore magic to such an object such as a broken key, a torn cloak, or a leaking wineskin","emote":"repairs a single break or tear in an object"},{"name":"Message","level":0,"school":"Transmutation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a short piece of copper wire"},"duration":"1 round","description":"You point your finger toward a creature within range and whisper a message. The target (and only the target) hears the message and can reply in a whisper that only you can hear.\nYou can cast this spell through solid objects if you are familiar with the target and know it is beyond the barrier. Magical silence, 1 foot of stone, 1 inch of common metal, a thin sheet of lead, or 3 feet of wood blocks the spell. The spell doesn't have to follow a straight line and can travel freely around corners or through openings.","emote":"points {{GENDER_PRONOUN_HIS_HER}} finger toward a creature and whispers a message"},{"name":"Meteor Swarm","level":9,"school":"Evocation","castingTime":"1 action","range":"1 mile","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"Blazing orbs of fire plummet to the ground at four different points you can see within range. Each creature in a 40-foot-radius sphere centered on each point you choose must make a Dexterity saving throw. The sphere spreads around corners. A creature takes 20d6 fire damage and 20d6 bludgeoning damage on a failed save, or half as much damage on a successful one. A creature in the area of more than one fiery burst is affected only once.\nThe spell damages objects in the area and ignites flammable objects that aren't being worn or carried.","emote":"evokes blazing orbs of fire plummet to the ground","save":{"ability":"Dexterity","damage":"20d6","damageType":"fire","secondaryDamage":"20d6","secondaryDamageType":"bludgeoning","saveSuccess":"half damage"}},{"name":"Mind Blank","level":8,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"duration":"24 hours","description":"Until the spell ends, one willing creature you touch is immune to psychic damage, any effect that would sense its emotions or read its thoughts, divination spells, and the charmed condition. The spell even foils wish spells and spells or effects of similar power used to affect the target's mind or to gain information about the target.","emote":"wards the mind of an ally against psychic efects"},{"name":"Minor Illusion","level":0,"school":"Illusion","castingTime":"1 action","range":"30 feet","components":{"somatic":true,"material":true,"materialMaterial":"a bit of fleece"},"duration":"1 minute","description":"You create a sound or an image of an object within range that lasts for the duration. The illusion also ends if you dismiss it as an action or cast this spell again.\nIf you create a sound, its volume can range from a whisper to a scream. It can be your voice, someone else's voice, a lion's roar, a beating of drums, or any other sound you choose. The sound continues unabated throughout the duration, or you can make discrete sounds at different times before the spell ends.\nIf you create an image of an object—such as a chair, muddy footprints, or a small chest—it must be no larger than a 5-foot cube. The image can't create sound, light, smell, or any other sensory effect. Physical interaction with the image reveals it to be an illusion, because things can pass through it.\nIf a creature uses its action to examine the sound or image, the creature can determine that it is an illusion with a successful Intelligence (Investigation) check against your spell save DC. If a creature discerns the illusion for what it is, the illusion becomes faint to the creature.","emote":"creates an illusory sound or an image of an object"},{"name":"Mirage Arcane","level":7,"school":"Illusion","castingTime":"10 minutes","range":"Sight","components":{"verbal":true,"somatic":true},"duration":"10 days","description":"You make terrain in an area up to 1 mile square look, sound, smell, and even feel like some other sort of terrain. The terrain's general shape remains the same, however. Open fields or a road could be made to resemble a swamp, hill, crevasse, or some other difficult or impassable terrain. A pond can be made to seem like a grassy meadow, a precipice like a gentle slope, or a rock-strewn gully like a wide and smooth road.\nSimilarly, you can alter the appearance of structures, or add them where none are present. The spell doesn't disguise, conceal, or add creatures.\nThe illusion includes audible, visual, tactile, and olfactory elements, so it can turn clear ground into difficult terrain (or vice versa) or otherwise impede movement through the area. Any piece of the illusory terrain (such as a rock or stick) that is removed from the spell's area disappears immediately.\nCreatures with truesight can see through the illusion to the terrain's true form; however, all other elements of the illusion remain, so while the creature is aware of the illusion's presence, the creature can still physically interact with the illusion.","emote":"makes terrain look, sound, smell, and even feel like some other sort of terrain"},{"name":"Mirror Image","level":2,"school":"Illusion","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"duration":"1 minute","description":"Three illusory duplicates of yourself appear in your space. Until the spell ends, the duplicates move with you and mimic your actions, shifting position so it's impossible to track which image is real. You can use your action to dismiss the illusory duplicates.\nEach time a creature targets you with an attack during the spell's duration, roll a d20 to determine whether the attack instead targets one of your duplicates.\nIf you have three duplicates, you must roll a 6 or higher to change the attack's target to a duplicate. With two duplicates, you must roll an 8 or higher. With one duplicate, you must roll an 11 or higher. A duplicate's AC equals 10 + your Dexterity modifier. If an attack hits a duplicate, the duplicate is destroyed.\nA duplicate can be destroyed only by an attack that hits it. It ignores all other damage and effects. The spell ends when all three duplicates are destroyed.\nA creature is unaffected by this spell if it can't see, if it relies on senses other than sight, such as blindsight, or if it can perceive illusions as false, as with truesight.","emote":"causes three illusionary duplicates of {{GENDER_PRONOUN_HIMSELF_HERSELF}} to appear in {{GENDER_PRONOUN_HIS_HER}} space"},{"name":"Mislead","level":5,"school":"Illusion","castingTime":"1 action","range":"Self","components":{"somatic":true},"concentration":true,"duration":"up to 1 hour","description":"You become invisible at the same time that an illusory double of you appears where you are standing. The double lasts for the duration, but the invisibility ends if you attack or cast a spell.\nYou can use your action to move your illusory double up to twice your speed and make it gesture, speak, and behave in whatever way you choose.\nYou can see through its eyes and hear through its ears as if you were located where it is. On each of your turns as a bonus action, you can switch from using its senses to using your own, or back again. While you are using its senses, you are blinded and deafened in regard to your own surroundings.","emote":"becomes invisible at the same time that an illusory double of {{GENDER_PRONOUN_HIM_HER}} appears where {{GENDER_PRONOUN_HE_SHE}} is standing"},{"name":"Misty Step","level":2,"school":"Conjuration","castingTime":"1 bonus action","range":"Self","components":{"verbal":true},"duration":"Instantaneous","description":"Briefly surrounded by silvery mist, you teleport up to 30 feet to an unoccupied space that you can see.","emote":"becomes surrounded by a silvery mist as {{GENDER_PRONOUN_HE_SHE}} blinks out of view"},{"name":"Modify Memory","level":5,"school":"Enchantment","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"You attempt to reshape another creature's memories. One creature that you can see must make a Wisdom saving throw. If you are fighting the creature, it has advantage on the saving throw. On a failed save, the target becomes charmed by you for the duration. The charmed target is incapacitated and unaware of its surroundings, though it can still hear you. If it takes any damage or is targeted by another spell, this spell ends, and none of the target's memories are modified.\nWhile this charm lasts, you can affect the target's memory of an event that it experienced within the last 24 hours and that lasted no more than 10 minutes. You can permanently eliminate all memory of the event, allow the target to recall the event with perfect clarity and exacting detail, change its memory of the details of the event, or create a memory of some other event.\nYou must speak to the target to describe how its memories are affected, and it must be able to understand your language for the modified memories to take root. Its mind fills in any gaps in the details of your description. If the spell ends before you have finished describing the modified memories, the creature's memory isn't altered. Otherwise, the modified memories take hold when the spell ends.\nA modified memory doesn't necessarily affect how a creature behaves, particularly if the memory contradicts the creature's natural inclinations, alignment, or beliefs. An illogical modified memory, such as implanting a memory of how much the creature enjoyed dousing itself in acid, is dismissed, perhaps as a bad dream. The DM might deem a modified memory too nonsensical to affect a creature in a significant manner.\nA remove curse or greater restoration spell cast on the target restores the creature's true memory.","higherLevel":"If you cast this spell using a spell slot of 6th level or higher, you can alter the target's memories of an event that took place up to 7 days ago (6th level), 30 days ago (7th level), 1 year ago (8th level), or any time in the creature's past (9th level).","emote":"attempts to reshape another creature's memories","save":{"ability":"Wisdom"}},{"name":"Moonbeam","level":2,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"several seeds of any moonseed plant and a piece of opalescent feldspar"},"concentration":true,"duration":"up to 1 minute","description":"A silvery beam of pale light shines down in a 5-foot-radius, 40-foot-high cylinder centered on a point within range. Until the spell ends, dim light fills the cylinder.\nWhen a creature enters the spell's area for the first time on a turn or starts its turn there, it is engulfed in ghostly flames that cause searing pain, and it must make a Constitution saving throw. It takes 2d10 radiant damage on a failed save, or half as much damage on a successful one.\nA shapechanger makes its saving throw with disadvantage. If it fails, it also instantly reverts to its original form and can't assume a different form until it leaves the spell's light.\nOn each of your turns after you cast this spell, you can use an action to move the beam up to 60 feet in any direction.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, the damage increases by 1d10 for each slot level above 2nd.","emote":"evokes a silvery beam of pale light shines down in a cylinder which engulfs creatures in ghostly flames that cause searing pain","save":{"ability":"Constitution","damage":"2d10","damageType":"radiant","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Move Earth","level":6,"school":"Transmutation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"an iron blade and a small bag containing a mixture of soils—clay, loam, and sand"},"concentration":true,"duration":"up to 2 hours","description":"Choose an area of terrain no larger than 40 feet on a side within range. You can reshape dirt, sand, or clay in the area in any manner you choose for the duration. You can raise or lower the area's elevation, create or fill in a trench, erect or flatten a wall, or form a pillar. The extent of any such changes can't exceed half the area's largest dimension. So, if you affect a 40-foot square, you can create a pillar up to 20 feet high, raise or lower the square's elevation by up to 20 feet, dig a trench up to 20 feet deep, and so on. It takes 10 minutes for these changes to complete.\nAt the end of every 10 minutes you spend concentrating on the spell, you can choose a new area of terrain to affect.\nBecause the terrain's transformation occurs slowly, creatures in the area can't usually be trapped or injured by the ground's movement.\nThis spell can't manipulate natural stone or stone construction. Rocks and structures shift to accommodate the new terrain. If the way you shape the terrain would make a structure unstable, it might collapse.\nSimilarly, this spell doesn't directly affect plant growth. The moved earth carries any plants along with it.","emote":"reshapes dirt, sand, or clay in any manner you choose"},{"name":"Nondetection","level":3,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of diamond dust worth 25 gp sprinkled over the target, which the spell consumes","materialCost":25},"duration":"8 hours","description":"For the duration, you hide a target that you touch from divination magic. The target can be a willing creature or a place or an object no larger than 10 feet in any dimension. The target can't be targeted by any divination magic or perceived through magical scrying sensors.","emote":"hides target that from divination magic"},{"name":"Pass without Trace","level":2,"school":"Abjuration","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"ashes from a burned leaf of mistletoe and a sprig of spruce"},"concentration":true,"duration":"up to 1 hour","description":"A veil of shadows and silence radiates from you, masking you and your companions from detection. For the duration, each creature you choose within 30 feet of you (including you) has a +10 bonus to Dexterity (Stealth) checks and can't be tracked except by magical means. A creature that receives this bonus leaves behind no tracks or other traces of its passage.","emote":"causes a veil of shadows and silence radiates from {{GENDER_PRONOUN_HIMSELF_HERSELF}}, masking {{GENDER_PRONOUN_HIM_HER}} and {{GENDER_PRONOUN_HIS_HER}} companions from detection"},{"name":"Passwall","level":5,"school":"Transmutation","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of sesame seeds"},"duration":"1 hour","description":"A passage appears at a point of your choice that you can see on a wooden, plaster, or stone surface (such as a wall, a ceiling, or a floor) within range, and lasts for the duration. You choose the opening's dimensions: up to 5 feet wide, 8 feet tall, and 20 feet deep. The passage creates no instability in a structure surrounding it.\nWhen the opening disappears, any creatures or objects still in the passage created by the spell are safely ejected to an unoccupied space nearest to the surface on which you cast the spell.","emote":"creates a passage through an obstacles"},{"name":"Phantasmal Killer","level":4,"school":"Illusion","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"You tap into the nightmares of a creature you can see within range and create an illusory manifestation of its deepest fears, visible only to that creature. The target must make a Wisdom saving throw. On a failed save, the target becomes frightened for the duration. At the end of each of the target's turns before the spell ends, the target must succeed on a Wisdom saving throw or take 4d10 psychic damage. On a successful save, the spell ends.","higherLevel":"When you cast this spell using a spell slot of 5th level or higher, the damage increases by 1d10 for each slot level above 4th.","emote":"taps into the nightmares of a creature and creates an illusory manifestation of its deepest fears, visible only to that creature","save":{"ability":"Wisdom"}},{"name":"Phantom Steed","level":3,"school":"Illusion","ritual":true,"castingTime":"1 minute","range":"30 feet","components":{"verbal":true,"somatic":true},"duration":"1 hour","description":"A Large quasi-real, horselike creature appears on the ground in an unoccupied space of your choice within range. You decide the creature's appearance, but it is equipped with a saddle, bit, and bridle. Any of the equipment created by the spell vanishes in a puff of smoke if it is carried more than 10 feet away from the steed.\nFor the duration, you or a creature you choose can ride the steed. The creature uses the statistics for a riding horse, except it has a speed of 100 feet and can travel 10 miles in an hour, or 13 miles at a fast pace. When the spell ends, the steed gradually fades, giving the rider 1 minute to dismount. The spell ends if you use an action to dismiss it or if the steed takes any damage.","emote":"conjures a Large quasi-real, horselike creature"},{"name":"Planar Ally","level":6,"school":"Conjuration","castingTime":"10 minutes","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You beseech an otherworldly entity for aid. The being must be known to you: a god, a primordial, a demon prince, or some other being of cosmic power. That entity sends a celestial, an elemental, or a fiend loyal to it to aid you, making the creature appear in an unoccupied space within range. If you know a specific creature's name, you can speak that name when you cast this spell to request that creature, though you might get a different creature anyway (DM's choice).\nWhen the creature appears, it is under no compulsion to behave in any particular way. You can ask the creature to perform a service in exchange for payment, but it isn't obliged to do so. The requested task could range from simple (fly us across the chasm, or help us fight a battle) to complex (spy on our enemies, or protect us during our foray into the dungeon). You must be able to communicate with the creature to bargain for its services.\nPayment can take a variety of forms. A celestial might require a sizable donation of gold or magic items to an allied temple, while a fiend might demand a living sacrifice or a gift of treasure. Some creatures might exchange their service for a quest undertaken by you.\nAs a rule of thumb, a task that can be measured in minutes requires a payment worth 100 gp per minute. A task measured in hours requires 1,000 gp per hour. And a task measured in days (up to 10 days) requires 10,000 gp per day. The DM can adjust these payments based on the circumstances under which you cast the spell. If the task is aligned with the creature's ethos, the payment might be halved or even waived. Nonhazardous tasks typically require only half the suggested payment, while especially dangerous tasks might require a greater gift Creatures rarely accept tasks that seem suicidal.\nAfter the creature completes the task, or when the agreed-upon duration of service expires, the creature returns to its home plane after reporting back to you, if appropriate to the task and if possible. If you are unable to agree on a price for the creature's service, the creature immediately returns to its home plane.\nA creature enlisted to join your group counts as a member of it, receiving a full share of experience points awarded.","emote":"beseeches an otherworldly entity for aid"},{"name":"Planar Binding","level":5,"school":"Abjuration","castingTime":"1 hour","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a jewel worth at least 1,000 gp, which the spell consumes","materialCost":1000},"duration":"24 hours","description":"With this spell, you attempt to bind a celestial, an elemental, a fey, or a fiend to your service. The creature must be within range for the entire casting of the spell. (Typically, the creature is first summoned into the center of an inverted magic circle in order to keep it trapped while this spell is cast.) At the completion of the casting, the target must make a Charisma saving throw. On a failed save, it is bound to serve you for the duration. If the creature was summoned or created by another spell, that spell's duration is extended to match the duration of this spell.\nA bound creature must follow your instructions to the best of its ability. You might command the creature to accompany you on an adventure, to guard a location, or to deliver a message. The creature obeys the letter of your instructions, but if the creature is hostile to you, it strives to twist your words to achieve its own objectives. If the creature carries out your instructions completely before the spell ends, it travels to you to report this fact if you are on the same plane of existence. If you are on a different plane of existence, it returns to the place where you bound it and remains there until the spell ends.","higherLevel":"When you cast this spell using a spell slot of a higher level, the duration increases to 10 days with a 6th-level slot, to 30 days with a 7th-level slot, to 180 days with an 8th-level slot, and to a year and a day with a 9th-level spell slot.","emote":"attempts to bind a celestial, an elemental, a fey, or a fiend to {{GENDER_PRONOUN_HIS_HER}} service"},{"name":"Plane Shift","level":7,"school":"Conjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a forked, metal rod worth at least 250 gp, attuned to a particular plane of existence","materialCost":250},"duration":"Instantaneous","description":"You and up to eight willing creatures who link hands in a circle are transported to a different plane of existence. You can specify a target destination in general terms, such as the City of Brass on the Elemental Plane of Fire or the palace of Dispater on the second level of the Nine Hells, and you appear in or near that destination. If you are trying to reach the City of Brass, for example, you might arrive in its Street of Steel, before its Gate of Ashes, or looking at the city from across the Sea of Fire, at the DM's discretion.\nAlternatively, if you know the sigil sequence of a teleportation circle on another plane of existence, this spell can take you to that circle. If the teleportation circle is too small to hold all the creatures you transported, they appear in the closest unoccupied spaces next to the circle.\nYou can use this spell to banish an unwilling creature to another plane. Choose a creature within your reach and make a melee spell attack against it. On a hit, the creature must make a Charisma saving throw. If the creature fails this save, it is transported to a random location on the plane of existence you specify. A creature so transported must find its own way back to your current plane of existence.","emote":"links hands in a circle with {{GENDER_PRONOUN_HIS_HER}} allies and is transported to a different plane of existence"},{"name":"Plant Growth","level":3,"school":"Transmutation","castingTime":"1 action","range":"150 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"This spell channels vitality into plants within a specific area. There are two possible uses for the spell, granting either immediate or long-term benefits.\nIf you cast this spell using 1 action, choose a point within range. All normal plants in a 100-foot radius centered on that point become thick and overgrown. A creature moving through the area must spend 4 feet of movement for every 1 foot it moves.\nYou can exclude one or more areas of any size within the spell's area from being affected.\nIf you cast this spell over 8 hours, you enrich the land. All plants in a half-mile radius centered on a point within range become enriched for 1 year. The plants yield twice the normal amount of food when harvested.","emote":"channels vitality into plants in an area"},{"name":"Poison Spray","level":0,"school":"Conjuration","castingTime":"1 action","range":"10 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You extend your hand toward a creature you can see within range and project a puff of noxious gas from your palm. The creature must succeed on a Constitution saving throw or take 1d12 poison damage.","higherLevel":"This spell's damage increases by 1d12 when you reach 5th level (2d12), 11th level (3d12), and 17th level (4d12).","emote":"extends {{GENDER_PRONOUN_HIS_HER}} hand toward a creature and projects a puff of noxious gas from {{GENDER_PRONOUN_HIS_HER}} palm","save":{"ability":"Constitution","damage":"((@{level} + 1) / 6 + 0.5)d12","damageType":"poison"}},{"name":"Polymorph","level":4,"school":"Transmutation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a caterpillar cocoon"},"concentration":true,"duration":"up to 1 hour","description":"This spell transforms a creature that you can see within range into a new form. An unwilling creature must make a Wisdom saving throw to avoid the effect. A shapechanger automatically succeeds on this saving throw.\nThe transformation lasts for the duration, or until the target drops to 0 hit points or dies. The new form can be any beast whose challenge rating is equal to or less than the target's (or the target's level, if it doesn't have a challenge rating). The target's game statistics, including mental ability scores, are replaced by the statistics of the chosen beast. It retains its alignment and personality.\nThe target assumes the hit points of its new form. When it reverts to its normal form, the creature returns to the number of hit points it had before it transformed. If it reverts as a result of dropping to 0 hit points, any excess damage carries over to its normal form. As long as the excess damage doesn't reduce the creature's normal form to 0 hit points, it isn't knocked unconscious.\nThe creature is limited in the actions it can perform by the nature of its new form, and it can't speak, cast spells, or take any other action that requires hands or speech.\nThe target's gear melds into the new form. The creature can't activate, use, wield, or otherwise benefit from any of its equipment.","emote":"transforms a creature into a new form","save":{"ability":"Wisdom"}},{"name":"Power Word Kill","level":9,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true},"duration":"Instantaneous","description":"You utter a word of power that can compel one creature you can see within range to die instantly. If the creature you choose has 100 hit points or fewer, it dies. Otherwise, the spell has no effect.","emote":"utters a word of power that can compel a creature to die instantly"},{"name":"Power Word Stun","level":8,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true},"duration":"Instantaneous","description":"You speak a word of power that can overwhelm the mind of one creature you can see within range, leaving it dumbfounded. If the target has 150 hit points or fewer, it is stunned. Otherwise, the spell has no effect.\nThe stunned target must make a Constitution saving throw at the end of each of its turns. On a successful save, this stunning effect ends.","emote":"speaks a word of power that can overwhelm the mind of a creature, leaving it dumbfounded"},{"name":"Prayer of Healing","level":2,"school":"Evocation","castingTime":"10 minutes","range":"30 feet","components":{"verbal":true},"duration":"Instantaneous","description":"Up to six creatures of your choice that you can see within range each regain hit points equal to 2d8 + your spellcasting ability modifier. This spell has no effect on undead or constructs.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, the healing increases by 1d8 for each slot level above 2nd.","emote":"says a prayer that heals surrounding allies","heal":{"heal":"2d8","castingStat":true,"higherLevelDice":1}},{"name":"Prestidigitation","level":0,"school":"Transmutation","castingTime":"1 action","range":"10 feet","components":{"verbal":true,"somatic":true},"duration":"1 hour","description":"This spell is a minor magical trick that novice spellcasters use for practice. You create one of the following magical effects within 'range':\nYou create an instantaneous, harmless sensory effect, such as a shower of sparks, a puff of wind, faint musical notes, or an odd odor.\nYou instantaneously light or snuff out a candle, a torch, or a small campfire.\nYou instantaneously clean or soil an object no larger than 1 cubic foot.\nYou chill, warm, or flavor up to 1 cubic foot of non-living material for 1 hour.\nYou make a color, a small mark, or a symbol appear on an object or a surface for 1 hour.\nYou create a nonmagical trinket or an illusory image that can fit in your hand and that lasts until the end of your next turn.\nIf you cast this spell multiple times, you can have up to three of its non-instantaneous effects active at a time, and you can dismiss such an effect as an action.","emote":"performs minor magical effects"},{"name":"Prismatic Spray","level":7,"school":"Evocation","castingTime":"1 action","range":"Self (60-foot cone)","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"Eight multicolored rays of light flash from your hand. Each ray is a different color and has a different power and purpose. Each creature in a 60-foot cone must make a Dexterity saving throw. For each target, roll a d8 to determine which color ray affects it.\n1. Red. The target takes 10d6 fire damage on a failed save, or half as much damage on a successful one.\n2. Orange. The target takes 10d6 acid damage on a failed save, or half as much damage on a successful one.\n3. Yellow. The target takes 10d6 lightning damage on a failed save, or half as much damage on a successful one.\n4. Green. The target takes 10d6 poison damage on a failed save, or half as much damage on a successful one.\n5. Blue. The target takes 10d6 cold damage on a failed save, or half as much damage on a successful one.\n6. Indigo. On a failed save, the target is restrained. It must then make a Constitution saving throw at the end of each of its turns. If it successfully saves three times, the spell ends. If it fails its save three times, it permanently turns to stone and is subjected to the petrified condition. The successes and failures don't need to be consecutive; keep track of both until the target collects three of a kind.\n7. Violet. On a failed save, the target is blinded. It must then make a Wisdom saving throw at the start of your next turn. A successful save ends the blindness. If it fails that save, the creature is transported to another plane of existence of the DM's choosing and is no longer blinded. (Typically, a creature that is on a plane that isn't its home plane is banished home, while other creatures are usually cast into the Astral or Ethereal planes.)\n8. Special. The target is struck by two rays. Roll twice more, rerolling any 8.","emote":"evokes 8 multicolored rays of light that flash from {{GENDER_PRONOUN_HIS_HER}} hand. Each ray is a different color and has a different power and purpose","save":{"ability":"Dexterity","damage":"10d6","damageType":"fire, acid, lightning, poison, or cold","saveSuccess":"half damage"}},{"name":"Prismatic Wall","level":9,"school":"Abjuration","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"10 minutes","description":"A shimmering, multicolored plane of light forms a vertical opaque wall—up to 90 feet long, 30 feet high, and 1 inch thick—centered on a point you can see within range. Alternatively, you can shape the wall into a sphere up to 30 feet in diameter centered on a point you choose within range. The wall remains in place for the duration. If you position the wall so that it passes through a space occupied by a creature, the spell fails, and your action and the spell slot are wasted.\nThe wall sheds bright light out to a range of 100 feet and dim light for an additional 100 feet. You and creatures you designate at the time you cast the spell can pass through and remain near the wall without harm. If another creature that can see the wall moves to within 20 feet of it or starts its turn there, the creature must succeed on a Constitution saving throw or become blinded for 1 minute.\nThe wall consists of seven layers, each with a different color. When a creature attempts to reach into or pass through the wall, it does so one layer at a time through all the wall's layers. As it passes or reaches through each layer, the creature must make a Dexterity saving throw or be affected by that layer's properties as described below.\nThe wall can be destroyed, also one layer at a time, in order from red to violet, by means specific to each layer. Once a layer is destroyed, it remains so for the duration of the spell. An antimagic field has no effect on a prismatic wall, but dispel magic can remove the violet layer.\n1. Red. The creature takes 10d6 fire damage on a failed save, or half as much damage on a successful one. While this layer is in place, nonmagical ranged attacks can't pass through the wall. The layer can be destroyed by dealing at least 25 cold damage to it.\n2. Orange. The creature takes 10d6 acid damage on a failed save, or half as much damage on a successful one. While this layer is in place, magical ranged attacks can't pass through the wall. The layer is destroyed by a strong wind.\n3. Yellow. The creature takes 10d6 lightning damage on a failed save, or half as much damage on a successful one. This layer can be destroyed by dealing at least 60 force damage to it.\n4. Green. The creature takes 10d6 poison damage on a failed save, or half as much damage on a successful one. A passwall spell, or another spell of equal or greater level that can open a portal on a solid surface, destroys this layer.\n5. Blue. The creature takes 10d6 cold damage on a failed save, or half as much damage on a successful one. This layer can be destroyed by dealing at least 25 fire damage to it.\n6. Indigo. On a failed save, the creature is restrained. It must then make a Constitution saving throw at the end of each of its turns. If it successfully saves three times, the spell ends. If it fails its save three times, it permanently turns to stone and is subjected to the petrified condition. The successes and failures don't need to be consecutive; keep track of both until the creature collects three of a kind.\nWhile this layer is in place, spells can't be cast through the wall. The layer is destroyed by bright light shed by a daylight spell or a similar spell of equal or higher level.\n7. Violet. On a failed save, the creature is blinded. It must then make a Wisdom saving throw at the start of your next turn. A successful save ends the blindness. If it fails that save, the creature is transported to another plane of the DM's choosing and is no longer blinded. (Typically, a creature that is on a plane that isn't its home plane is banished home, while other creatures are usually cast into the Astral or Ethereal planes.) This layer is destroyed by a dispel magic spell or a similar spell of equal or higher level that can end spells and magical effects.","emote":"creates a shimmering, multicolored plane of light that forms a vertical opaque wall","save":{"ability":"Dexterity","damage":"10d6","damageType":"fire, acid, lightning, poison, or cold","saveSuccess":"half damage"}},{"name":"Produce Flame","level":0,"school":"Conjuration","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"duration":"10 minutes","description":"A flickering flame appears in your hand. The flame remains there for the duration and harms neither you nor your equipment. The flame sheds bright light in a 10-foot radius and dim light for an additional 10 feet. The spell ends if you dismiss it as an action or if you cast it again.\nYou can also attack with the flame, although doing so ends the spell. When you cast this spell, or as an action on a later turn, you can hurl the flame at a creature within 30 feet of you. Make a ranged spell attack. On a hit, the target takes 1d8 fire damage.","higherLevel":"This spell's damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8).","emote":"conjures a flickering flame appears in {{GENDER_PRONOUN_HIS_HER}} hand","attack":{"type":"ranged","damage":"((@{level} + 1) / 6 + 0.5)d8","damageType":"fire"}},{"name":"Programmed Illusion","level":6,"school":"Illusion","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of fleece and jade dust worth at least 25 gp","materialCost":25},"duration":"Until dispelled","description":"You create an illusion of an object, a creature, or some other visible phenomenon within range that activates when a specific condition occurs. The illusion is imperceptible until then. It must be no larger than a 30-foot cube, and you decide when you cast the spell how the illusion behaves and what sounds it makes. This scripted performance can last up to 5 minutes.\nWhen the condition you specify occurs, the illusion springs into existence and performs in the manner you described. Once the illusion finishes performing, it disappears and remains dormant for 10 minutes. After this time, the illusion can be activated again.\nThe triggering condition can be as general or as detailed as you like, though it must be based on visual or audible conditions that occur within 30 feet of the area. For example, you could create an illusion of yourself to appear and warn off others who attempt to open a trapped door, or you could set the illusion to trigger only when a creature says the correct word or phrase.\nPhysical interaction with the image reveals it to be an illusion, because things can pass through it. A creature that uses its action to examine the image can determine that it is an illusion with a successful Intelligence (Investigation) check against your spell save DC. If a creature discerns the illusion for what it is, the creature can see through the image, and any noise it makes sounds hollow to the creature.","emote":"creates an illusion of an object, a creature, or some other visible phenomenon within range that activates when a specific condition occurs"},{"name":"Project Image","level":7,"school":"Illusion","castingTime":"1 action","range":"500 miles","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a small replica of you made from materials worth at least 5 gp","materialCost":5},"concentration":true,"duration":"up to 24 hours","description":"You create an illusory copy of yourself that lasts for the duration. The copy can appear at any location within range that you have seen before, regardless of intervening obstacles. The illusion looks and sounds like you but is intangible. If the illusion takes any damage, it disappears, and the spell ends.\nYou can use your action to move this illusion up to twice your speed, and make it gesture, speak, and behave in whatever way you choose. It mimics your mannerisms perfectly.\nYou can see through its eyes and hear through its ears as if you were in its space. On your turn as a bonus action, you can switch from using its senses to using your own, or back again. While you are using its senses, you are blinded and deafened in regard to your own surroundings.\nPhysical interaction with the image reveals it to be an illusion, because things can pass through it. A creature that uses its action to examine the image can determine that it is an illusion with a successful Intelligence (Investigation) check against your spell save DC. If a creature discerns the illusion for what it is, the creature can see through the image, and any noise it makes sounds hollow to the creature.","emote":"create an illusory copy of {{GENDER_PRONOUN_HIMSELF_HERSELF}}"},{"name":"Protection from Energy","level":3,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 hour","description":"For the duration, the willing creature you touch has resistance to one damage type of your choice: acid, cold, fire, lightning, or thunder.","emote":"protects a creature against certain enemies"},{"name":"Protection from Evil and Good","level":1,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"holy water or powdered silver and iron, which the spell consumes"},"concentration":true,"duration":"up to 10 minutes","description":"Until the spell ends, one willing creature you touch is protected against certain types of creatures: aberrations, celestials, elementals, fey, fiends, and undead.\nThe protection grants several benefits. Creatures of those types have disadvantage on attack rolls against the target. The target also can't be charmed, frightened, or possessed by them. If the target is already charmed, frightened, or possessed by such a creature, the target has advantage on any new saving throw against the relevant effect.","emote":"wards against aberrations, celestials, elementals, fey, fiends, and undead"},{"name":"Protection from Poison","level":2,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"duration":"1 hour","description":"You touch a creature. If it is poisoned, you neutralize the poison. If more than one poison afflicts the target, you neutralize one poison that you know is present, or you neutralize one at random.\nFor the duration, the target has advantage on saving throws against being poisoned, and it has resistance to poison damage.","emote":"neutralizes a poison"},{"name":"Purify Food and Drink","level":1,"school":"Transmutation","ritual":true,"castingTime":"1 action","range":"10 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"All nonmagical food and drink within a 5-foot radius sphere centered on a point of your choice within range is purified and rendered free of poison and disease.","emote":"purifies all nonmagical food and drink near {{GENDER_PRONOUN_HIM_HER}}"},{"name":"Raise Dead","level":5,"school":"Necromancy","castingTime":"1 hour","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a diamond worth at least 500gp, which the spell consumes","materialCost":500},"duration":"Instantaneous","description":"You return a dead creature you touch to life, provided that it has been dead no longer than 10 days. If the creature's soul is both willing and at liberty to rejoin the body, the creature returns to life with 1 hit point.\nThis spell also neutralizes any poisons and cures nonmagical diseases that affected the creature at the time it died. This spell doesn't, however, remove magical diseases, curses, or similar effects; if these aren't first removed prior to casting the spell, they take effect when the creature returns to life. The spell can't return an undead creature to life.\nThis spell closes all mortal wounds, but it doesn't restore missing body parts. If the creature is lacking body parts or organs integral for its survival—its head, for instance—the spell automatically fails.\nComing back from the dead is an ordeal. The target takes a -4 penalty to all attack rolls, saving throws, and ability checks. Every time the target finishes a long rest, the penalty is reduced by 1 until it disappears.","emote":"returns a dead creature to life"},{"name":"Ray of Enfeeblement","level":2,"school":"Necromancy","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"A black beam of enervating energy springs from your finger toward a creature within range. Make a ranged spell attack against the target. On a hit, the target deals only half damage with weapon attacks that use Strength until the spell ends.\nAt the end of each of the target's turns, it can make a Constitution saving throw against the spell. On a success, the spell ends.","emote":"shoots a black beam of enervating energy from {{GENDER_PRONOUN_HIS_HER}} finger toward a creature","attack":{"type":"ranged"},"save":{"ability":"Constitution","saveSuccess":"spell ends"}},{"name":"Ray of Frost","level":0,"school":"Evocation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"A frigid beam of blue-white light streaks toward a creature within range. Make a ranged spell attack against the target. On a hit, it takes 1d8 cold damage, and its speed is reduced by 10 feet until the start of your next turn.","higherLevel":"The spell's damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8).","emote":"sends a frigid beam of blue-white light streaking toward a creature","attack":{"type":"ranged","damage":"((@{level} + 1) / 6 + 0.5)d8","damageType":"cold"}},{"name":"Regenerate","level":7,"school":"Transmutation","castingTime":"1 minute","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a prayer wheel and holy water"},"duration":"1 hour","description":"You touch a creature and stimulate its natural healing ability. The target regains 4d8 + 15 hit points. For the duration of the spell, the target regains 1 hit point at the start of each of its turns (10 hit points each minute).\nThe target's severed body members (fingers, legs, tails, and so on), if any, are restored after 2 minutes. If you have the severed part and hold it to the stump, the spell instantaneously causes the limb to knit to the stump.","emote":"stimulates a creature's natural healing ability","heal":{"heal":"4d8","bonus":15}},{"name":"Reincarnate","level":5,"school":"Transmutation","castingTime":"1 hour","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"rare oils and unguents worth at least 1,000 gp, which the spell consumes","materialCost":1000},"duration":"Instantaneous","description":"You touch a dead humanoid or a piece of a dead humanoid. Provided that the creature has been dead no longer than 10 days, the spell forms a new adult body for it and then calls the soul to enter that body. If the target's soul isn't free or willing to do so, the spell fails.\nThe magic fashions a new body for the creature to inhabit, which likely causes the creature's race to change. The DM rolls a d 100 and consults the following table to determine what form the creature takes when restored to life, or the DM chooses a form.\n01-04 Dragonborn\n05-13 Dwarf, hill\n14-21 Dwarf, mountain\n22-25 Elf, dark\n26-34 Elf, high\n35-42 Elf, wood\n43-46 Gnome, forest\n47-52 Gnome, rock\n53-56 Half-elf\n57-60 Half-orc\n61-68 Halfling, lightfoot\n69-76 Halfling, stout\n77-96 Human\n97-00 Tiefling\nThe reincarnated creature recalls its former life and experiences. It retains the capabilities it had in its original form, except it exchanges its original race for the new one and changes its racial traits accordingly.","emote":"reincarnate a fallen ally"},{"name":"Remove Curse","level":3,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"At your touch, all curses affecting one creature or object end. If the object is a cursed magic item, its curse remains, but the spell breaks its owner's attunement to the object so it can be removed or discarded.","emote":"removes all curses from the target with a touch"},{"name":"Resistance","level":0,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a miniature cloak"},"concentration":true,"duration":"up to 1 minute","description":"You touch one willing creature. Once before the spell ends, the target can roll a d4 and add the number rolled to one saving throw of its choice. It can roll the die before or after making the saving throw. The spell then ends.","emote":"imbues the target with resistance"},{"name":"Resurrection","level":7,"school":"Necromancy","castingTime":"1 hour","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a diamond worth at least 1,000gp, which the spell consumes","materialCost":1000},"duration":"Instantaneous","description":"You touch a dead creature that has been dead for no more than a century, that didn't die of old age, and that isn't undead. If its soul is free and willing, the target returns to life with all its hit points.\nThis spell neutralizes any poisons and cures normal diseases afflicting the creature when it died. It doesn't, however, remove magical diseases, curses, and the like; if such effects aren't removed prior to casting the spell, they afflict the target on its return to life.\nThis spell closes all mortal wounds and restores any missing body parts.\nComing back from the dead is an ordeal. The target takes a -4 penalty to all attack rolls, saving throws, and ability checks. Every time the target finishes a long rest, the penalty is reduced by 1 until it disappears.\nCasting this spell to restore life to a creature that has been dead for one year or longer taxes you greatly. Until you finish a long rest, you can't cast spells again, and you have disadvantage on all attack rolls, ability checks, and saving throws.","emote":"ressurects a fallen ally"},{"name":"Reverse Gravity","level":7,"school":"Transmutation","castingTime":"1 action","range":"100 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a lodestone and iron filings"},"concentration":true,"duration":"up to 1 minute","description":"This spell reverses gravity in a 50-foot-radius, 100-foot high cylinder centered on a point within range. All creatures and objects that aren't somehow anchored to the ground in the area fall upward and reach the top of the area when you cast this spell. A creature can make a Dexterity saving throw to grab onto a fixed object it can reach, thus avoiding the fall.\nIf some solid object (such as a ceiling) is encountered in this fall, falling objects and creatures strike it just as they would during a normal downward fall. If an object or creature reaches the top of the area without striking anything, it remains there, oscillating slightly, for the duration.\nAt the end of the duration, affected objects and creatures fall back down.","emote":"reverses gravity in an area","save":{"ability":"Dexterity","saveSuccess":"grab onto a fixed object it can reach, thus avoiding the fall"}},{"name":"Revivify","level":3,"school":"Necromancy","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"diamonds worth 300gp, which the spell consumes","materialCost":300},"duration":"Instantaneous","description":"You touch a creature that has died within the last minute. That creature returns to life with 1 hit point. This spell can't return to life a creature that has died of old age, nor can it restore any missing body parts.","emote":"revives a fallen ally"},{"name":"Rope Trick","level":2,"school":"Transmutation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"powdered corn extract and a twisted loop of parchment"},"duration":"1 hour","description":"You touch a length of rope that is up to 60 feet long. One end of the rope then rises into the air until the whole rope hangs perpendicular to the ground. At the upper end of the rope, an invisible entrance opens to an extradimensional space that lasts until the spell ends.\nThe extradimensional space can be reached by climbing to the top of the rope. The space can hold as many as eight Medium or smaller creatures. The rope can be pulled into the space, making the rope disappear from view outside the space.\nAttacks and spells can't cross through the entrance into or out of the extradimensional space, but those inside can see out of it as if through a 3-foot-by-5-foot window centered on the rope.\nAnything inside the extradimensional space drops out when the spell ends.","emote":"causes a rope to rise into the air until the whole rope hangs perpendicular to the ground with an invisible entrance opens to an extradimensional space at the upper end of the rope"},{"name":"Sacred Flame","level":0,"school":"Evocation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"Flame-like radiance descends on a creature that you can see within range. The target must succeed on a Dexterity saving throw or take 1d8 radiant damage. The target gains no benefit from cover for this saving throw.","higherLevel":"The spell's damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8).","emote":"conjures Flame-like radiance that descends on a creature","save":{"ability":"Dexterity","damage":"((@{level} + 1) / 6 + 0.5)d8","damageType":"radiant"}},{"name":"Sanctuary","level":1,"school":"Abjuration","castingTime":"1 bonus action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a small silver mirror"},"duration":"1 minute","description":"You ward a creature within range against attack. Until the spell ends, any creature who targets the warded creature with an attack or a harmful spell must first make a Wisdom saving throw. On a failed save, the creature must choose a new target or lose the attack or spell. This spell doesn't protect the warded creature from area effects, such as the explosion of a fireball.\nIf the warded creature makes an attack or casts a spell that affects an enemy creature, this spell ends.","emote":"wards the target against attack","save":{"ability":"Wisdom"}},{"name":"Scorching Ray","level":2,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You create three rays of fire and hurl them at targets within range. You can hurl them at one target or several.\nMake a ranged spell attack for each ray. On a hit, the target takes 2d6 fire damage.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, you create one additional ray for each slot level above 2nd.","emote":"creates 3 rays of fire and hurls them at targets","attack":{"type":"ranged","damage":"2d6","damageType":"fire"}},{"name":"Scrying","level":5,"school":"Divination","castingTime":"10 minutes","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a focus worth at least 1,000 gp, such as a crystal ball, a silver mirror, or a font filled with holy water","materialCost":1000},"concentration":true,"duration":"up to 10 minutes","description":"You can see and hear a particular creature you choose that is on the same plane of existence as you. The target must make a Wisdom saving throw, which is modified by how well you know the target and the sort of physical connection you have to it. If a target knows you're casting this spell, it can fail the saving throw voluntarily if it wants to be observed.\nKnowledge &amp; Save Modifier\nSecondhand (you have heard of the target) +5\nFirsthand (you have met the target) +0\nFamiliar (you know the target well) -5\nConnection &amp; Save Modifier\nLikeness or picture -2\nPossession or garment -4\nBody part, lock of hair, bit of nail, or the like -10\nOn a successful save, the target isn't affected, and you can't use this spell against it again for 24 hours.\nOn a failed save, the spell creates an invisible sensor within 10 feet of the target. You can see and hear through the sensor as if you were there. The sensor moves with the target, remaining within 10 feet of it for the duration. A creature that can see invisible objects sees the sensor as a luminous orb about the size of your fist.\nInstead of targeting a creature, you can choose a location you have seen before as the target of this spell. When you do, the sensor appears at that location and doesn't move.","emote":"can see and hear a creature","save":{"ability":"Wisdom","saveSuccess":"the target isn't affected, and you can't use this spell against it again for 24 hours"}},{"name":"See Invisibility","level":2,"school":"Divination","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a dash of talc and a small amount of silver powder"},"duration":"1 hour","description":"For the duration, you see invisible creatures and objects as if they were visible, and you can see into the Ethereal Plane. Ethereal creatures and objects appear ghostly and translucent.","emote":"'s eyes glow, allowing {{GENDER_PRONOUN_HIM_HER}} to see invisible things."},{"name":"Seeming","level":5,"school":"Illusion","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true},"duration":"8 hours","description":"This spell allows you to change the appearance of any number of creatures that you can see within range. You give each target you choose a new, illusory appearance. An unwilling target can make a Charisma saving throw, and if it succeeds, it is unaffected by this spell.\nThe spell disguises physical appearance as well as clothing, armor, weapons, and equipment. You can make each creature seem 1 foot shorter or taller and appear thin, fat, or in between. You can't change a target's body type, so you must choose a form that has the same basic arrangement of limbs. Otherwise, the extent of the illusion is up to you. The spell lasts for the duration, unless you use your action to dismiss it sooner.\nThe changes wrought by this spell fail to hold up to physical inspection. For example, if you use this spell to add a hat to a creature's outfit, objects pass through the hat, and anyone who touches it would feel nothing or would feel the creature's head and hair. If you use this spell to appear thinner than you are, the hand of someone who reaches out to touch you would bump into you while it was seemingly still in midair.\nA creature can use its action to inspect a target and make an Intelligence (Investigation) check against your spell save DC. If it succeeds, it becomes aware that the target is disguised.","emote":"changes the appearance of creatures","save":{"ability":"Charisma"}},{"name":"Sending","level":3,"school":"Evocation","castingTime":"1 action","range":"Unlimited","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a short piece of fine copper wire"},"duration":"1 round","description":"You send a short message of twenty-five words or less to a creature with which you are familiar. The creature hears the message in its mind, recognizes you as the sender if it knows you, and can answer in a like manner immediately. The spell enables creatures with Intelligence scores of at least 1 to understand the meaning of your message.\nYou can send the message across any distance and even to other planes of existence, but if the target is on a different plane than you, there is a 5% chance that the message doesn't arrive.","emote":"sends a short message of 25 words or less to a creature"},{"name":"Sequester","level":7,"school":"Transmutation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a powder composed of diamond, emerald, ruby, and sapphire dust worth at least 5,000 gp, which the spell consumes","materialCost":5000},"duration":"Until dispelled","description":"By means of this spell, a willing creature or an object can be hidden away, safe from detection for the duration. When you cast the spell and touch the target, it becomes invisible and can't be targeted by divination spells or perceived through scrying sensors created by divination spells.\nIf the target is a creature, it falls into a state of suspended animation. Time ceases to flow for it, and it doesn't grow older.\nYou can set a condition for the spell to end early. The condition can be anything you choose, but it must occur or be visible within 1 mile of the target. Examples include \"after 1,000 years\" or \"when the tarrasque awakens.\" This spell also ends if the target takes any damage.","emote":"hides a creature or an object from detection"},{"name":"Shapechange","level":9,"school":"Transmutation","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a jade circlet worth at least 1,500 gp, which you must place on your head before you cast the spell","materialCost":1500},"concentration":true,"duration":"up to 1 hour","description":"You assume the form of a different creature for the duration. The new form can be of any creature with a challenge rating equal to your level or lower. The creature can't be a construct or an undead, and you must have seen the sort of creature at least once. You transform into an average example of that creature, one without any class levels or the Spellcasting trait.\nYour game statistics are replaced by the statistics of the chosen creature, though you retain your alignment and Intelligence, Wisdom, and Charisma scores. You also retain all of your skill and saving throw proficiencies, in addition to gaining those of the creature. If the creature has the same proficiency as you and the bonus listed in its statistics is higher than yours, use the creature's bonus in place of yours. You can't use any legendary actions or lair actions of the new form.\nYou assume the hit points and Hit Dice of the new form. When you revert to your normal form, you return to the number of hit points you had before you transformed. If you revert as a result of dropping to 0 hit points, any excess damage carries over to your normal form. As long as the excess damage doesn't reduce your normal form to 0 hit points, you aren't knocked unconscious.\nYou retain the benefit of any features from your class, race, or other source and can use them, provided that your new form is physically capable of doing so. You can't use any special senses you have (for example, darkvision) unless your new form also has that sense. You can only speak if the creature can normally speak.\nWhen you transform, you choose whether your equipment falls to the ground, merges into the new form, or is worn by it. Worn equipment functions as normal. The DM determines whether it is practical for the new form to wear a piece of equipment, based on the creature's shape and size. Your equipment doesn't change shape or size to match the new form, and any equipment that the new form can't wear must either fall to the ground or merge into your new form. Equipment that merges has no effect in that state.\nDuring this spell's duration, you can use your action to assume a different form following the same restrictions and rules for the original form, with one exception: if your new form has more hit points than your current one, your hit points remain at their current value.","emote":"assumes the form of a different creature"},{"name":"Shatter","level":2,"school":"Evocation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a chip of mica"},"duration":"Instantaneous","description":"A sudden loud ringing noise, painfully intense, erupts from a point of your choice within range. Each creature in a 10-foot-radius sphere centered on that point must make a Constitution saving throw. A creature takes 3d8 thunder damage on a failed save, or half as much damage on a successful one. A creature made of inorganic material such as stone, crystal, or metal has disadvantage on this saving throw.\nA nonmagical object that isn't being worn or carried also takes the damage if it's in the spell's area.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, the damage increases by 1d8 for each slot level above 2nd","emote":"evokes a sudden loud, painfully intense, ringing noise","save":{"ability":"Constitution","damage":"3d8","damageType":"thunder","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Shield","level":1,"school":"Abjuration","castingTime":"1 reaction","range":"Self","components":{"verbal":true,"somatic":true},"duration":"1 round","description":"An invisible barrier of magical force appears and protects you. Until the start of your next turn, you have a +5 bonus to AC, including against the triggering attack, and you take no damage from magic missile.","emote":"creates an invisible barrier of magical force to protect {{GENDER_PRONOUN_HIMSELF_HERSELF}}"},{"name":"Shield of Faith","level":1,"school":"Abjuration","castingTime":"1 bonus action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a small parchment with a bit of holy text written on it"},"concentration":true,"duration":"up to 10 minutes","description":"A shimmering field appears and surrounds a creature of your choice within range, granting it a +2 bonus to AC for the duration.","emote":"conjures a shimmering field that surrounds a creature and protects it"},{"name":"Shillelagh","level":0,"school":"Transmutation","castingTime":"1 bonus action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"mistletoe, a shamrock leaf, and a club or quarterstaff"},"duration":"1 minute","description":"The wood of a club or a quarterstaff you are holding is imbued with nature's power. For the duration, you can use your spellcasting ability instead of Strength for the attack and damage rolls of melee attacks using that weapon, and the weapon's damage die becomes a d8. The weapon also becomes magical, if it isn't already. The spell ends if you cast it again or if you let go of the weapon.","emote":"imbues {{GENDER_PRONOUN_HIS_HER}} weapon with nature's power"},{"name":"Shocking Grasp","level":0,"school":"Evocation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"Lightning springs from your hand to deliver a shock to a creature you try to touch. Make a melee spell attack against the target. You have advantage on the attack roll if the target is wearing armor made of metal. On a hit, the target takes 1d8 lightning damage, and it can't take reactions until the start of its next turn.","higherLevel":"The spell's damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8).","emote":"'s hand shoots forth lightning to deliver a shock to a creature","attack":{"type":"melee","damage":"((@{level} + 1) / 6 + 0.5)d8","damageType":"lightning"}},{"name":"Silence","level":2,"school":"Illusion","ritual":true,"castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 10 minutes","description":"For the duration, no sound can be created within or pass through a 20-foot-radius sphere centered on a point you choose within range. Any creature or object entirely inside the sphere is immune to thunder damage, and creatures are deafened while entirely inside it.\nCasting a spell that includes a verbal component is impossible there.","emote":"creates a sphere that no sound can be created within or pass through"},{"name":"Silent Image","level":1,"school":"Illusion","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of fleece"},"concentration":true,"duration":"up to 10 minutes","description":"You create the image of an object, a creature, or some other visible phenomenon that is no larger than a 15-foot cube. The image appears at a spot within range and lasts for the duration. The image is purely visual; it isn't accompanied by sound, smell, or other sensory effects.\nYou can use your action to cause the image to move to any spot within range. As the image changes location, you can alter its appearance so that its movements appear natural for the image. For example, if you create an image of a creature and move it, you can alter the image so that it appears to be walking.\nPhysical interaction with the image reveals it to be an illusion, because things can pass through it. A creature that uses its action to examine the image can determine that it is an illusion with a successful Intelligence (Investigation) check against your spell save DC. If a creature discerns the illusion for what it is, the creature can see through the image.","emote":"creates an illusory image of an object, a creature, or some other visible phenomenon"},{"name":"Simulacrum","level":7,"school":"Illusion","castingTime":"12 hours","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"snow or ice in quantities sufficient to made a life-size copy of the duplicated creature; some hair, fingernail clippings, or other piece of that creature's body placed inside the snow or ice; and powdered ruby worth 1,500 gp, sprinkled over the duplicate and consumed by the spell","materialCost":1500},"duration":"Until dispelled","description":"You shape an illusory duplicate of one beast or humanoid that is within range for the entire casting time of the spell. The duplicate is a creature, partially real and formed from ice or snow, and it can take actions and otherwise be affected as a normal creature. It appears to be the same as the original, but it has half the creature's hit point maximum and is formed without any equipment. Otherwise, the illusion uses all the statistics of the creature it duplicates.\nThe simulacrum is friendly to you and creatures you designate. It obeys your spoken commands, moving and acting in accordance with your wishes and acting on your turn in combat. The simulacrum lacks the ability to learn or become more powerful, so it never increases its level or other abilities, nor can it regain expended spell slots.\nIf the simulacrum is damaged, you can repair it in an alchemical laboratory, using rare herbs and minerals worth 100 gp per hit point it regains. The simulacrum lasts until it drops to 0 hit points, at which point it reverts to snow and melts instantly.\nIf you cast this spell again, any currently active duplicates you created with this spell are instantly destroyed.","emote":"shapes an illusory duplicate of a beast or humanoid"},{"name":"Sleep","level":1,"school":"Enchantment","castingTime":"1 action","range":"90 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of fine sand, rose petals, or a cricket"},"duration":"1 minute","description":"This spell sends creatures into a magical slumber. Roll 5d8; the total is how many hit points of creatures this spell can affect. Creatures within 20 feet of a point you choose within range are affected in ascending order of their current hit points (ignoring unconscious creatures).\nStarting with the creature that has the lowest current hit points, each creature affected by this spell falls unconscious until the spell ends, the sleeper takes damage, or someone uses an action to shake or slap the sleeper awake. Subtract each creature's hit points from the total before moving on to the creature with the next lowest hit points. A creature's hit points must be equal to or less than the remaining total for that creature to be affected.\nUndead and creatures immune to being charmed aren't affected by this spell.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, roll an additional 2d8 for each slot level above 1st.","emote":"sends creatures into a magical slumbers"},{"name":"Sleet Storm","level":3,"school":"Conjuration","castingTime":"1 action","range":"150 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of dust and a few drops of water"},"concentration":true,"duration":"up to 1 minute","description":"Until the spell ends, freezing rain and sleet fall in a 20-foot-tall cylinder with a 40-foot radius centered on a point you choose within range. The area is heavily obscured, and exposed flames in the area are doused.\nThe ground in the area is covered with slick ice, making it difficult terrain. When a creature enters the spell's area for the first time on a turn or starts its turn there, it must make a Dexterity saving throw. On a failed save, it falls prone.\nIf a creature is concentrating in the spell's area, the creature must make a successful Constitution saving throw against your spell save DC or lose concentration.","emote":"summons freezing rain and sleet that fall in an area","save":{"ability":"Dexterity"}},{"name":"Slow","level":3,"school":"Transmutation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a drop of molasses"},"concentration":true,"duration":"up to 1 minute","description":"You alter time around up to six creatures of your choice in a 40-foot cube within range. Each target must succeed on a Wisdom saving throw or be affected by this spell for the duration.\nAn affected target's speed is halved, it takes a -2 penalty to AC and Dexterity saving throws, and it can't use reactions. On its turn, it can use either an action or a bonus action, not both. Regardless of the creature's abilities or magic items, it can't make more than one melee or ranged attack during its turn.\nIf the creature attempts to cast a spell with a casting time of 1 action, roll a d20. On an 11 or higher, the spell doesn't take effect until the creature's next turn, and the creature must use its action on that turn to complete the spell. If it can't, the spell is wasted.\nA creature affected by this spell makes another Wisdom saving throw at the end of its turn. On a successful save, the effect ends for it.","emote":"alter time","save":{"ability":"Wisdom"}},{"name":"Spare the Dying","level":0,"school":"Necromancy","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"You touch a living creature that has 0 hit points. The creature becomes stable. This spell has no effect on undead or constructs.","emote":"stabilizes the target"},{"name":"Speak with Animals","level":1,"school":"Divination","ritual":true,"castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"duration":"10 minutes","description":"You gain the ability to comprehend and verbally communicate with beasts for the duration. The knowledge and awareness of many beasts is limited by their intelligence, but at a minimum, beasts can give you information about nearby locations and monsters, including whatever they can perceive or have perceived within the past day. You might be able to persuade a beast to perform a small favor for you, at the DM's discretion.","emote":"gains the ability to comprehend verbally communicate with beasts"},{"name":"Spike Growth","level":2,"school":"Transmutation","castingTime":"1 action","range":"150 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"seven sharp spines or seven twigs cut peak"},"concentration":true,"duration":"up to 10 minutes","description":"The ground in a 20-foot radius centered on a point within range twists and sprouts hard spikes and thorns. The area becomes difficult terrain for the duration. When a creature moves into or within the area, it takes 2d4 piercing damage for every 5 feet it travels.\nThe transformation of the ground is camouflaged to look natural. Any creature that can't see the area at the time the spell is cast must make a Wisdom (Perception) check against your spell save DC to recognize the terrain as hazardous before entering it.","emote":"transmutes the ground to twist and sprout hard spikes and thorns"},{"name":"Spirit Guardians","level":3,"school":"Conjuration","castingTime":"1 action","range":"Self (15-foot radius)","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a holy symbol"},"concentration":true,"duration":"up to 10 minutes","description":"You call forth spirits to protect you. They flit around you to a distance of 15 feet for the duration. If you are good or neutral, their spectral form appears angelic or fey (your choice). If you are evil, they appear fiendish.\nWhen you cast this spell, you can designate any number of creatures you can see to be unaffected by it. An affected creature's speed is halved in the area, and when the creature enters the area for the first time on a turn or starts its turn there, it must make a Wisdom saving throw. On a failed save, the creature takes 3d8 radiant damage (if you are good or neutral) or 3d8 necrotic damage (if you are evil). On a successful save, the creature takes half as much damage.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d8 for each slot level above 3rd.","emote":"calls forth spirits to protect {{GENDER_PRONOUN_HIM_HER}}","save":{"ability":"Wisdom","damage":"3d8","damageType":"radiant or necrotic","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Spiritual Weapon","level":2,"school":"Evocation","castingTime":"1 bonus action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"1 minute","description":"You create a floating, spectral weapon within range that lasts for the duration or until you cast this spell again. When you cast the spell, you can make a melee spell attack against a creature within 5 feet of the weapon. On a hit, the target takes force damage equal to 1d8 + your spellcasting ability modifier.\nAs a bonus action on your turn, you can move the weapon up to 20 feet and repeat the attack against a creature within 5 feet of it.\nThe weapon can take whatever form you choose. Clerics of deities who are associated with a particular weapon (as St. Cuthbert is known for his mace and Thor for his hammer) make this spell's effect resemble that weapon.","higherLevel":"When you cast this spell using a spell slot of 3rd level or higher, the damage increases by 1d8 for every two slot levels above the 2nd.","emote":"creates a floating, spectral weapon","attack":{"type":"melee","damage":"1d8","damageType":"force","castingStat":true,"higherLevelDice":0.49}},{"name":"Stinking Cloud","level":3,"school":"Conjuration","castingTime":"1 action","range":"90 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a rotten egg or several skunk cabbage leaves"},"concentration":true,"duration":"up to 1 minute","description":"You create a 20-foot-radius sphere of yellow, nauseating gas centered on a point within range. The cloud spreads around corners, and its area is heavily obscured. The cloud lingers in the air for the duration.\nEach creature that is completely within the cloud at the start of its turn must make a Constitution saving throw against poison. On a failed save, the creature spends its action that turn retching and reeling. Creatures that don't need to breathe or are immune to poison automatically succeed on this saving throw.\nA moderate wind (at least 10 miles per hour) disperses the cloud after 4 rounds. A strong wind (at least 20 miles per hour) disperses it after 1 round.","emote":"conjures a sphere of yellow, nauseating gas","save":{"ability":"Constitution","saveSuccess":"half damage and not blinded"}},{"name":"Stone Shape","level":4,"school":"Transmutation","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"soft clay, to be crudely worked into the desired shape for the stone object"},"duration":"Instantaneous","description":"You touch a stone object of Medium size or smaller or a section of stone no more than 5 feet in any dimension and form it into any shape that suits your purpose. So, for example, you could shape a large rock into a weapon, idol, or coffer, or make a small passage through a wall, as long as the wall is less than 5 feet thick. You could also shape a stone door or its frame to seal the door shut. The object you create can have up to two hinges and a latch, but finer mechanical detail isn't possible.","emote":"forms stone into any shape that suits {{GENDER_PRONOUN_HIS_HER}} purpose"},{"name":"Stoneskin","level":4,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"diamond dust worth 100 gp, which the spell consumes","materialCost":100},"concentration":true,"duration":"up to 1 hour","description":"This spell turns the flesh of a willing creature you touch as hard as stone. Until the spell ends, the target has resistance to nonmagical bludgeoning, piercing, and slashing damage.","emote":"turns the flesh of a creature as hard as stone"},{"name":"Storm of Vengeance","level":9,"school":"Conjuration","castingTime":"1 action","range":"Sight","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"A churning storm cloud forms, centered on a point you can see and spreading to a radius of 360 feet. Lightning flashes in the area, thunder booms, and strong winds roar. Each creature under the cloud (no more than 5,000 feet beneath the cloud) when it appears must make a Constitution saving throw. On a failed save, a creature takes 2d6 thunder damage and becomes deafened for 5 minutes.\nEach round you maintain concentration on this spell, the storm produces additional effects on your turn. \nRound 2. Acidic rain falls from the cloud. Each creature and object under the cloud takes 1d6 acid damage.\nRound 3. You call six bolts of lightning from the cloud to strike six creatures or objects of your choice beneath the cloud. A given creature or object can't be struck by more than one bolt. A struck creature must make a Dexterity saving throw. The creature takes 10d6 lightning damage on a failed save, or half as much damage on a successful one.\nRound 4. Hailstones rain down from the cloud. Each creature under the cloud takes 2d6 bludgeoning damage.\nRound 5-10. Gusts and freezing rain assail the area under the cloud. The area becomes difficult terrain and is heavily obscured. Each creature there takes 1d6 cold damage. Ranged weapon attacks in the area are impossible. The wind and rain count as a severe distraction for the purposes of maintaining concentration on spells. Finally, gusts of strong wind (ranging from 20 to 50 miles per hour) automatically disperse fog, mists, and similar phenomena in the area, whether mundane or magical.","emote":"conjures a churning storm cloud. Lightning flashes in the area, thunder booms, and strong winds roar.","save":{"ability":"Constitution","damage":"2d6","damageType":"thunder"}},{"name":"Suggestion","level":2,"school":"Enchantment","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"material":true,"materialMaterial":"a snake's tongue and either a bit of honeycomb or a drop of sweet oil"},"concentration":true,"duration":"up to 8 hours","description":"You suggest a course of activity (limited to a sentence or two) and magically influence a creature you can see within range that can hear and understand you. Creatures that can't be charmed are immune to this effect. The suggestion must be worded in such a manner as to make the course of action sound reasonable. Asking the creature to stab itself, throw itself onto a spear, immolate itself, or do some other obviously harmful act ends the spell.\nThe target must make a Wisdom saving throw. On a failed save, it pursues the course of action you described to the best of its ability. The suggested course of action can continue for the entire duration. If the suggested activity can be completed in a shorter time, the spell ends when the subject finishes what it was asked to do.\nYou can also specify conditions that will trigger a special activity during the duration. For example, you might suggest that a knight give her warhorse to the first beggar she meets. If the condition isn't met before the spell expires, the activity isn't performed.\nIf you or any of your companions damage the target, the spell ends.","emote":"suggests a course of activity to magically influcence a creature","save":{"ability":"Wisdom"}},{"name":"Sunbeam","level":6,"school":"Evocation","castingTime":"1 action","range":"Self (60-foot line)","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a magnifying glass"},"concentration":true,"duration":"up to 1 minute","description":"A beam of brilliant light flashes out from your hand in a 5-foot-wide, 60-foot-long line. Each creature in the line must make a Constitution saving throw. On a failed save, a creature takes 6d8 radiant damage and is blinded until your next turn. On a successful save, it takes half as much damage and isn't blinded by this spell. Undead and oozes have disadvantage on this saving throw.\nYou can create a new line of radiance as your action on any turn until the spell ends.\nFor the duration, a mote of brilliant radiance shines in your hand. It sheds bright light in a 30-foot radius and dim light for an additional 30 feet. This light is sunlight.","emote":"evokes a brilliant light that flashes out from {{GENDER_PRONOUN_HIS_HER}} hand","save":{"ability":"Constitution","damage":"6d8","damageType":"radiant","saveSuccess":"half damage and not blinded"}},{"name":"Sunburst","level":8,"school":"Evocation","castingTime":"1 action","range":"150 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"fire and a piece of sunstone"},"duration":"Instantaneous","description":"Brilliant sunlight flashes in a 60-foot radius centered on a point you choose within range. Each creature in that light must make a Constitution saving throw. On a failed save, a creature takes 12d6 radiant damage and is blinded for 1 minute. On a successful save, it takes half as much damage and isn't blinded by this spell. Undead and oozes have disadvantage on this saving throw.\nA creature blinded by this spell makes another Constitution saving throw at the end of each of its turns. On a successful save, it is no longer blinded.\nThis spell dispels any darkness in its area that was created by a spell.","emote":"evokes brilliant sunlight","save":{"ability":"Constitution","damage":"12d6","damageType":"radiant","saveSuccess":"half damage and not blinded"}},{"name":"Symbol","level":7,"school":"Abjuration","castingTime":"1 minute","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"mercury, phosphorus, and powdered diamond and opal with a total value of at least 1,000 gp, which the spell consumes","materialCost":1000},"duration":"Until dispelled","description":"When you cast this spell, you inscribe a harmful glyph either on a surface (such as a section of floor, a wall, or a table) or within an object that can be closed to conceal the glyph (such as a book, a scroll, or a treasure chest). If you choose a surface, the glyph can cover an area of the surface no larger than 10 feet in diameter. If you choose an object, that object must remain in its place; if the object is moved more than 10 feet from where you cast this spell, the glyph is broken, and the spell ends without being triggered.\nThe glyph is nearly invisible, requiring an Intelligence (Investigation) check against your spell save DC to find it.\nYou decide what triggers the glyph when you cast the spell. For glyphs inscribed on a surface, the most typical triggers include touching or stepping on the glyph, removing another object covering it, approaching within a certain distance of it, or manipulating the object that holds it. For glyphs inscribed within an object, the most common triggers are opening the object, approaching within a certain distance of it, or seeing or reading the glyph.\nYou can further refine the trigger so the spell is activated only under certain circumstances or according to a creature's physical characteristics (such as height or weight), or physical kind (for example, the ward could be set to affect hags or shapechangers). You can also specify creatures that don't trigger the glyph, such as those who say a certain password.\nWhen you inscribe the glyph, choose one of the options below for its effect. Once triggered, the glyph glows, filling a 60-foot-radius sphere with dim light for 10 minutes, after which time the spell ends. Each creature in the sphere when the glyph activates is targeted by its effect, as is a creature that enters the sphere for the first time on a turn or ends its turn there. \nDeath. Each target must make a Constitution saving throw, taking 10d10 necrotic damage on a failed save, or half as much damage on a successful save.\nDiscord. Each target must make a Constitution saving throw. On a failed save, a target bickers and argues with other creatures for 1 minute. During this time, it is incapable of meaningful communication and has disadvantage on attack rolls and ability checks.\nFear. Each target must make a Wisdom saving throw and becomes frightened for 1 minute on a failed save. While frightened, the target drops whatever it is holding and must move at least 30 feet away from the glyph on each of its turns, if able.\nHopelessness. Each target must make a Charisma saving throw. On a failed save, the target is overwhelmed with despair for 1 minute. During this time, it can't attack or target any creature with harmful abilities, spells, or other magical effects.\nInsanity. Each target must make an Intelligence saving throw. On a failed save, the target is driven insane for 1 minute. An insane creature can't take actions, can't understand what other creatures say, can't read, and speaks only in gibberish. The DM controls its movement, which is erratic.\nPain. Each target must make a Constitution saving throw and becomes incapacitated with excruciating pain for 1 minute on a failed save.\nSleep. Each target must make a Wisdom saving throw and falls unconscious for 10 minutes on a failed save. A creature awakens if it takes damage or if someone uses an action to shake or slap it awake.\nStunning. Each target must make a Wisdom saving throw and becomes stunned for 1 minute on a failed save.","emote":"inscribes a harmful glyph either on a surface (such as a section of floor, a wall, or a table) or within an object that can be closed to conceal the glyph (such as a book, a scroll, or a treasure chest)"},{"name":"Telekinesis","level":5,"school":"Transmutation","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 10 minutes","description":"You gain the ability to move or manipulate creatures or objects by thought. When you cast the spell, and as your action each round for the duration, you can exert your will on one creature or object that you can see within range, causing the appropriate effect below. You can affect the same target round after round, or choose a new one at any time. If you switch targets, the prior target is no longer affected by the spell.\nCreature. You can try to move a Huge or smaller creature. Make an ability check with your spellcasting ability contested by the creature's Strength check. If you win the contest, you move the creature up to 30 feet in any direction, including upward but not beyond the range of this spell. Until the end of your next turn, the creature is restrained in your telekinetic grip. A creature lifted upward is suspended in mid-air.\nOn subsequent rounds, you can use your action to attempt to maintain your telekinetic grip on the creature by repeating the contest.\nObject. You can try to move an object that weighs up to 1,000 pounds. If the object isn't being worn or carried, you automatically move it up to 30 feet in any direction, but not beyond the range of this spell.\nIf the object is worn or carried by a creature, you must make an ability check with your spellcasting ability contested by that creature's Strength check. If you succeed, you pull the object away from that creature and can move it up to 30 feet in any direction but not beyond the range of this spell.\nYou can exert fine control on objects with your telekinetic grip, such as manipulating a simple tool, opening a door or a container, stowing or retrieving an item from an open container, or pouring the contents from a vial.","emote":"gains the ability to move or manipulate creatures or objects by thought"},{"name":"Teleport","level":7,"school":"Conjuration","castingTime":"1 action","range":"10 feet","components":{"verbal":true},"duration":"Instantaneous","description":"This spell instantly transports you and up to eight willing creatures of your choice that you can see within range, or a single object that you can see within range, to a destination you select. If you target an object, it must be able to fit entirely inside a 10-foot cube, and it can't be held or carried by an unwilling creature.\nThe destination you choose must be known to you, and it must be on the same plane of existence as you. Your familiarity with the destination determines whether you arrive there successfully. The DM rolls d100 and consults the table.","emote":"instantly teleports {{GENDER_PRONOUN_HIMSELF_HERSELF}} and {{GENDER_PRONOUN_HIS_HER}} allies'"},{"name":"Teleportation Circle","level":5,"school":"Conjuration","castingTime":"1 minute","range":"10 feet","components":{"verbal":true,"material":true,"materialMaterial":"rare chalks and inks infused with precious gems with 50 gp, which the spell consumes","materialCost":50},"duration":"1 round","description":"As you cast the spell, you draw a 10-foot-diameter circle on the ground inscribed with sigils that link your location to a permanent teleportation circle of your choice whose sigil sequence you know and that is on the same plane of existence as you. A shimmering portal opens within the circle you drew and remains open until the end of your next turn. Any creature that enters the portal instantly appears within 5 feet of the destination circle or in the nearest unoccupied space if that space is occupied.\nMany major temples, guilds, and other important places have permanent teleportation circles inscribed somewhere within their confines. Each such circle includes a unique sigil sequence—a string of magical runes arranged in a particular pattern. When you first gain the ability to cast this spell, you learn the sigil sequences for two destinations on the Material Plane, determined by the DM. You can learn additional sigil sequences during your adventures. You can commit a new sigil sequence to memory after studying it for 1 minute.\nYou can create a permanent teleportation circle by casting this spell in the same location every day for one year. You need not use the circle to teleport when you cast the spell in this way.","emote":"draws a circle on the ground inscribed with sigils"},{"name":"Thaumaturgy","level":0,"school":"Transmutation","castingTime":"1 action","range":"30 feet","components":{"verbal":true},"duration":"1 minute","description":"You manifest a minor wonder, a sign of supernatural power, within range. You create one of the following magical effects within range.\n- Your voice booms up to three times as loud as normal for 1 minute.\n- You cause flames to flicker, brighten, dim, or change color for 1 minute.\n- You cause harmless tremors in the ground for 1 minute.\n- You create an instantaneous sound that originates from a point of your choice within range, such as a rumble of thunder, the cry of a raven, or ominous whispers.\n- You instantaneously cause an unlocked door or window to fly open or slam shut.\n- You alter the appearance of your eyes for 1 minute.\nIf you cast this spell multiple times, you can have up to three of its 1-minute effects active at a time, and you can dismiss such an effect as an action.","emote":"manifests a minor wonder, a sign of supernatural power"},{"name":"Thunderwave","level":1,"school":"Evocation","castingTime":"1 action","range":"Self (15-foot cube)","components":{"verbal":true,"somatic":true},"duration":"Instantaneous","description":"A wave of thunderous force sweeps out from you. Each creature in a 15-foot cube originating from you must make a Constitution saving throw. On a failed save, a creature takes 2d8 thunder damage and is pushed 10 feet away from you. On a successful save, the creature takes half as much damage and isn't pushed.\nIn addition, unsecured objects that are completely within the area of effect are automatically pushed 10 feet away from you by the spell's effect, and the spell emits a thunderous boom audible out to 300 feet.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d8 for each slot level above 1st.","emote":"sends out a wave of thunderous force, which can be heard 300 feet away","save":{"ability":"Constitution","damage":"2d8","damageType":"thunder","saveSuccess":"half damage and not pushed","higherLevelDice":1}},{"name":"Time Stop","level":9,"school":"Transmutation","castingTime":"1 action","range":"Self","components":{"verbal":true},"duration":"Instantaneous","description":"You briefly stop the flow of time for everyone but yourself. No time passes for other creatures, while you take 1d4 + 1 turns in a row, during which you can use actions and move as normal.\nThis spell ends if one of the actions you use during this period, or any effects that you create during this period, affects a creature other than you or an object being worn or carried by someone other than you. In addition, the spell ends if you move to a place more than 1,000 feet from the location where you cast it.","emote":"briefly stop the flow of time for everyone but {{GENDER_PRONOUN_HIMSELF_HERSELF}}"},{"name":"Tongues","level":3,"school":"Divination","castingTime":"1 action","range":"Touch","components":{"verbal":true,"material":true,"materialMaterial":"a small clay model of a ziggurat"},"duration":"1 hour","description":"This spell grants the creature you touch the ability to understand any spoken language it hears. Moreover, when the target speaks, any creature that knows at least one language and can hear the target understands what it says.","emote":"grants the target the ability to understand any spoken language it hears"},{"name":"Transport via Plants","level":6,"school":"Conjuration","castingTime":"1 action","range":"10 feet","components":{"verbal":true,"somatic":true},"duration":"1 round","description":"This spell creates a magical link between a Large or larger inanimate plant within range and another plant, at any distance, on the same plane of existence. You must have seen or touched the destination plant at least once before. For the duration, any creature can step into the target plant and exit from the destination plant by using 5 feet of movement.","emote":"creates a magical link between plants"},{"name":"Tree Stride","level":5,"school":"Conjuration","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"You gain the ability to enter a tree and move from inside it to inside another tree of the same kind within 500 feet. Both trees must be living and at least the same size as you. You must use 5 feet of movement to enter a tree. You instantly know the location of all other trees of the same kind within 500 feet and, as part of the move used to enter the tree, can either pass into one of those trees or step out of the tree you're in. You appear in a spot of your choice within 5 feet of the destination tree, using another 5 feet of movement. If you have no movement left, you appear within 5 feet of the tree you entered.\nYou can use this transportation ability once per round for the duration. You must end each turn outside a tree.","emote":"gains the ability to enter a tree and move from inside it to inside another tree of the same kind"},{"name":"True Polymorph","level":9,"school":"Transmutation","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a drop of mercury, a dollop of gum arabic, and a wisp of smoke"},"concentration":true,"duration":"up to 1 hour","description":"Choose one creature or nonmagical object that you can see within range. You transform the creature into a different creature, the creature into an object, or the object into a creature (the object must be neither worn nor carried by another creature). The transformation lasts for the duration, or until the target drops to 0 hit points or dies. If you concentrate on this spell for the full duration, the transformation becomes permanent.\nShapechangers aren't affected by this spell. An unwilling creature can make a Wisdom saving throw, and if it succeeds, it isn't affected by this spell.\nCreature into Creature. If you turn a creature into another kind of creature, the new form can be any kind you choose whose challenge rating is equal to or less than the target's (or its level, if the target doesn't have a challenge rating). The target's game statistics, including mental ability scores, are replaced by the statistics of the new form. It retains its alignment and personality.\nThe target assumes the hit points of its new form, and when it reverts to its normal form, the creature returns to the number of hit points it had before it transformed. If it reverts as a result of dropping to 0 hit points, any excess damage carries over to its normal form. As long as the excess damage doesn't reduce the creature's normal form to 0 hit points, it isn't knocked unconscious.\nThe creature is limited in the actions it can perform by the nature of its new form, and it can't speak, cast spells, or take any other action that requires hands or speech unless its new form is capable of such actions.\nThe target's gear melds into the new form. The creature can't activate, use, wield, or otherwise benefit from any of its equipment.\nObject into Creature. You can turn an object into any kind of creature, as long as the creature's size is no larger than the object's size and the creature's challenge rating is 9 or lower. The creature is friendly to you and your companions. It acts on each of your turns. You decide what action it takes and how it moves. The DM has the creature's statistics and resolves all of its actions and movement.\nIf the spell becomes permanent, you no longer control the creature. It might remain friendly to you, depending on how you have treated it.\nCreature into Object. If you turn a creature into an object, it transforms along with whatever it is wearing and carrying into that form. The creature's statistics become those of the object, and the creature has no memory of time spent in this form, after the spell ends and it returns to its normal form.","emote":"transforms the target into a different creature or object","save":{"ability":"Wisdom"}},{"name":"True Resurrection","level":9,"school":"Necromancy","castingTime":"1 hour","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a sprinkle of holy water and diamonds worth at least 25,000gp, which the spell consumes","materialCost":25000},"duration":"Instantaneous","description":"You touch a creature that has been dead for no longer than 200 years and that died for any reason except old age. If the creature's soul is free and willing, the creature is restored to life with all its hit points.\nThis spell closes all wounds, neutralizes any poison, cures all diseases, and lifts any curses affecting the creature when it died. The spell replaces damaged or missing organs and limbs. If the creature was undead, it is restored to its non-undead form.\nThe spell can even provide a new body if the original no longer exists, in which case you must speak the creature's name. The creature then appears in an unoccupied space you choose within 10 feet of you.","emote":"attempts to return a creature to life"},{"name":"True Seeing","level":6,"school":"Divination","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"an ointment for the eyes that costs 25gp; is made from mushroom powder, saffron, and fat; and is consumed by the spell","materialCost":25},"duration":"1 hour","description":"This spell gives the willing creature you touch the ability to see things as they actually are. For the duration, the creature has truesight, notices secret doors hidden by magic, and can see into the Ethereal Plane, all out to a range of 120 feet.","emote":"grants the ability to see things as they actually are"},{"name":"True Strike","level":0,"school":"Divination","castingTime":"1 action","range":"30 feet","components":{"somatic":true},"concentration":true,"duration":"up to 1 round","description":"You extend your hand and point a finger at a target in range. Your magic grants you a brief insight into the target's defenses. On your next turn, you gain advantage on your first attack roll against the target, provided that this spell hasn't ended.","emote":"points a finger at the target and {{GENDER_PRONOUN_HIS_HER}} magic grants {{GENDER_PRONOUN_HIM_HER}} a brief insight into the target's defenses"},{"name":"Unseen Servant","level":1,"school":"Conjuration","ritual":true,"castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a piece of string and a bit of wood"},"duration":"1 hour","description":"This spell creates an invisible, mindless, shapeless force that performs simple tasks at your command until the spell ends. The servant springs into existence in an unoccupied space on the ground within range. It has AC 10, 1 hit point, and a Strength of 2, and it can't attack. If it drops to 0 hit points, the spell ends.\nOnce on each of your turns as a bonus action, you can mentally command the servant to move up to 15 feet and interact with an object. The servant can perform simple tasks that a human servant could do, such as fetching things, cleaning, mending, folding clothes, lighting fires, serving food, and pouring wind. Once you give the command, the servant performs the task to the best of its ability until it completes the task, then waits for your next command.\nIf you command the servant to perform a task that would move it more than 60 feet away from you, the spell ends.","emote":"creates an invisible, mindless, shapeless force that performs simple tasks at your command"},{"name":"Vampiric Touch","level":3,"school":"Necromancy","castingTime":"1 action","range":"Self","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"The touch of your shadow-wreathed hand can siphon life force from others to heal your wounds. Make a melee spell attack against a creature within your reach. On a hit, the target takes 3d6 necrotic damage, and you regain hit points equal to half the amount of necrotic damage dealt. Until the spell ends, you can make the attack again on each of your turns as an action.","higherLevel":"When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d6 for each slot level above 3rd.","emote":"siphons life force from others with a touch of {{GENDER_PRONOUN_HIS_HER}} shadow-wreathed hand","attack":{"type":"melee","damage":"3d6","damageType":"necrotic","higherLevelDice":1}},{"name":"Vicious Mockery","level":0,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true},"duration":"Instantaneous","description":"You unleash a string of insults laced with subtle enchantments at a creature you can see within range. If the target can hear you (though it need not understand you), it must succeed on a Wisdom saving throw or take 1d4 psychic damage and have disadvantage on the next attack roll it makes before the end of its next turn.","higherLevel":"This spell's damage increases by 1d4 when you reach 5th level (2d4), 11th level (3d4), and 17th level (4d4).","emote":"unleashes a string of insults laced with subtle enchantments","save":{"ability":"Wisdom","damage":"((@{level} + 1) / 6 + 0.5)d4","damageType":"psychic"}},{"name":"Wall of Fire","level":4,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a small piece of phosphorus"},"concentration":true,"duration":"up to 1 minute","description":"You create a wall of fire on a solid surface within range. You can make the wall up to 60 feet long, 20 feet high, and 1 foot thick, or a ringed wall up to 20 feet in diameter, 20 feet high, and 1 foot thick. The wall is opaque and lasts for the duration.\nWhen the wall appears, each creature within its area must make a Dexterity saving throw. On a failed save, a creature takes 5d8 fire damage, or half as much damage on a successful save.\nOne side of the wall, selected by you when you cast this spell, deals 5d8 fire damage to each creature that ends its turn within 10 feet of that side or inside the wall. A creature takes the same damage when it enters the wall for the first time on a turn or ends its turn there. The other side of the wall deals no damage.","higherLevel":"When you cast this spell using a spell slot of 5th level or higher, the damage increases by 1d8 for each slot level above 4th.","emote":"creates a wall of fire","save":{"ability":"Dexterity","damage":"5d8","damageType":"fire","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Wall of Force","level":5,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pinch of powder made by crushing a clear gemstone"},"concentration":true,"duration":"up to 10 minutes","description":"An invisible wall of force springs into existence at a point you choose within range. The wall appears in any orientation you choose, as a horizontal or vertical barrier or at an angle. It can be free floating or resting on a solid surface. You can form it into a hemispherical dome or a sphere with a radius of up to 10 feet, or you can shape a flat surface made up of ten 10-foot-by-10-foot panels. Each panel must be contiguous with another panel. In any form, the wall is 1/4 inch thick. It lasts for the duration. If the wall cuts through a creature's space when it appears, the creature is pushed to one side of the wall (your choice which side).\nNothing can physically pass through the wall. It is immune to all damage and can't be dispelled by dispel magic. A disintegrate spell destroys the wall instantly, however. The wall also extends into the Ethereal Plane, blocking ethereal travel through the wall.","emote":"causes a wall of force to spring into existence"},{"name":"Wall of Ice","level":6,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a small piece of quartz"},"concentration":true,"duration":"up to 10 minutes","description":"You create a wall of ice on a solid surface within range. You can form it into a hemispherical dome or a sphere with a radius of up to 10 feet, or you can shape a flat surface made up of ten 10-foot-square panels. Each panel must be contiguous with another panel. In any form, the wall is 1 foot thick and lasts for the duration.\nIf the wall cuts through a creature's space when it appears, the creature within its area is pushed to one side of the wall and must make a Dexterity saving throw. On a failed save, the creature takes 10d6 cold damage, or half as much damage on a successful save.\nThe wall is an object that can be damaged and thus breached. It has AC 12 and 30 hit points per 10-foot section, and it is vulnerable to fire damage. Reducing a 10-foot section of wall to 0 hit points destroys it and leaves behind a sheet of frigid air in the space the wall occupied. A creature moving through the sheet of frigid air for the first time on a turn must make a Constitution saving throw. That creature takes 5d6 cold damage on a failed save, or half as much damage on a successful one.","higherLevel":"When you cast this spell using a spell slot of 7th level or higher, the damage the wall deals when it appears increases by 2d6, and the damage from passing through the sheet of frigid air increases by 1d6, for each slot level above 6th.","emote":"creates a wall of ice","save":{"ability":"Dexterity","damage":"10d6","damageType":"cold","saveSuccess":"half damage","higherLevelDice":2}},{"name":"Wall of Stone","level":5,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a small block of granite"},"concentration":true,"duration":"up to 10 minutes","description":"A nonmagical wall of solid stone springs into existence at a point you choose within range. The wall is 6 inches thick and is composed of ten 10-foot-by-10-foot panels. Each panel must be contiguous with at least one other panel. Alternatively, you can create 10-foot-by-20-foot panels that are only 3 inches thick.\nIf the wall cuts through a creature's space when it appears, the creature is pushed to one side of the wall (your choice). If a creature would be surrounded on all sides by the wall (or the wall and another solid surface), that creature can make a Dexterity saving throw. On a success, it can use its reaction to move up to its speed so that it is no longer enclosed by the wall.\nThe wall can have any shape you desire, though it can't occupy the same space as a creature or object. The wall doesn't need to be vertical or rest on any firm foundation. It must, however, merge with and be solidly supported by existing stone. Thus, you can use this spell to bridge a chasm or create a ramp.\nIf you create a span greater than 20 feet in length, you must halve the size of each panel to create supports. You can crudely shape the wall to create crenellations, battlements, and so on.\nThe wall is an object made of stone that can be damaged and thus breached. Each panel has AC 15 and 30 hit points per inch of thickness. Reducing a panel to 0 hit points destroys it and might cause connected panels to collapse at the DM's discretion.\nIf you maintain your concentration on this spell for its whole duration, the wall becomes permanent and can't be dispelled. Otherwise, the wall disappears when the spell ends.","emote":"causes a nonmagical wall of solid stone to spring into existence","save":{"ability":"Dexterity","saveSuccess":"it can use its reaction to move up to its speed so that it is no longer enclosed by the wall"}},{"name":"Wall of Thorns","level":6,"school":"Conjuration","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a handful of thorns"},"concentration":true,"duration":"up to 10 minutes","description":"You create a wall of tough, pliable, tangled brush bristling with needle-sharp thorns. The wall appears within range on a solid surface and lasts for the duration. You choose to make the wall up to 60 feet long, 10 feet high, and 5 feet thick or a circle that has a 20-foot diameter and is up to 20 feet high and 5 feet thick. The wall blocks line of sight.\nWhen the wall appears, each creature within its area must make a Dexterity saving throw. On a failed save, a creature takes 7d8 piercing damage, or half as much damage on a successful save.\nA creature can move through the wall, albeit slowly and painfully. For every 1 foot a creature moves through the wall, it must spend 4 feet of movement. Furthermore, the first time a creature enters the wall on a turn or ends its turn there, the creature must make a Dexterity saving throw. It takes 7d8 slashing damage on a failed save, or half as much damage on a successful one.","higherLevel":"When you cast this spell using a spell slot of 7th level or higher, both types of damage increase by 1d8 for each slot level above 6th.","emote":"creates a wall of tough, pliable, tangled brush bristling with needle-sharp thorns","save":{"ability":"Dexterity","damage":"7d8","damageType":"piercing","saveSuccess":"half damage","higherLevelDice":1}},{"name":"Warding Bond","level":2,"school":"Abjuration","castingTime":"1 action","range":"Touch","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a pair of platinum rings worth at least 50gp each, which you and the target must wear for the duration","materialCost":50},"duration":"1 hour","description":"This spell wards a willing creature you touch and creates a mystic connection between you and the target until the spell ends. While the target is within 60 feet of you, it gains a +1 bonus to AC and saving throws, and it has resistance to all damage. Also, each time it takes damage, you take the same amount of damage.\nThe spell ends if you drop to 0 hit points or if you and the target become separated by more than 60 feet.\nIt also ends if the spell is cast again on either of the connected creatures. You can also dismiss the spell as an action.","emote":"creatres a mystic bond between {{GENDER_PRONOUN_HIMSELF_HERSELF}} and the target"},{"name":"Water Breathing","level":3,"school":"Transmutation","ritual":true,"castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a short piece of reed or straw"},"duration":"24 hours","description":"This spell gives a maximum of ten willing creatures within range and you can see, the ability to breathe underwater until the end of its term. Affected creatures also retain their normal breathing pattern.","emote":"and {{GENDER_PRONOUN_HIS_HER}} allies can breathe water"},{"name":"Water Walk","level":3,"school":"Transmutation","ritual":true,"castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true},"duration":"1 hour","description":"This spell grants the ability to move across any liquid surface—such as water, acid, mud, snow, quicksand, or lava—as if it were harmless solid ground (creatures crossing molten lava can still take damage from the heat). Up to ten willing creatures you can see within range gain this ability for the duration.\nIf you target a creature submerged in a liquid, the spell carries the target to the surface of the liquid at a rate of 60 feet per round.","emote":"and {{GENDER_PRONOUN_HIS_HER}} allies can nimbly walk across liquid surfaces"},{"name":"Web","level":2,"school":"Conjuration","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a bit of spiderweb"},"concentration":true,"duration":"up to 1 hour","description":"You conjure a mass of thick, sticky webbing at a point of your choice within range. The webs fill a 20-foot cube from that point for the duration. The webs are difficult terrain and lightly obscure their area.\nIf the webs aren't anchored between two solid masses (such as walls or trees) or layered across a floor, wall, or ceiling, the conjured web collapses on itself, and the spell ends at the start of your next turn. Webs layered over a flat surface have a depth of 5 feet.\nEach creature that starts its turn in the webs or that enters them during its turn must make a Dexterity saving throw. On a failed save, the creature is restrained as long as it remains in the webs or until it breaks free.\nA creature restrained by the webs can use its action to make a Strength check against your spell save DC. If it succeeds, it is no longer restrained.\nThe webs are flammable. Any 5-foot cube of webs exposed to fire burns away in 1 round, dealing 2d4 fire damage to any creature that starts its turn in the fire.","emote":"conjures a mass of thick, sticky webbing","save":{"ability":"Dexterity"}},{"name":"Weird","level":9,"school":"Illusion","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true},"concentration":true,"duration":"up to 1 minute","description":"Drawing on the deepest fears of a group of creatures, you create illusory creatures in their minds, visible only to them. Each creature in a 30-foot-radius sphere centered on a point of your choice within range must make a Wisdom saving throw. On a failed save, a creature becomes frightened for the duration. The illusion calls on the creature's deepest fears, manifesting its worst nightmares as an implacable threat. At the end of each of the frightened creature's turns, it must succeed on a Wisdom saving throw or take 4d10 psychic damage. On a successful save, the spell ends for that creature.","emote":"draws on the deepest fears of a group of creatures to create illusory creatures in their minds, visible only to them","save":{"ability":"Wisdom"}},{"name":"Wind Walk","level":6,"school":"Transmutation","castingTime":"1 minute","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"fire and holy water"},"duration":"8 hours","description":"You and up to ten willing creatures you can see within range assume a gaseous form for the duration, appearing as wisps of cloud. While in this cloud form, a creature has a flying speed of 300 feet and has resistance to damage from nonmagical weapons. The only actions a creature can take in this form are the Dash action or to revert to its normal form. Reverting takes 1 minute, during which time a creature is incapacitated and can't move. Until the spell ends, a creature can revert to cloud form, which also requires the 1-minute transformation.\nIf a creature is in cloud form and flying when the effect ends, the creature descends 60 feet per round for 1 minute until it lands, which it does safely. If it can't land after 1 minute, the creature falls the remaining distance.","emote":"and {{GENDER_PRONOUN_HIS_HER}} allies assume a gaseous form"},{"name":"Wind Wall","level":3,"school":"Evocation","castingTime":"1 action","range":"120 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a tiny fan and a feather of exotic origin"},"concentration":true,"duration":"up to 1 minute","description":"A wall of strong wind rises from the ground at a point you choose within range. You can make the wall up to 50 feet long, 15 feet high, and 1 foot thick. You can shape the wall in any way you choose so long as it makes one continuous path along the ground. The wall lasts for the duration.\nWhen the wall appears, each creature within its area must make a Strength saving throw. A creature takes 3d8 bludgeoning damage on a failed save, or half as much damage on a successful one.\nThe strong wind keeps fog, smoke, and other gases at bay. Small or smaller flying creatures or objects can't pass through the wall. Loose, lightweight materials brought into the wall fly upward. Arrows, bolts, and other ordinary projectiles launched at targets behind the wall are deflected upward and automatically miss. (Boulders hurled by giants or siege engines, and similar projectiles, are unaffected.) Creatures in gaseous form can't pass through it.","emote":"causes a wall of strong wind rises from the ground","save":{"ability":"Strength","damage":"3d8","damageType":"bludgeoning","saveSuccess":"half damage"}},{"name":"Wish","level":9,"school":"Conjuration","castingTime":"1 action","range":"Self","components":{"verbal":true},"duration":"Instantaneous","description":"Wish is the mightiest spell a mortal creature can cast. By simply by speaking aloud, you can alter the very foundations of reality as you wish.\nThe basic use of this spell is to duplicate any other spell of 8th level or lower. You don't need to meet any requirements in that spell, including costly components. The spell simply takes effect. Alternatively, you can create one of the following effects of your choice:\n- You create one object of up to 25,000 gp in value that isn't a magic item. The object can be no more than 300 feet in any dimension, and it appears in an unoccupied space you can see on the ground.\n- You allow up to twenty creatures that you can see to regain all hit points, and you end all effects on them described in the greater restoration spell.\n- You grant up to ten creatures that you can see resistance to a damage type you choose.\n- You grant up to ten creatures you can see immunity to a single spell or other magical effect for 8 hours. For instance, you could make yourself and all your companions immune to a lich's life drain attack.\n- You undo a single recent event by forcing a reroll of any roll made within the last round (including your last turn). Reality reshapes itself to accommodate the new result. For example, a wish spell could undo an opponent's successful save, a foe's critical hit, or a friend's failed save. You can force the reroll to be made with advantage or disadvantage, and you can choose whether to use the reroll or the original roll.\nYou might be able to achieve something beyond the scope of the above examples. State your wish to the DM as precisely as possible. The DM has great latitude in ruling what occurs in such an instance; the greater the wish, the greater the likelihood that something goes wrong. This spell might simply fail, the effect you desire might only be partly achieved, or you might suffer some unforeseen consequence as a result of how you worded the wish. For example, wishing that a villain were dead might propel you forward in time to a period when that villain is no longer alive, effectively removing you from the game. Similarly, wishing for a legendary magic item or artifact might instantly transport you to the presence of the item's current owner.\nThe stress of casting this spell to produce any effect other than duplicating another spell weakens you. After enduring that stress, each time you cast a spell until you finish a long rest, you take 1d10 necrotic damage per level of that spell. This damage can't be reduced or prevented in any way. In addition, your Strength drops to 3, if it isn't 3 or lower already, for 2d4 days. For each of those days that you spend resting and doing nothing more than light activity, your remaining recovery time decreases by 2 days. Finally, there is a 33 percent chance that you are unable to cast wish ever again if you suffer this stress.","emote":"wishes for {{GENDER_PRONOUN_HIS_HER}} deepest desire"},{"name":"Witch Bolt","level":1,"school":"Evocation","castingTime":"1 action","range":"30 feet","components":{"verbal":true,"somatic":true,"material":true,"materialMaterial":"a twig from a tree that has been struck by lightning"},"concentration":true,"duration":"up to 1 minute","description":"A beam of crackling, blue energy lances out toward a creature within range, forming a sustained arc of lightning between you and the target. Make a ranged spell attack against that creature. On a hit, the target takes 1d12 lightning damage, and on each of your turns for the duration, you can use your action to deal 1d12 lightning damage to the target automatically. The spell ends if you use your action to do anything else. The spell also ends if the target is ever outside the spell's range or if it has total cover from you.","higherLevel":"When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d12 for each slot level above 1st.","emote":"evokes a beam of crackling, blue energy that lances out toward a creature. It forms a sustained arc of lightning.","attack":{"type":"ranged","damage":"1d12","damageType":"lightning","higherLevelDice":1}},{"name":"Word of Recall","level":6,"school":"Conjuration","castingTime":"1 action","range":"5 feet","components":{"verbal":true},"duration":"Instantaneous","description":"You and up to five willing creatures within 5 feet of you instantly teleport to a previously designated sanctuary. You and any creatures that teleport with you appear in the nearest unoccupied space to the spot you designated when you prepared your sanctuary (see below). If you cast this spell without first preparing a sanctuary, the spell has no effect.\nYou must designate a sanctuary by casting this spell within a location, such as a temple, dedicated to or strongly linked to your deity. If you attempt to cast the spell in this manner in an area that isn't dedicated to your deity, the spell has no effect.","emote":"chants \"there's no place like home\""},{"name":"Zone of Truth","level":2,"school":"Enchantment","castingTime":"1 action","range":"60 feet","components":{"verbal":true,"somatic":true},"duration":"10 minutes","description":"You create a magical zone that guards against deception in a 15-foot-radius sphere centered on a point of your choice within range. Until the spell ends, a creature that enters the spell's area for the first time on a turn or starts its turn there must make a Charisma saving throw. On a failed save, a creature can't speak a deliberate lie while in the radius. You know whether each creature succeeds or fails on its saving throw.\nAn affected creature is aware of the fate and can avoid answering questions she would normally have responded with a lie. Such a creature can remain evasive in his answers as they remain within the limits of truth.","emote":"creates a magical zone that guards against deception","save":{"ability":"Charisma"}}]});
});

var ShapedScripts =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const Roll20 = __webpack_require__(1);
	const parseModule = __webpack_require__(3);
	const Logger = __webpack_require__(4);
	const EntityLookup = __webpack_require__(5);
	const EntityLookupResultReporter = __webpack_require__(7);
	const Reporter = __webpack_require__(8);
	const makeCommandProc = __webpack_require__(9);
	const AbilityMaker = __webpack_require__(11);
	const ConfigUI = __webpack_require__(15);
	const AdvantageTracker = __webpack_require__(16);
	const RestManager = __webpack_require__(17);
	const UsesManager = __webpack_require__(18);
	const AmmoManager = __webpack_require__(19);
	const Importer = __webpack_require__(20);
	const DeathSaveManager = __webpack_require__(21);
	const HDManager = __webpack_require__(22);
	const FXManager = __webpack_require__(23);
	const SpellManager = __webpack_require__(24);
	const TokenBarConfigurer = __webpack_require__(26);
	const srdConverter = __webpack_require__(28);
	const UserError = __webpack_require__(10);
	const EventDispatcher = __webpack_require__(29);
	const ChatWatcher = __webpack_require__(27);
	const Utils = __webpack_require__(6);
	const _ = __webpack_require__(2);
	const ShapedConfig = __webpack_require__(13);
	const EntityLister = __webpack_require__(30);
	const MonsterManager = __webpack_require__(31);


	const roll20 = new Roll20();
	const myState = roll20.getState('ShapedScripts');
	const logger = new Logger('5eShapedCompanion', roll20);
	const entityLookup = new EntityLookup(logger);
	const reporter = new Reporter(roll20, 'Shaped Scripts');

	const MINIMUM_SHEET_VERSION = '11.0.0';
	const SHEET_API_VERSION = '1';

	const errorHandler = function errorHandler(e) {
	  logger.prefixString = '';
	  if (typeof e === 'string' || e instanceof parseModule.ParserError || e instanceof UserError) {
	    reporter.reportError(e);
	    logger.error('Error: $$$', e.toString());
	  }
	  else {
	    logger.error(e.toString());
	    logger.error(e.stack);
	    reporter.reportError('An error occurred. Please see the log for more details.');
	  }
	};

	roll20.logWrap = 'roll20';
	logger.wrapModule(entityLookup);
	logger.wrapModule(roll20);
	logger.wrapModule(srdConverter);
	const moduleList = getModuleList();

	roll20.on('ready', () => {
	  logger.info('-=> ShapedScripts v8.1.0 <=-');
	  const character = roll20.createObj('character', { name: 'SHAPED_VERSION_TESTER' });
	  const campaignSize = roll20.findObjs({}).length;
	  const delay = Math.max(2000, Math.floor(campaignSize / 20));
	  logger.debug('Campaign size: $$$', campaignSize);
	  roll20.createAttrWithWorker(character.id, 'sheet_opened', 1, () => {
	    setTimeout(() => {
	      const version = roll20.getAttrByName(character.id, 'version');
	      const sheetAPIVersion = roll20.getAttrByName(character.id, 'script_compatibility_version');
	      logger.info('Detected sheet version as : $$$', version);

	      const ed = new EventDispatcher(roll20, errorHandler, logger, reporter);
	      const cw = new ChatWatcher(roll20, logger, ed);
	      const commandProc = makeCommandProc('shaped', roll20, errorHandler, ed, version, logger);

	      if (Utils.versionCompare(version, MINIMUM_SHEET_VERSION) < 0) {
	        const error = `Incompatible sheet version ${version}. You need at least version ${MINIMUM_SHEET_VERSION} to ` +
	          'use this script. Please install an updated sheet.';
	        reporter.reportError(error);
	        logger.error(error);
	        commandProc.setDefaultCommandHandler(() => reporter.reportError(error));
	        return;
	      }


	      if (SHEET_API_VERSION !== sheetAPIVersion) {
	        const error = 'WARNING: Character sheet has been updated with breaking changes that this version of the ' +
	          'Companion Script does not yet support. Some features may not work as expected. Please check for an ' +
	          'updated version of the script.';
	        reporter.reportError(error);
	        logger.error(error);
	      }

	      const sc = new ShapedConfig({ roll20, reporter, logger, myState });
	      sc.configure(commandProc, cw, ed);
	      sc.runStartupSequence(commandProc, () => {
	        commandProc.setDefaultCommandHandler(cmd =>
	          reporter.reportError(`Unknown command ${cmd}`));
	        moduleList.forEach(module => module.configure(commandProc, cw, ed));
	        _.invoke(roll20.findObjs({ type: 'character', name: 'SHAPED_VERSION_TESTER' }), 'remove');
	      });
	    }, delay);
	  });
	});

	module.exports = {
	  addEntities(entities) {
	    const elrr = new EntityLookupResultReporter(logger, reporter);
	    try {
	      if (typeof entities === 'string') {
	        entities = JSON.parse(entities);
	      }

	      entityLookup.addEntities(entities, elrr);
	    }
	    catch (e) {
	      reporter.reportError('JSON parse error, please see log for more information');
	      logger.error(e.toString());
	      logger.error(e.stack);
	    }
	  },
	};

	function getModuleList() {
	  const deps = {
	    roll20,
	    reporter,
	    logger,
	    myState,
	    parseModule,
	    srdConverter,
	    entityLookup,
	  };


	  return []
	    .concat(new AbilityMaker(deps))
	    .concat(new TokenBarConfigurer(deps))
	    .concat(new EntityLister(deps))
	    .concat(new Importer(deps))
	    .concat(new SpellManager(deps))
	    .concat(new ConfigUI(deps))
	    .concat(new AdvantageTracker(deps))
	    .concat(new UsesManager(deps))
	    .concat(new RestManager(deps))
	    .concat(new AmmoManager(deps))
	    .concat(new MonsterManager(deps))
	    .concat(new DeathSaveManager(deps))
	    .concat(new HDManager(deps))
	    .concat(new FXManager(deps));
	}


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/* globals state, createObj, findObjs, getObj, getAttrByName, sendChat, on, log, Campaign, playerIsGM, spawnFx,
	 spawnFxBetweenPoints, filterObjs, randomInteger, setDefaultTokenForCharacter, onSheetWorkerCompleted */
	'use strict';
	const _ = __webpack_require__(2);

	// noinspection JSUnusedLocalSymbols
	module.exports = class Roll20 {

	  getState(module) {
	    if (!state[module]) {
	      state[module] = {};
	    }
	    return state[module];
	  }

	  createObj(type, attributes) {
	    return createObj(type, attributes);
	  }

	  findObjs(attributes, options) {
	    return findObjs(attributes, options);
	  }

	  filterObjs(attributes) {
	    return filterObjs(attributes);
	  }

	  getObj(type, id) {
	    return getObj(type, id);
	  }

	  getOrCreateObj(type, attributes) {
	    const newAttributes = _.extend(_.clone(attributes), { type });
	    const existing = this.findObjs(newAttributes);
	    switch (existing.length) {
	      case 0:
	        return this.createObj(type, newAttributes);
	      case 1:
	        return existing[0];
	      default:
	        throw new Error(`Asked for a single ${type} but more than 1 was found matching attributes: ` +
	          `${JSON.stringify(attributes)}. Found attributes: ${JSON.stringify(existing)}`);
	    }
	  }

	  getAttrByName(character, attrName, valueType) {
	    return getAttrByName(character, attrName, valueType);
	  }

	  checkCharacterFlag(character, flag) {
	    const value = this.getAttrByName(character, flag);
	    switch (typeof value) {
	      case 'boolean':
	        return value;
	      case 'number':
	        return !!value;
	      default:
	        return value === '1' || value === 'on';
	    }
	  }

	  getAttrObjectByName(character, attrName) {
	    const attr = this.findObjs({ type: 'attribute', characterid: character, name: attrName },
	      { caseInsensitive: true });
	    return attr && attr.length > 0 ? attr[0] : null;
	  }

	  getOrCreateAttr(characterId, attrName) {
	    return this.getOrCreateObj('attribute', { characterid: characterId, name: attrName });
	  }

	  setAttrByName(characterId, attrName, value) {
	    this.getOrCreateAttr(characterId, attrName).set('current', value);
	  }

	  processAttrValue(characterId, attrName, cb) {
	    const attribute = this.getOrCreateAttr(characterId, attrName);
	    const newVal = cb(attribute.get('current'));
	    attribute.set('current', newVal);
	    return newVal;
	  }

	  getRepeatingSectionAttrs(characterId, sectionName) {
	    const prefix = `repeating_${sectionName}`;
	    return _.filter(this.findObjs({ type: 'attribute', characterid: characterId }),
	      attr => attr.get('name').indexOf(prefix) === 0);
	  }

	  getRepeatingSectionItemIdsByName(characterId, sectionName) {
	    const re = new RegExp(`repeating_${sectionName}_([^_]+)_name$`);
	    return _.reduce(this.getRepeatingSectionAttrs(characterId, sectionName),
	      (lookup, attr) => {
	        const match = attr.get('name').match(re);
	        if (match) {
	          lookup[attr.get('current').toLowerCase()] = match[1];
	        }
	        return lookup;
	      }, {});
	  }

	  getCurrentPage(playerId) {
	    let pageId;
	    if (this.playerIsGM(playerId)) {
	      pageId = this.getObj('player', playerId).get('lastpage');
	    }
	    else {
	      pageId = this.getCampaign().get('playerspecificpages')[playerId] || this.getCampaign().get('playerpageid');
	    }

	    return pageId ? this.getObj('page', pageId) : null;
	  }

	  spawnFx(pointsArray, fxType, pageId) {
	    switch (pointsArray.length) {
	      case 1:
	        spawnFx(pointsArray[0].x, pointsArray[0].y, fxType, pageId);
	        break;
	      case 2:
	        spawnFxBetweenPoints(pointsArray[0], pointsArray[1], fxType, pageId);
	        break;
	      default:
	        throw new Error('Wrong number of points supplied to spawnFx: $$$', pointsArray);
	    }
	  }

	  playerIsGM(playerId) {
	    return playerIsGM(playerId);
	  }

	  getCampaign() {
	    return Campaign(); // eslint-disable-line
	  }

	  sendChat(sendAs, message, callback, options) {
	    return sendChat(sendAs, message, callback, options);
	  }

	  on(event, callback) {
	    return on(event, callback);
	  }

	  randomInteger(max) {
	    return randomInteger(max);
	  }

	  log(msg) {
	    return log(msg);
	  }

	  setDefaultTokenForCharacter(character, token) {
	    return setDefaultTokenForCharacter(character, token);
	  }

	  onSheetWorkerCompleted(cb) {
	    onSheetWorkerCompleted(cb);
	  }

	  setAttrWithWorker(character, attrName, attrValue, cb) {
	    const attr = this.getOrCreateAttr(character, attrName);
	    if (cb) {
	      onSheetWorkerCompleted(cb);
	    }
	    attr.setWithWorker({ current: attrValue });
	  }

	  createAttrWithWorker(character, attrName, attrValue, cb) {
	    const attr = this.createObj('attribute', { characterid: character, name: attrName });
	    if (cb) {
	      onSheetWorkerCompleted(cb);
	    }
	    attr.setWithWorker({ current: attrValue });
	  }
	};



/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = _;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);

	/**
	 * A specification of a field that can appear
	 * in the format that this parser processes
	 * @typedef {Object} FieldSpec
	 * @property {FieldSpec[]} [contentModel] - list of child fieldSpecs for complex content
	 * @property {boolean} [bare] - if true this field appears as a bare value with no parseToken in front of it
	 * @property {string} [parseToken] - the token that defines the beginning of this field (usually case insensitive). Not
	 *   used for bare tokens.
	 * @property {string} [pattern] - a pattern that defines the value of this field. For bare properties this will
	 *   determine if the field matches at all, whereas for normal ones this will just be used to validate them
	 * @property {number} [forNextMatchGroup] - the 1-based index of the match group from the supplied pattern that will
	 *   contain text that should be handed to the next parser rather than used as part of this field.
	 * @property {number} [forPreviousMatchGroup] - the 1-based index of the match group from the supplied pattern that
	 *   will contain text that should be handed to the previous parser to complete its value rather than used as part of
	 *   this field. Only applicable to bare properties, since ones with a token have a clearly defined start based on the
	 *   parseToken
	 * @property {number} [matchGroup=0] - the index of the capturing group in the supplied pattern to use as the value for
	 *   this field. If left at the default of 0, the whole match will be used.
	 * @property {boolean} [caseSensitive=false] - If true, the pattern used for the value of this field will be made case
	 *   sensitive. Note that parseToken matching is always case insensitive.
	 * @property {string} type - the type of this field. Currently valid values are [orderedContent, unorderedContent,
	 *   string, enumType, integer, abililty]
	 * @property {string[]} enumValues - an array of valid values for this field if the type is enumType
	 * @property {number} [minOccurs=1] - the minimum number of times this field should occur in the parent content model.
	 * @property {number} [maxOccurs=1] - the maximum number of times this field should occur in the parent content model.
	 */


	/**
	 *
	 * @param {FieldSpec} formatSpec - Root format specification for this parser
	 * @param logger - Logger object to use for reporting errors etc.
	 * @returns {{parse: ((*))}} - A parser that will process text in the format specified by the supplied formatSpec into
	 *   JSON objects
	 */
	function getParser(formatSpec, logger) {
	  // noinspection JSUnusedGlobalSymbols
	  const parserModule = {

	    makeContentModelParser(fieldSpec, ordered) {
	      const module = this;
	      return {
	        parse(stateManager, textLines, resume) {
	          const parseState = stateManager.enterChildParser(this, resume);
	          let someMatch = false;
	          let canContinue;
	          let stopParser = null;

	          parseState.subParsers = parseState.subParsers || module.makeParserList(fieldSpec.contentModel);


	          if (parseState.resumeParser) {
	            if (!parseState.resumeParser.resumeParse(stateManager, textLines)) {
	              stateManager.leaveChildParser(this);
	              return false;
	            }

	            someMatch = true;
	          }

	          function parseRunner(parser, index, parsers) {
	            if (!parser.parse(stateManager, textLines)) {
	              if (parser.required === 0 || !ordered) {
	                // No match but it's ok to keep looking
	                // through the rest of the content model for one
	                return false;
	              }

	              // No match but one was required here by the content model
	            }
	            else {
	              parser.justMatched = true;
	              if (parser.required > 0) {
	                parser.required--;
	              }
	              parser.allowed--;
	              if (ordered) {
	                // Set all the previous parsers to be exhausted since we've matched
	                // this one and we're in a strictly ordered content model.
	                _.each(parsers.slice(0, index), _.partial(_.extend, _, { allowed: 0 }));
	              }
	            }
	            return true;
	          }

	          do {
	            stopParser = _.find(parseState.subParsers, parseRunner);
	            logger.debug('Stopped at parser $$$', stopParser);
	            canContinue = stopParser && stopParser.justMatched;
	            if (stopParser) {
	              someMatch = someMatch || stopParser.justMatched;
	              stopParser.justMatched = false;
	            }

	            // Lose any parsers that have used up all their cardinality already
	            parseState.subParsers = _.reject(parseState.subParsers, { allowed: 0 });
	          } while (!_.isEmpty(parseState.subParsers) && !_.isEmpty(textLines) && canContinue);

	          stateManager.leaveChildParser(this, someMatch ? parseState : undefined);

	          return someMatch;
	        },

	        resumeParse(stateManager, textLines) {
	          return this.parse(stateManager, textLines, true);
	        },
	        complete(parseState/* , finalText*/) {
	          const missingContent = _.filter(parseState.subParsers, 'required');
	          if (!_.isEmpty(missingContent)) {
	            throw new MissingContentError(missingContent);
	          }
	        },
	      };
	    },

	    matchParseToken(myParseState, textLines) {
	      if (_.isEmpty(textLines) || this.bare) {
	        return !_.isEmpty(textLines);
	      }

	      const re = new RegExp(`^(.*?)(${this.parseToken})(?:[\\s.]+|$)`, 'i');
	      const match = textLines[0].match(re);
	      if (match) {
	        logger.debug('Found match $$$', match[0]);
	        myParseState.forPrevious = match[1];
	        myParseState.text = '';
	        textLines[0] = textLines[0].slice(match[0].length).trim();
	        if (!textLines[0]) {
	          textLines.shift();
	        }
	      }

	      return !!match;
	    },

	    matchValue(myParseState, textLines) {
	      if (this.pattern && this.bare) {
	        // If this is not a bare value then we can take all the text up to next
	        // token and just validate it at the end. If it is, then the pattern itself
	        // defines whether this field matches and we must run it immediately.

	        if (_.isEmpty(textLines)) {
	          return false;
	        }
	        textLines[0] = textLines[0].trim();

	        const matchGroup = this.matchGroup || 0;
	        const re = new RegExp(this.pattern, this.caseSensitive ? '' : 'i');
	        logger.debug('$$$ attempting to match value [$$$] against regexp $$$', this.name, textLines[0], re.toString());
	        const match = textLines[0].match(re);

	        if (match) {
	          logger.debug('Successful match! $$$', match);
	          myParseState.text = match[matchGroup];
	          if (!myParseState.forPrevious && this.forPreviousMatchGroup) {
	            logger.debug('Setting forPrevious to  $$$', match[this.forPreviousMatchGroup]);
	            myParseState.forPrevious = match[this.forPreviousMatchGroup];
	          }
	          textLines[0] = textLines[0].slice(match.index + match[0].length);
	          if (this.forNextMatchGroup && match[this.forNextMatchGroup]) {
	            textLines[0] = match[this.forNextMatchGroup] + textLines[0];
	          }

	          if (!textLines[0]) {
	            myParseState.text += '\n';
	            textLines.shift();
	          }
	          return true;
	        }

	        logger.debug('Match failed');
	        return false;
	      }

	      logger.debug('$$$ standard string match, not using pattern', this.name);
	      myParseState.text = '';
	      return true;
	    },

	    orderedContent(fieldSpec) {
	      return this.makeContentModelParser(fieldSpec, true);
	    },

	    unorderedContent(fieldSpec) {
	      return this.makeContentModelParser(fieldSpec, false);
	    },

	    string(/* fieldSpec */) {
	      return this.makeSimpleValueParser();
	    },


	    enumType(fieldSpec) {
	      const parser = this.makeSimpleValueParser();

	      if (fieldSpec.bare) {
	        parser.matchValue = function matchValue(myParseState, textLines) {
	          const firstMatch = _.chain(fieldSpec.enumValues)
	              .map((enumValue) => {
	                logger.debug('Attempting to parse as enum property $$$', enumValue);
	                const pattern = `^(.*?)(${enumValue})(?:[\\s.]+|$)`;
	                const re = new RegExp(pattern, this.caseSensitive ? '' : 'i');
	                return textLines[0].match(re);
	              })
	              .compact()
	              .sortBy(match => match[1].length)
	              .first()
	              .value();


	          if (firstMatch) {
	            logger.debug('Finished trying to parse as enum property, match: $$$', firstMatch);
	            myParseState.text = firstMatch[2];
	            myParseState.forPrevious = firstMatch[1];
	            textLines[0] = textLines[0].slice(firstMatch.index + firstMatch[0].length);
	            if (!textLines[0]) {
	              textLines.shift();
	            }
	            return true;
	          }
	          return false;
	        };
	      }
	      return parser;
	    },

	    number(fieldSpec) {
	      const parser = this.makeSimpleValueParser();
	      parser.typeConvert = function typeConvert(textValue) {
	        const parts = textValue.split('/');
	        let intVal;
	        if (parts.length > 1) {
	          intVal = parts[0] / parts[1];
	        }
	        else {
	          intVal = parseInt(textValue, 10);
	        }

	        if (_.isNaN(intVal)) {
	          throw new BadValueError(fieldSpec.name, textValue, '[Integer]');
	        }
	        return intVal;
	      };
	      return parser;
	    },


	    ability(/* fieldSpec */) {
	      const parser = this.number();
	      parser.matchValue = function matchValue(parseState, textLines) {
	        if (_.isEmpty(textLines)) {
	          return false;
	        }
	        textLines[0] = textLines[0].trim();

	        const re = new RegExp('^([\\sa-z\\(\\)]*)(\\d+(?:\\s?\\([\\-+\\d]+\\))?)', 'i');
	        logger.debug('Attempting to match value [$$$] against regexp $$$', textLines[0].trim(), re.toString());
	        let match = textLines[0].match(re);

	        if (match) {
	          logger.debug('Successful match $$$', match);
	          parseState.text = match[2];
	          textLines[0] = match[1] + textLines[0].slice(match.index + match[0].length);
	          if (!textLines[0]) {
	            textLines.shift();
	          }
	          return true;
	        }
	        else if (textLines[1]) {
	          // Try and match against the next line in case we have a two line format
	          textLines[1] = textLines[1].trim();
	          match = textLines[1].match(/^(\d+)(?:\s?\([-+\d]+\))?/);
	          if (match) {
	            logger.debug('Successful ability match $$$ on next line - looks like two line format', match);
	            parseState.text = match[1];
	            textLines[1] = textLines[1].slice(match[0].length);
	            if (!textLines[0]) {
	              textLines.shift();
	            }
	            if (!textLines[0]) {
	              textLines.shift();
	            }
	            return true;
	          }
	        }
	        return false;
	      };

	      return parser;
	    },

	    heading(fieldSpec) {
	      fieldSpec.bare = true;
	      const parser = this.makeSimpleValueParser();
	      parser.skipOutput = true;
	      return parser;
	    },

	    makeSimpleValueParser() {
	      const module = this;
	      return {
	        parse(stateManager, textLines) {
	          const parseState = stateManager.enterChildParser(this);
	          const match = this.matchParseToken(parseState, textLines) &&
	              this.matchValue(parseState, textLines);
	          if (match) {
	            stateManager.completeCurrentStack(parseState.forPrevious);
	            delete parseState.forPrevious;
	            stateManager.leaveChildParser(this, parseState);
	          }
	          else {
	            stateManager.leaveChildParser(this);
	          }
	          return match;
	        },
	        complete(parseState, finalText) {
	          parseState.text += finalText || '';
	          if (parseState.text) {
	            parseState.value = this.extractValue(parseState.text);
	            parseState.value = this.typeConvert(parseState.value);
	            parseState.setOutputValue();
	          }
	        },
	        extractValue(text) {
	          text = text.trim();
	          if (this.pattern && !this.bare) {
	            const regExp = new RegExp(this.pattern, this.caseSensitive ? '' : 'i');
	            const match = text.match(regExp);
	            if (match) {
	              const matchGroup = this.matchGroup || 0;
	              return match[matchGroup];
	            }

	            throw new BadValueError(this.name, text, regExp);
	          }
	          else {
	            return text;
	          }
	        },
	        typeConvert(textValue) {
	          return textValue;
	        },
	        resumeParse(stateManager, textLines) {
	          if (_.isEmpty(textLines)) {
	            return false;
	          }
	          const parseState = stateManager.enterChildParser(this, true);
	          parseState.text += `${textLines.shift()}\n`;
	          stateManager.leaveChildParser(this, parseState);
	          return true;
	        },
	        matchParseToken: module.matchParseToken,
	        matchValue: module.matchValue,
	      };
	    },

	    makeBaseParseState(skipOutput, propertyPath, outputObject, completedObjects) {
	      return {
	        text: '',
	        getObjectValue() {
	          let value = outputObject;
	          const segments = _.clone(propertyPath);
	          while (segments.length) {
	            const prop = segments.shift();
	            if (prop.flatten) {
	              continue;
	            }
	            value = value[prop.name];
	            if (_.isArray(value)) {
	              value = _.last(value);
	            }
	          }
	          return value;
	        },
	        setOutputValue() {
	          if (skipOutput) {
	            return;
	          }
	          let outputTo = outputObject;
	          const segments = _.clone(propertyPath);
	          while (segments.length > 0) {
	            const prop = segments.shift();
	            if (prop.flatten) {
	              continue;
	            }

	            let currentValue = outputTo[prop.name];
	            let newValue = segments.length === 0 ? this.value : {};

	            if (_.isUndefined(currentValue) && prop.allowed > 1) {
	              currentValue = [];
	              outputTo[prop.name] = currentValue;
	            }

	            if (_.isArray(currentValue)) {
	              let arrayItem = _.find(currentValue, _.partial(_.negate(_.contains), completedObjects));
	              if (!arrayItem || (typeof arrayItem === 'string')) {
	                currentValue.push(newValue);
	                arrayItem = _.last(currentValue);
	              }
	              newValue = arrayItem;
	            }
	            else if (_.isUndefined(currentValue)) {
	              outputTo[prop.name] = newValue;
	            }
	            else if (segments.length === 0) {
	              throw new Error('Simple value property somehow already had value when we came to set it');
	            }
	            else {
	              newValue = currentValue;
	            }

	            outputTo = newValue;
	          }
	        },
	        logWrap: `parseState[${_.pluck(propertyPath, 'name').join('/')}]`,
	        toJSON() {
	          return _.extend(_.clone(this), { propertyPath });
	        },
	      };
	    },

	    makeParseStateManager() {
	      const incompleteParserStack = [];
	      const currentPropertyPath = [];
	      const completedObjects = [];
	      const module = this;
	      return {
	        outputObject: {},
	        leaveChildParser(parser, state) {
	          currentPropertyPath.pop();
	          if (state) {
	            state.resumeParser = _.isEmpty(incompleteParserStack) ? null : _.last(incompleteParserStack).parser;
	            incompleteParserStack.push({ parser, state });
	          }
	        },
	        completeCurrentStack(finalText) {
	          while (!_.isEmpty(incompleteParserStack)) {
	            const incomplete = incompleteParserStack.shift();
	            incomplete.parser.complete(incomplete.state, finalText);
	            const value = incomplete.state.getObjectValue();
	            if (_.isObject(value) && !incomplete.parser.flatten) {
	              // Crude but this list is unlikely to get that big
	              completedObjects.push(value);
	            }
	          }
	        },
	        enterChildParser(parser, resume) {
	          currentPropertyPath.push({
	            name: parser.name,
	            allowed: parser.allowed,
	            flatten: parser.flatten,
	          });

	          if (!resume || _.isEmpty(incompleteParserStack) || parser !== _.last(incompleteParserStack).parser) {
	            return module.makeBaseParseState(parser.skipOutput, _.clone(currentPropertyPath), this.outputObject,
	                completedObjects);
	          }

	          return incompleteParserStack.pop().state;
	        },
	        logWrap: 'parserState',
	        toJSON() {
	          return _.extend(_.clone(this), {
	            incompleteParsers: incompleteParserStack,
	            propertyPath: currentPropertyPath,
	          });
	        },
	      };
	    },

	    parserId: 0,
	    parserAttributes: [
	      'forPreviousMatchGroup', 'forNextMatchGroup',
	      'parseToken', 'flatten', 'pattern', 'matchGroup', 'bare', 'caseSensitive',
	      'name', 'skipOutput',
	    ],
	    getParserFor(fieldSpec) {
	      logger.debug('Making parser for field $$$', fieldSpec);
	      const parserBuilder = this[fieldSpec.type];
	      if (!parserBuilder) {
	        throw new Error(`Can't make parser for type ${fieldSpec.type}`);
	      }
	      const parser = parserBuilder.call(this, fieldSpec);
	      parser.required = _.isUndefined(fieldSpec.minOccurs) ? 1 : fieldSpec.minOccurs;
	      parser.allowed = _.isUndefined(fieldSpec.maxOccurs) ? 1 : fieldSpec.maxOccurs;
	      _.extend(parser, _.pick(fieldSpec, this.parserAttributes));
	      _.defaults(parser, {
	        parseToken: parser.name,
	      });
	      parser.id = this.parserId++;
	      parser.logWrap = `parser[${parser.name}]`;
	      return parser;
	    },


	    makeParserList(contentModelArray) {
	      const module = this;
	      return _.chain(contentModelArray)
	          .reject('noParse')
	          .reduce((parsers, fieldSpec) => {
	            parsers.push(module.getParserFor(fieldSpec));
	            return parsers;
	          }, [])
	          .value();
	    },

	    logWrap: 'parseModule',
	  };

	  logger.wrapModule(parserModule);

	  const parser = parserModule.getParserFor(formatSpec);
	  return {
	    parse(text) {
	      logger.debug('Text: $$$', text);
	      logger.debug(parser);

	      const result = {
	        version: formatSpec.formatVersion,
	        monsters: [],
	      };

	      text.split('**********\n').forEach((statblock) => {
	        const textLines = _.chain(statblock.split('\n'))
	            .invoke('trim')
	            .compact()
	            .value();
	        const stateManager = parserModule.makeParseStateManager();
	        let success = false;
	        try {
	          success = parser.parse(stateManager, textLines);
	          while (success && !_.isEmpty(textLines)) {
	            success = parser.resumeParse(stateManager, textLines);
	          }
	          stateManager.completeCurrentStack(textLines.join('\n'));
	        }
	        catch (e) {
	          e.statblock = statblock;
	          throw e;
	        }


	        if (success && textLines.length === 0) {
	          logger.info(stateManager.outputObject);
	          result.monsters.push(stateManager.outputObject.monsters[0]);
	        }
	      });

	      return result;
	    },
	  };
	}

	/**
	 * @constructor
	 */
	function ParserError(message) {
	  // noinspection JSUnusedGlobalSymbols
	  this.message = message;
	}
	ParserError.prototype = new Error();

	/**
	 * @constructor
	 */
	function MissingContentError(missingFieldParsers) {
	  this.missingFieldParsers = missingFieldParsers;
	  this.message = '<ul>';
	  this.message += _.reduce(this.missingFieldParsers, (memo, parser) =>
	          `${memo}<li>Field ${parser.parseToken} should have appeared ${parser.required} more times</li>`
	      , '');
	  this.message += '</ul>';
	}
	MissingContentError.prototype = new ParserError();

	/**
	 * @constructor
	 */
	function BadValueError(name, value, pattern) {
	  this.name = name;
	  this.value = value;
	  this.pattern = pattern;
	  // noinspection JSUnusedGlobalSymbols
	  this.message = `Bad value [${this.value}] for field [${this.name}]. Should have matched pattern: ${this.pattern}`;
	}
	BadValueError.prototype = new ParserError();

	module.exports = {
	  getParser,
	  MissingContentError,
	  BadValueError,
	  ParserError,
	};


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);

	function stringify(object) {
	  if (object === undefined) {
	    return object;
	  }

	  return typeof object === 'string' ? object : JSON.stringify(object, (key, value) =>
	      (key !== 'logWrap' && key !== 'isLogWrapped' ? value : undefined)
	    );
	}

	function wrapFunctions(object, moduleName, makeWrapper) {
	  const funcs = getAllFuncs(object);
	  return _.each(funcs, funcName => (object[funcName] = makeWrapper(funcName, object[funcName], moduleName)));
	}

	function getAllFuncs(obj) {
	  let props = [];
	  let current = obj;
	  do {
	    props = props.concat(Object.getOwnPropertyNames(current));
	  } while ((current = Object.getPrototypeOf(current)) && current !== Object.prototype);

	  return props.sort()
	    .filter((e, i, arr) => (e !== arr[i + 1] && (typeof obj[e] === 'function') && obj[e] !== obj.constructor));
	}

	module.exports = class Logger {
	  constructor(loggerName, roll20) {
	    this.prefixString = '';
	    const state = roll20.getState('roll20-logger');
	    state[loggerName] = state[loggerName] || Logger.levels.INFO;

	    roll20.on('chat:message', (msg) => {
	      if (msg.type === 'api' && msg.content.startsWith('!logLevel')) {
	        const parts = msg.content.split(/\s/);
	        if (parts.length > 2) {
	          if (!state[parts[1]]) {
	            roll20.sendChat('Logger', `Unrecognised logger name ${parts[1]}`);
	            return;
	          }
	          state[parts[1]] = Logger.levels[parts[2].toUpperCase()] || Logger.levels.INFO;
	        }
	      }
	    });

	    function shouldLog(level) {
	      return level <= state[loggerName];
	    }

	    function outputLog(level, message) {
	      if (!shouldLog(level)) {
	        return;
	      }

	      const args = arguments.length > 2 ? _.toArray(arguments).slice(2) : [];
	      let processedMessage = stringify(message);
	      if (processedMessage) {
	        processedMessage = processedMessage.replace(/\$\$\$/g, () => stringify(args.shift()));
	      }
	      // noinspection NodeModulesDependencies
	      roll20.log(`${loggerName} ${Date.now()} ` +
	        `${Logger.getLabel(level)} : ${shouldLog(Logger.levels.TRACE) ? this.prefixString : ''}` +
	        `${processedMessage}`);
	    }

	    _.each(Logger.levels, (level, levelName) => {
	      this[levelName.toLowerCase()] = _.partial(outputLog, level);
	    });

	    this.wrapModule = function wrapModule(modToWrap) {
	      if (shouldLog(Logger.levels.TRACE)) {
	        wrapFunctions(modToWrap, modToWrap.logWrap, this.wrapFunction.bind(this));
	        modToWrap.isLogWrapped = true;
	      }
	      return modToWrap;
	    };

	    this.getLogLevel = function getLogLevel() {
	      return state[loggerName] || Logger.levels.INFO;
	    };

	    this.setLogLevel = function setLogLevel(level) {
	      if (typeof level === 'string') {
	        level = Logger.levels[level.toUpperCase()];
	      }
	      if (typeof level === 'number' && level >= Logger.levels.OFF && level <= Logger.levels.TRACE) {
	        state[loggerName] = level;
	      }
	    };

	    this.getLogTap = function getLogTap(level, messageString) {
	      return _.partial(outputLog, level, messageString);
	    };

	    this.wrapFunction = function wrapFunction(name, func, moduleName) {
	      if (shouldLog(Logger.levels.TRACE)) {
	        if (name === 'toJSON' || moduleName === 'roll20' && name === 'log') {
	          return func;
	        }
	        const logger = this;
	        return function functionWrapper() {
	          logger.trace('$$$.$$$ starting with this value: $$$ and args $$$', moduleName, name, this, arguments);
	          logger.prefixString = `${logger.prefixString}  `;
	          const retVal = func.apply(this, arguments);
	          logger.prefixString = logger.prefixString.slice(0, -2);
	          logger.trace('$$$.$$$ ending with return value $$$', moduleName, name, retVal);
	          if (retVal && retVal.logWrap && !retVal.isLogWrapped) {
	            logger.wrapModule(retVal);
	          }
	          return retVal;
	        };
	      }
	      return func;
	    };
	  }

	  static getLabel(logLevel) {
	    const logPair = _.chain(Logger.levels).pairs().find(pair => pair[1] === logLevel).value();
	    return logPair ? logPair[0] : 'UNKNOWN';
	  }

	  static get levels() {
	    return {
	      OFF: 0,
	      ERROR: 1,
	      WARN: 2,
	      INFO: 3,
	      DEBUG: 4,
	      TRACE: 5,
	    };
	  }
	};


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const Utils = __webpack_require__(6);


	module.exports = class EntityLookup {
	  constructor(logger) {
	    this.entities = {};
	    this.noWhiteSpaceEntities = {};
	    this.entityProcessors = {};
	    this.versionCheckers = {};
	    this.processedEntityGroupNames = [];
	    this.deferredEntityGroups = [];
	    this.lastEntityLoadTime = 0;
	    this.timerId = null;
	    this.logger = logger;
	  }


	  configureEntity(entityName, processors, versionChecker) {
	    this.entities[entityName] = {};
	    this.noWhiteSpaceEntities[entityName] = {};
	    this.entityProcessors[entityName] = processors || [];
	    this.versionCheckers[entityName] = versionChecker || _.constant(true);
	    this.entityProcessors[entityName].push((entityInfo) => {
	      entityInfo.entity.source = entityInfo.source;
	      return entityInfo;
	    });
	  }

	  addEntities(entitiesObject, resultReporter) {
	    try {
	      entitiesObject.name = entitiesObject.name || 'unnamed';
	      const results = {
	        errors: [],
	        entityGroupName: entitiesObject.name,
	      };
	      this.logger.debug('Attempting to add entity group $$$', entitiesObject.name);

	      if (entitiesObject.dependencies && !_.isEmpty(entitiesObject.dependencies)) {
	        if (typeof entitiesObject.dependencies === 'string') {
	          entitiesObject.dependencies = entitiesObject.dependencies.split(/,/)
	            .map(Function.prototype.call, String.prototype.trim);
	        }
	        if (!_.isEmpty(_.difference(entitiesObject.dependencies, this.processedEntityGroupNames))) {
	          this.logger.debug('Deferring processing of $$$ as deps aren\'t met', entitiesObject.name);
	          this.deferredEntityGroups.push(entitiesObject);
	          return;
	        }
	      }

	      _.chain(entitiesObject)
	        .omit('version', 'patch', 'name', 'dependencies')
	        .each((entityArray, type) => {
	          results[type] = {
	            withErrors: [],
	            skipped: [],
	            deleted: [],
	            patched: [],
	            merged: [],
	            added: [],
	          };

	          if (!this.entities[type]) {
	            results.errors.push({ entity: 'general', errors: [`Unrecognised entity type ${type}`] });
	            return;
	          }

	          if (!this.versionCheckers[type](entitiesObject.version, results.errors)) {
	            return;
	          }


	          _.each(entityArray, (entity) => {
	            let key = entity.name.toLowerCase();
	            let operation = this.entities[type][key] ? (entitiesObject.patch ? 'patched' : 'merged') : 'added';

	            if (operation === 'patched') {
	              entity = patchEntity(this.entities[type][key], entity);
	              if (!entity) {
	                operation = 'deleted';
	                delete this.entities[type][key];
	                delete this.noWhiteSpaceEntities[type][key.replace(/\s+/g, '')];
	              }
	            }
	            else if (operation === 'merged') {
	              entity = mergeEntity(this.entities[type][key], entity);
	              if (!entity) {
	                operation = 'skipped';
	              }
	            }

	            if (_.contains(['patched', 'added', 'merged'], operation)) {
	              const processed = _.reduce(this.entityProcessors[type], Utils.executor, {
	                entity,
	                lookup: (otherType, name) =>
	                  (name ? this.entities[otherType][name.toLowerCase()] : _.values(this.entities[otherType])),
	                type,
	                source: entitiesObject.name,
	                version: entitiesObject.version,
	                errors: [],
	              });
	              if (!_.isEmpty(processed.errors)) {
	                processed.entity = processed.entity.name;
	                results.errors.push(processed);
	                operation = 'withErrors';
	              }
	              else {
	                if (processed.entity.name.toLowerCase() !== key) {
	                  results[type].deleted.push(key);
	                  delete this.entities[type][key];
	                  delete this.noWhiteSpaceEntities[type][key.replace(/\s+/g, '')];
	                  key = processed.entity.name.toLowerCase();
	                }
	                this.entities[type][key] = processed.entity;
	                this.noWhiteSpaceEntities[type][key.replace(/\s+/g, '')] = processed.entity;
	              }
	            }


	            results[type][operation].push(key);
	          });
	        });

	      this.processedEntityGroupNames.push(entitiesObject.name);
	      if (resultReporter) {
	        resultReporter.report(results);
	      }
	      this.deferredEntityGroups = _.without(this.deferredEntityGroups, entitiesObject);
	    }
	    finally {
	      this.lastEntityLoadTime = Date.now();
	      this.checkForUnresolvedDependencies(resultReporter);
	    }
	  }

	  checkForUnresolvedDependencies(resultReporter, timerExpired) {
	    if (this.checkingDeps) {
	      return;
	    }
	    try {
	      this.logger.debug('Checking for newly met deps');
	      this.checkingDeps = true;
	      this.deferredEntityGroups.forEach((deferred) => {
	        if (_.isEmpty(_.difference(deferred.dependencies, this.processedEntityGroupNames))) {
	          this.addEntities(deferred, resultReporter);
	        }
	      });

	      if (!timerExpired) {
	        clearTimeout(this.timerId);
	        this.timerId = _.delay(this.checkForUnresolvedDependencies.bind(this), 10000, resultReporter, true);
	      }
	      else if (resultReporter) {
	        this.deferredEntityGroups.forEach((deferred) => {
	          const missingDeps = _.difference(deferred.dependencies, this.processedEntityGroupNames);
	          resultReporter.report({
	            errors: [{
	              entity: 'Missing dependencies',
	              errors: [`Entity group is missing dependencies [${missingDeps.join(', ')}]`],
	            }],
	            entityGroupName: deferred.name,
	          });
	        });
	      }
	    }
	    finally {
	      this.checkingDeps = false;
	    }
	  }

	  findEntity(type, name, tryWithoutWhitespace) {
	    const key = name.toLowerCase();
	    if (!this.entities[type]) {
	      throw new Error(`Unrecognised entity type ${type}`);
	    }
	    let found = this.entities[type][key];
	    if (!found && tryWithoutWhitespace) {
	      found = this.noWhiteSpaceEntities[type][key.replace(/\s+/g, '')];
	    }
	    return found && Utils.deepClone(found);
	  }

	  hasEntities(type) {
	    return !!this.entities[type];
	  }

	  searchEntities(type, criteria) {
	    function containsSomeIgnoreCase(array, testValues) {
	      testValues = (_.isArray(testValues) ? testValues : [testValues]).map(s => s.toLowerCase());
	      return !!_.chain(array)
	        .map(s => s.toLowerCase())
	        .intersection(testValues)
	        .value().length;
	    }

	    return _.reduce(criteria, (results, criterionValue, criterionField) => {
	      const stringMatcher = (value) => {
	        const matchers = (_.isArray(criterionValue) ? criterionValue : [criterionValue])
	          .map(cv => new RegExp(cv, 'i'));
	        return matchers.some(matcher => value.match(matcher));
	      };
	      const matcher = (entity) => {
	        const value = entity[criterionField];
	        switch (typeof value) {
	          case 'string':
	            return stringMatcher(value);
	          case 'boolean':
	          case 'number':
	            return _.isArray(criterionValue) ? _.contains(criterionValue, value) : value === criterionValue;
	          case 'object':
	            return _.isArray(value) && containsSomeIgnoreCase(value, criterionValue);
	          default:
	            return false;
	        }
	      };
	      return results.filter(matcher);
	    }, this.getAll(type));
	  }

	  getAll(type) {
	    if (!this.entities[type]) {
	      throw new Error(`Unrecognised entity type: ${type}`);
	    }
	    return Utils.deepClone(_.values(this.entities[type]).sort((e1, e2) => e1.name.localeCompare(e2.name)));
	  }

	  /**
	   * Gets all of the keys for the specified entity type
	   * @param {string} type - The entity type to retrieve keys for (either 'monster' or 'spell')
	   * @param {boolean} sort - True if the returned array should be sorted alphabetically; false otherwise
	   * @function
	   * @public
	   * @name EntityLookup#getKeys
	   * @return {Array} An array containing all keys for the specified entity type
	   */
	  getKeys(type, sort) {
	    if (!this.entities[type]) {
	      throw new Error(`Unrecognised entity type: ${type}`);
	    }
	    const keys = _.keys(this.entities[type]);
	    if (sort) {
	      keys.sort();
	    }
	    return keys;
	  }

	  toJSON() {
	    return { monsterCount: _.size(this.entities.monsters), spellCount: _.size(this.entities.spells) };
	  }

	  get logWrap() {
	    return 'entityLookup';
	  }

	  static jsonValidatorAsEntityProcessor(jsonValidator, removeFields) {
	    return function jsonValidatorEntityProcessor(entityInfo) {
	      const wrapper = {
	        version: entityInfo.version,
	      };
	      wrapper[entityInfo.type] = [_.omit(entityInfo.entity, removeFields)];
	      const errors = jsonValidator.validate(wrapper);
	      const flattenedErrors = _.chain(errors).values().flatten().value();
	      entityInfo.errors = entityInfo.errors.concat(flattenedErrors);
	      return entityInfo;
	    };
	  }

	  static jsonValidatorAsVersionChecker(jsonValidator, entityType) {
	    return EntityLookup.getVersionChecker(jsonValidator.getVersionNumber(), entityType);
	  }

	  static getVersionChecker(requiredVersion, entityType) {
	    function pruneToMinor(versionString) {
	      return versionString.split('.', 2).join('.');
	    }

	    return function versionChecker(version, errorsArray) {
	      const prunedVersion = pruneToMinor(version);
	      const prunedRequiredVersion = pruneToMinor(requiredVersion);
	      const valid = prunedVersion === prunedRequiredVersion;
	      if (!valid) {
	        errorsArray.push({
	          entity: 'general',
	          errors: [`Incorrect ${entityType} data format version: [${version}]. Required is: ${requiredVersion}.` +
	          'This probably means you need to download an updated version to be compatible with the latest version of' +
	          ' the Companion Script.'],
	        });
	      }
	      return valid;
	    };
	  }


	};

	function patchEntity(original, patch) {
	  if (patch.remove) {
	    return undefined;
	  }
	  return _.mapObject(original, (propVal, propName) => {
	    if (propName === 'name' && patch.newName) {
	      return patch.newName;
	    }
	    return patch[propName] || propVal;
	  });
	}

	function mergeEntity(original, toMerge) {
	  let failed = false;
	  const merged = _.mapObject(original, (propVal, propName) => {
	    if (propName !== 'name' && toMerge[propName]) {
	      if (_.isArray(toMerge[propName]) && _.isArray(propVal)) {
	        const partition = _.partition(toMerge[propName],
	          entry => propVal.find(existing => existing.name && (existing.name === entry.name)));
	        const updates = partition[0];
	        const additions = partition[1];

	        const newList = propVal.map((existing) => {
	          const update = updates.find(entry => entry.name === existing.name);
	          if (update) {
	            const innerMerged = mergeEntity(existing, update);
	            if (!innerMerged) {
	              failed = true;
	            }
	            return failed ? null : innerMerged;
	          }
	          return existing;
	        });
	        newList.push.apply(newList, additions);
	        return newList;
	      }
	      failed = true;
	    }
	    return original[propName];
	  });
	  _.defaults(merged, toMerge);
	  return failed ? null : merged;
	}



/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);

	const generateUUID = (function _generateUUID() {
	  let a = 0;
	  const b = [];
	  return function generateUUIDInternal() {
	    let c = (new Date()).getTime();
	    const d = c === a;
	    a = c;
	    const e = new Array(8);
	    let f;
	    for (f = 7; f >= 0; f--) {
	      e[f] = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz'.charAt(c % 64);
	      c = Math.floor(c / 64);
	    }
	    c = e.join('');
	    if (d) {
	      for (f = 11; f >= 0 && b[f] === 63; f--) {
	        b[f] = 0;
	      }
	      b[f]++;
	    }
	    else {
	      for (f = 0; f < 12; f++) {
	        b[f] = Math.floor(64 * Math.random());
	      }
	    }
	    for (f = 0; f < 12; f++) {
	      c += '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz'.charAt(b[f]);
	    }
	    return c;
	  };
	}());

	module.exports = class Utils {
	  static deepExtend(original, newValues) {
	    if (!original) {
	      original = _.isArray(newValues) ? [] : {};
	    }
	    _.each(newValues, (value, key) => {
	      if (_.isArray(original[key])) {
	        if (!_.isArray(value)) {
	          original[key].push(value);
	        }
	        else {
	          original[key] = _.map(value, (item, index) => {
	            if (_.isObject(item)) {
	              return this.deepExtend(original[key][index], item);
	            }

	            return item !== undefined ? item : original[key][index];
	          });
	        }
	      }
	      else if (_.isObject(original[key])) {
	        original[key] = this.deepExtend(original[key], value);
	      }
	      else {
	        original[key] = value;
	      }
	    });
	    return original;
	  }

	  static createObjectFromPath(pathString, value) {
	    const newObject = {};
	    _.reduce(pathString.split(/\./), (object, pathPart, index, pathParts) => {
	      const match = pathPart.match(/([^.[]*)(?:\[(\d+)])?/);
	      const newVal = index === pathParts.length - 1 ? value : {};

	      if (match[2]) {
	        object[match[1]] = [];
	        object[match[1]][match[2]] = newVal;
	      }
	      else {
	        object[match[1]] = newVal;
	      }
	      return newVal;
	    }, newObject);
	    return newObject;
	  }

	  static getObjectFromPath(obj, path) {
	    path = path.replace(/\[(\w+)]/g, '.$1'); // convert indexes to properties
	    path = path.replace(/^\./, '');           // strip a leading dot
	    path.split('.').every(segment => (obj = obj[segment]));
	    return obj;
	  }

	  static deepClone(object) {
	    return JSON.parse(JSON.stringify(object));
	  }

	  static executor() {
	    switch (arguments.length) {
	      case 0:
	        return undefined;
	      case 1:
	        return arguments[0]();
	      default:
	      // Fall through
	    }
	    const args = Array.apply(null, arguments).slice(2);
	    args.unshift(arguments[0]);
	    return arguments[1].apply(null, args);
	  }

	  /**
	   * Gets a string as 'Title Case' capitalizing the first letter of each word (i.e. 'the grapes of wrath' -> 'The
	   * Grapes Of Wrath')
	   * @param {string} s - The string to be converted
	   * @return {string} the supplied string in title case
	   */
	  static toTitleCase(s) {
	    return s.replace(/\w\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());
	  }

	  static toOptionsString(options) {
	    return options.reduce((optionString, option) => {
	      if (_.isObject(option)) {
	        return `${optionString} --${option.name} ${option.value}`;
	      }

	      return `${optionString} --${option}`;
	    }, '');
	  }

	  /**
	   * Calculates a contrasting color using YIQ luma value
	   * @param {string} hexcolor - the color to calculate a contrasting color for
	   * @return {string} either 'white' or 'black' as determined to be the best contrasting text color for the input color
	   */
	  static getContrastYIQ(hexcolor) {
	    hexcolor = hexcolor.replace('#', '');
	    if (hexcolor.length === 3) {
	      hexcolor += hexcolor;
	    }
	    const r = parseInt(hexcolor.substr(0, 2), 16);
	    const g = parseInt(hexcolor.substr(2, 2), 16);
	    const b = parseInt(hexcolor.substr(4, 2), 16);
	    const yiq = (r * 299 + g * 587 + b * 114) / 1000;
	    return yiq >= 128 ? 'black' : 'white';
	  }

	  /**
	   * Builds an html element as a string using the specified options
	   * @param {string} tag - the html tag type
	   * @param innerHtml - can be a string to be used as the element inner html, or a {tag, innerHtml, attrs} object
	   *                    in order to build a child html element string
	   * @param attrs - a collection of attributes and their values to be applied to the html element
	   * @return {string} the full html element as a string
	   */
	  static buildHTML(tag, innerHtml, attrs) {
	    if (typeof innerHtml === 'object') {
	      innerHtml = _.map(innerHtml, html => html && this.buildHTML(html.tag, html.innerHtml, html.attrs)).join('');
	    }

	    let h = `<${tag}`;
	    h += _.chain(attrs)
	      .map((attrVal, attrName) => attrVal !== false && ` ${attrName}="${attrVal}"`)
	      .compact()
	      .value()
	      .join('');

	    if (innerHtml) {
	      h += `>${innerHtml}</${tag}>`;
	    }
	    else {
	      h += '/>';
	    }

	    return h;
	  }

	  static missingParam(name) {
	    throw new Error(`Parameter ${name} is required`);
	  }

	  static flattenObject(object) {
	    return _.reduce(object, (explodedProps, propVal, propKey) => {
	      if (_.isObject(propVal)) {
	        return _.extend(explodedProps, this.flattenObject(propVal));
	      }

	      explodedProps[propKey] = propVal;
	      return explodedProps;
	    }, {});
	  }

	  static extendWithArrayValues(into, from) {
	    return _.reduce(from, (merged, value, key) => {
	      if (_.isUndefined(value) || value === null || (_.isObject(value) && _.isEmpty(value))) {
	        return merged;
	      }

	      if (_.isUndefined(merged[key])) {
	        merged[key] = value;
	      }
	      else {
	        if (!_.isArray(merged[key])) {
	          merged[key] = [merged[key]];
	        }
	        merged[key] = merged[key].concat(value);
	      }
	      return merged;
	    }, into);
	  }

	  static combine(array) {
	    if (array.length < 2) {
	      return array.map(i => `${i}`);
	    }
	    const restCombined = this.combine(_.rest(array));
	    return [`${array[0]}`].concat(restCombined.map(item => `${array[0]};${item}`)).concat(restCombined);
	  }

	  static cartesianProductOf() {
	    return _.reduce(arguments, (a, b) => _.flatten(_.map(a, x => _.map(b, y => x.concat([y]))), true), [[]]);
	  }

	  static generateRowID() {
	    return generateUUID().replace(/_/g, 'Z');
	  }

	  static camelToSnakeCase(string) {
	    return string.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
	  }

	  static versionCompare(v1, v2) {
	    if (!v1 || !v2) {
	      if (!v1) {
	        return v2 ? -1 : 0;
	      }
	      return 1;
	    }
	    return _.zip(v1.split('.'), v2.split('.'))
	      .reduce((result, versionPart) => result || (parseInt(versionPart[0], 10) - parseInt(versionPart[1], 10)), 0);
	  }

	  static getFixedSort(fixedOrder) {
	    return (item1, item2) => {
	      if (item1 === item2) {
	        return 0;
	      }
	      return fixedOrder.find(entry => entry === item1 || entry === item2) === item1 ? -1 : 1;
	    };
	  }
	};


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);

	module.exports = class EntityLookupResultReporter {

	  constructor(logger, reporter) {
	    this.report = function report(result) {
	      const summary = _.mapObject(result, (resultObject, type) => {
	        if (type === 'errors') {
	          return resultObject.length;
	        }

	        return _.mapObject(resultObject, operationResultArray => operationResultArray.length);
	      });
	      logger.info('Summary of adding $$$ entity group to the lookup: $$$', result.entityGroupName, summary);
	      logger.debug('Details: $$$', result);
	      if (!_.isEmpty(result.errors)) {
	        const message = _.chain(result.errors)
	            .groupBy('entity')
	            .mapObject(entityErrors =>
	                _.chain(entityErrors)
	                    .pluck('errors')
	                    .flatten()
	                    .value()
	            )
	            .map((errors, entityName) => `<li>${entityName}:<ul><li>${errors.join('</li><li>')}</li></ul></li>`)
	            .value();

	        reporter.reportError(`JSON import error for ${result.entityGroupName} entity group:<ul>${message}</ul>`);
	      }
	    };
	  }
	};


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);

	function makeNormalMessage(heading, text) {
	  return `&{template:5e-shaped} {{title=${heading}}}{{content=${text}}}`;
	}

	function makeErrorMessage(scriptName, text) {
	  return makeNormalMessage(`${scriptName} Error`, text);
	}

	function makeStreamHeader(heading) {
	  return `<div class="stream-header">${heading}</div>`;
	}

	function makeStreamBody(text) {
	  return `<div class="stream-body">${text}</div>`;
	}

	function makeStreamFooter() {
	  return '<div class="stream-footer"></div>';
	}


	class Reporter {

	  constructor(roll20, scriptName) {
	    this.roll20 = roll20;
	    this.scriptName = scriptName;
	  }

	  reportPublic(heading, text) {
	    this.sendPublic(`${makeNormalMessage(heading, text)}`);
	  }

	  reportPlayer(heading, text, playerId) {
	    this.sendToPlayerAndGm(`${makeNormalMessage(heading, text)}`, playerId);
	  }

	  reportCharacter(heading, text, characterId) {
	    this.sendCharacter(characterId, makeNormalMessage(heading, text));
	  }

	  reportError(text, playerId) {
	    this.sendToPlayerAndGm(makeErrorMessage(this.scriptName, text), playerId);
	  }

	  sendPublic(text) {
	    this.roll20.sendChat('', text);
	  }

	  sendPlayer(text, playerId) {
	    this.roll20.sendChat('', `/w ${this.getPlayerName(playerId)} ${text}`, null, { noarchive: true });
	  }

	  sendToPlayerAndGm(text, playerId) {
	    this.roll20.sendChat('', `/w GM ${text}`, null, { noarchive: true });
	    if (playerId && !this.roll20.playerIsGM(playerId)) {
	      this.roll20.sendChat('', `/w ${this.getPlayerName(playerId)} ${text}`, null, { noarchive: true });
	    }
	  }

	  getPlayerName(playerId) {
	    return playerId ? `"${this.roll20.getObj('player', playerId).get('displayname')}"` : 'gm';
	  }

	  sendCharacter(characterId, text) {
	    const charName = this.roll20.getObj('character', characterId).get('name');
	    this.roll20.sendChat('', `/w "${charName}" ${text}`);
	  }


	  getMessageBuilder(heading, isPublic, playerId) {
	    const fields = { title: heading };
	    const reporter = this;
	    return {
	      addField(name, content) {
	        fields[name] = content;
	        return this;
	      },
	      display() {
	        const displayer = isPublic ? reporter.sendPublic : reporter.sendToPlayerAndGm;
	        displayer.bind(reporter)(_.reduce(fields, (text, content, name) => `${text}{{${name}=${content}}}`,
	          '&{template:5e-shaped}'), playerId);
	      },
	    };
	  }

	  getMessageStreamer(heading, playerId) {
	    const sendChat = (text) => {
	      this.roll20.sendChat('', `/w ${this.getPlayerName(playerId)} ${text}`, null, { noarchive: true });
	    };

	    sendChat(makeStreamHeader(heading));
	    return {
	      stream(message) {
	        sendChat(makeStreamBody(message));
	      },
	      finish() {
	        sendChat(makeStreamFooter());
	      },
	    };
	  }

	  toJSON() {
	    return {
	      scriptName: this.scriptName,
	    };
	  }
	}


	module.exports = Reporter;


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const Utils = __webpack_require__(6);
	const UserError = __webpack_require__(10);


	function getParser(optionString, validator) {
	  return function parseOptions(arg, errors, options) {
	    const argParts = arg.split(/\s+/);
	    if (argParts[0].toLowerCase() === optionString.toLowerCase()) {
	      const value = argParts.length === 1 ? true : argParts.slice(1).join(' ');
	      const result = validator(value);
	      if (result.valid) {
	        options[argParts[0]] = result.converted;
	      }
	      else {
	        errors.push(`Invalid value [${value}] for option [${argParts[0]}]`);
	      }
	      return true;
	    }
	    return false;
	  };
	}

	function getObjectParser(specObject) {
	  return function parseOptions(arg, errors, options) {
	    const argParts = arg.split(/\s+/);
	    const newObject = Utils.createObjectFromPath(argParts[0], argParts.slice(1).join(' '));

	    const comparison = { spec: specObject, actual: newObject };
	    while (comparison.spec) {
	      const key = _.keys(comparison.actual)[0];
	      const spec = comparison.spec[key];
	      if (!spec) {
	        return false;
	      }
	      if (_.isFunction(comparison.spec[key])) {
	        const result = comparison.spec[key](comparison.actual[key]);
	        if (result.valid) {
	          comparison.actual[key] = result.converted;
	          Utils.deepExtend(options, newObject);
	        }
	        else {
	          errors.push(`Invalid value [${comparison.actual[key]}] for option [${argParts[0]}]`);
	        }
	        return true;
	      }
	      else if (_.isArray(comparison.actual[key])) {
	        const newVal = [];
	        newVal[comparison.actual[key].length - 1] = comparison.spec[key][0];
	        comparison.spec = newVal;
	        comparison.actual = comparison.actual[key];
	      }
	      else {
	        comparison.spec = comparison.spec[key];
	        comparison.actual = comparison.actual[key];
	      }
	    }
	    return false;
	  };
	}

	/**
	 * @constructor
	 */

	class Command {
	  constructor(root, handler, roll20, name, gmOnly, logger) {
	    this.root = root;
	    this.handler = handler;
	    this.parsers = [];
	    this.roll20 = roll20;
	    this.name = name;
	    this.gmOnly = gmOnly;
	    this.logger = logger;
	  }


	  option(optionString, validator, required) {
	    let parser;
	    if (_.isFunction(validator)) {
	      parser = getParser(optionString, validator);
	    }
	    else if (_.isObject(validator)) {
	      const dummy = {};
	      dummy[optionString] = validator;
	      parser = getObjectParser(dummy);
	    }
	    else {
	      throw new Error(`Bad validator [${validator}] specified for option ${optionString}`);
	    }
	    parser.required = required;
	    parser.optName = optionString;
	    this.parsers.push(parser);
	    return this;
	  }

	  options(optsSpec) {
	    _.each(optsSpec, (validator, key) => this.option(key, validator));
	    return this;
	  }

	  optionLookup(groupName, lookup, required) {
	    if (typeof lookup !== 'function') {
	      lookup = _.propertyOf(lookup);
	    }
	    const parser = (arg, errors, options) => {
	      const singleResolved = lookup(arg, options);
	      if (singleResolved) {
	        options[groupName] = options[groupName] || [];
	        options[groupName].push.apply(options[groupName],
	          _.isArray(singleResolved) ? singleResolved : [singleResolved]);
	        return true;
	      }


	      const results = _.chain(arg.split(','))
	        .map(_.partial(_.result, _, 'trim'))
	        .uniq()
	        .reduce((memo, name) => {
	          const resolvedPart = lookup(name, options);
	          if (resolvedPart) {
	            memo.resolved.push(resolvedPart);
	          }
	          else {
	            memo.errors.push(`Unrecognised item ${name} for option group ${groupName}`);
	          }
	          return memo;
	        }, { errors: [], resolved: [] })
	        .value();

	      if (!_.isEmpty(results.resolved)) {
	        options[groupName] = results.resolved;
	        errors.push.apply(errors, results.errors);
	        return true;
	      }
	      return false;
	    };
	    parser.optName = groupName;
	    parser.required = required;
	    this.parsers.push(parser);
	    return this;
	  }

	  handle(args, selection, cmdString, playerIsGM, playerId, requiredCharVersion) {
	    if (!playerIsGM && this.gmOnly) {
	      throw new UserError('You must be a GM to run this command');
	    }
	    const caches = {};
	    const startOptions = {
	      errors: [],
	    };
	    Object.defineProperty(startOptions, 'getCache', {
	      enumerable: false,
	      value: function getCache(key) {
	        return (caches[key] = caches[key] || {});
	      },
	    });
	    Object.defineProperty(startOptions, 'clearCache', {
	      enumerable: false,
	      value: function clearCache(key) {
	        delete caches[key];
	      },
	    });

	    startOptions.selected =
	      this.selectionSpec && processSelection(selection || [], this.selectionSpec, this.roll20, requiredCharVersion);
	    const finalOptions = _.chain(args)
	      .reduce((options, arg) => {
	        if (!_.some(this.parsers, parser => parser(arg, options.errors, options))) {
	          options.errors.push(`Unrecognised or poorly formed option ${arg}`);
	        }

	        return options;
	      }, startOptions)
	      .each((propVal, propName, obj) => {
	        // NB Cannot use omit or it will remove the getCache property
	        if (_.isUndefined(propVal)) {
	          delete obj[propName];
	        }
	      })
	      .value();

	    if (finalOptions.errors.length > 0) {
	      throw finalOptions.errors.join('\n');
	    }
	    delete finalOptions.errors;


	    const missingOpts = _.chain(this.parsers)
	      .where({ required: true })
	      .pluck('optName')
	      .difference(_.keys(finalOptions))
	      .value();

	    if (!_.isEmpty(missingOpts)) {
	      throw new UserError(`Command ${cmdString} was missing options: [${missingOpts.join(',')}]`);
	    }

	    if (!playerIsGM) {
	      const characters = _.compact([].concat(finalOptions.selected && finalOptions.selected.character)
	        .concat(finalOptions.character));
	      characters.forEach((character) => {
	        const controlledby = character.get('controlledby');
	        if (!controlledby || (controlledby.indexOf(playerId) === -1 && controlledby.indexOf('all') === -1)) {
	          throw new UserError(`You do not have permission to make changes to character ${character.get('name')}`);
	        }
	      });
	    }
	    finalOptions.playerId = playerId;
	    this.logger.debug('Running command [$$$] with options $$$', this.name, finalOptions);
	    return this.handler(finalOptions);
	  }

	  withSelection(selectionSpec) {
	    this.selectionSpec = selectionSpec;
	    return this;
	  }


	  addCommand() {
	    return this.root.addCommand.apply(this.root, arguments);
	  }

	  addModule() {
	    return this.root.addModule.apply(this.root, arguments);
	  }

	  processCommand() {
	    return this.root.processCommand.apply(this.root, arguments);
	  }

	  get logWrap() {
	    return `command [${this.name}]`;
	  }
	}

	function processSelection(selection, constraints, roll20, requiredCharVersion) {
	  return _.reduce(constraints, (result, constraintDetails, type) => {
	    const objects = _.chain(selection)
	      .where({ _type: type === 'character' ? 'graphic' : type })
	      .map(selected => roll20.getObj(selected._type, selected._id))
	      .map((object) => {
	        if (type === 'character' && object) {
	          const char = roll20.getObj('character', object.get('represents'));
	          if (!constraintDetails.anyVersion) {
	            const version = roll20.getAttrByName(char.id, 'version');
	            if (version !== requiredCharVersion) {
	              throw new UserError(`Character ${char.get('name')} is not at the required sheet version ` +
	                `[${requiredCharVersion}], but instead [${version}]. Try opening the character sheet or running ` +
	                '!shaped-update-character to update it.');
	            }
	          }
	          return char;
	        }
	        return object;
	      })
	      .compact()
	      .uniq()
	      .value();
	    if (_.size(objects) < constraintDetails.min || _.size(objects) > constraintDetails.max) {
	      throw new UserError(`Wrong number of objects of type [${type}] selected, should be between ` +
	        `${constraintDetails.min} and ${constraintDetails.max}`);
	    }
	    switch (_.size(objects)) {
	      case 0:
	        break;
	      case 1:
	        if (constraintDetails.max === 1) {
	          result[type] = objects[0];
	        }
	        else {
	          result[type] = objects;
	        }
	        break;
	      default:
	        result[type] = objects;
	    }
	    return result;
	  }, {});
	}


	module.exports = function commandParser(rootCommand, roll20, errorHandler, eventDispatcher,
	  requiredCharVersion, logger) {
	  const commands = {};
	  let defaultHandler = null;

	  const cp = {
	    processCommand(msg) {
	      const prefix = `!${rootCommand}-`;
	      if (msg.type === 'api' && msg.content.indexOf(prefix) === 0) {
	        logger.debug('Starting to process command $$$', msg);
	        const cmdString = msg.content.slice(prefix.length);
	        const parts = cmdString.split(/\s+--/);
	        const cmdName = parts.shift();
	        const cmd = commands[cmdName];
	        if (!cmd) {
	          if (defaultHandler) {
	            defaultHandler(`${prefix}${cmdName}`);
	          }
	          return null;
	        }
	        const returnVal = cmd.handle(parts, msg.selected, `${prefix}${cmdName}`,
	          roll20.playerIsGM(msg.playerid), msg.playerid, requiredCharVersion);
	        if (returnVal instanceof Promise) {
	          returnVal
	            .then((retVal) => {
	              logger.debug('Command completed');
	              return retVal;
	            })
	            .catch(errorHandler);
	        }
	        else {
	          logger.debug('Command completed');
	        }
	        return returnVal;
	      }
	      return null;
	    },

	    setDefaultCommandHandler(handler) {
	      defaultHandler = handler;
	    },

	    addCommand(cmds, handler, gmOnly) {
	      const command = new Command(this, handler, roll20, _.isArray(cmds) ? cmds.join(',') : cmds,
	        gmOnly, logger);
	      (_.isArray(cmds) ? cmds : [cmds]).forEach(cmdString => (commands[cmdString] = command));
	      return command;
	    },

	    logWrap: 'commandParser',
	  };
	  eventDispatcher.registerEventHandler('chat:message', cp.processCommand.bind(cp));
	  return cp;
	};


/***/ },
/* 10 */
/***/ function(module, exports) {

	'use strict';


	class UserError extends Error {
	  constructor(message) {
	    super();
	    this.message = message;
	  }
	}

	module.exports = UserError;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const Utils = __webpack_require__(6);
	const ShapedModule = __webpack_require__(12);
	const ShapedConfig = __webpack_require__(13);

	const RECHARGE_LOOKUP = {
	  TURN: '(T)',
	  SHORT_OR_LONG_REST: '(SR)',
	  LONG_REST: '(LR)',
	  RECHARGE_2_6: '(2-6)',
	  RECHARGE_3_6: '(3-6)',
	  RECHARGE_4_6: '(4-6)',
	  RECHARGE_5_6: '(5-6)',
	  RECHARGE_6: '(6)',
	};

	class MacroMaker {
	  constructor(roll20) {
	    if (!roll20) {
	      throw new Error('Rol20 parameter is required for MacroMaker constructor');
	    }
	    this.roll20 = roll20;
	    this.sortKey = 'originalOrder';
	  }

	  getAbilityMaker(character) {
	    const self = this;
	    return function abilityMaker(abilitySpec) {
	      const ability = self.roll20.getOrCreateObj('ability', { characterid: character.id, name: abilitySpec.name });
	      ability.set({ action: abilitySpec.action, istokenaction: true });
	      return abilitySpec.name;
	    };
	  }
	}

	class AbilityDeleter extends MacroMaker {
	  constructor(roll20) {
	    super(roll20);
	    this.sortKey = '';
	  }

	  run(character) {
	    const abilities = this.roll20.findObjs({ type: 'ability', characterid: character.id });
	    const deleted = _.map(abilities, (obj) => {
	      const name = obj.get('name');
	      obj.remove();
	      return name;
	    });

	    return `Deleted: ${_.isEmpty(deleted) ? 'None' : deleted.join(', ')}`;
	  }
	}

	class RepeatingAbilityMaker extends MacroMaker {
	  constructor(repeatingSection, abilityName, label, canMark, roll20) {
	    super(roll20);
	    this.repeatingSection = repeatingSection;
	    this.abilityName = abilityName;
	    this.label = label;
	    this.canMark = canMark;
	  }

	  run(character, options) {
	    const cache = options.getCache(character.id);
	    cache[this.repeatingSection] = cache[this.repeatingSection] ||
	      this.roll20.getRepeatingSectionItemIdsByName(character.id, this.repeatingSection);

	    const configured = _.chain(cache[this.repeatingSection])
	      .map((repeatingId, repeatingName) => {
	        let repeatingAction = `%{${character.id}|repeating_${this.repeatingSection}_${repeatingId}` +
	          `_${this.abilityName}}`;
	        let name = Utils.toTitleCase(repeatingName);
	        if (options.showRecharges) {
	          const recharge = this.roll20.getAttrByName(character.id,
	            `repeating_${this.repeatingSection}_${repeatingId}_recharge`);
	          if (RECHARGE_LOOKUP[recharge]) {
	            name += ` ${RECHARGE_LOOKUP[recharge]}`;
	          }
	        }
	        if (this.canMark && options.mark) {
	          repeatingAction += '\n!mark @{target|token_id}';
	        }
	        return { name, action: repeatingAction };
	      })
	      .map(this.getAbilityMaker(character))
	      .value();

	    const addedText = _.isEmpty(configured) ? 'Not present for character' : configured.join(', ');
	    return `${this.label}: ${addedText}`;
	  }
	}

	class RollAbilityMaker extends MacroMaker {
	  constructor(abilityName, newName, roll20) {
	    super(roll20);
	    this.abilityName = abilityName;
	    this.newName = newName;
	  }

	  run(character) {
	    return this.getAbilityMaker(character)({
	      name: this.newName,
	      action: `%{${character.id}|${this.abilityName}}`,
	    });
	  }
	}


	class CommandAbilityMaker extends MacroMaker {
	  constructor(command, options, newName, roll20) {
	    super(roll20);
	    this.command = command;
	    this.options = options;
	    this.newName = newName;
	  }

	  run(character) {
	    return this.getAbilityMaker(character)({
	      name: this.newName,
	      action: `!${this.command} ${Utils.toOptionsString(this.options)}`,
	    });
	  }
	}

	class MultiCommandAbilityMaker extends MacroMaker {
	  constructor(commandSpecs, roll20) {
	    super(roll20);
	    this.commandSpecs = commandSpecs;
	  }

	  run(character) {
	    const abilMaker = this.getAbilityMaker(character);
	    return this.commandSpecs.map(cmdSpec =>
	      abilMaker({
	        name: cmdSpec.abilityName,
	        action: `!${cmdSpec.command} ${Utils.toOptionsString(cmdSpec.options)}`,
	      })
	    );
	  }
	}

	class RepeatingSectionMacroMaker extends MacroMaker {
	  constructor(abilityName, repeatingSection, macroName, roll20) {
	    super(roll20);
	    this.abilityName = abilityName;
	    this.repeatingSection = repeatingSection;
	    this.macroName = macroName;
	    this.sortKey = 'originalOrder';
	  }

	  run(character) {
	    if (!_.isEmpty(this.roll20.getRepeatingSectionAttrs(character.id, this.repeatingSection))) {
	      return this.getAbilityMaker(character)({
	        name: this.macroName,
	        action: `%{${character.id}|${this.abilityName}}`,
	      });
	    }
	    return `${this.macroName}: Not present for character`;
	  }
	}

	function getRepeatingSectionAbilityLookup(sectionName, rollName, roll20) {
	  return function repeatingSectionAbilityLookup(optionName, existingOptions) {
	    const characterId = existingOptions.selected.character[0].id;
	    const cache = existingOptions.getCache(characterId);

	    cache[sectionName] = cache[sectionName] || roll20.getRepeatingSectionItemIdsByName(characterId, sectionName);

	    const repeatingId = cache[sectionName][optionName.toLowerCase()];

	    if (repeatingId) {
	      return new RollAbilityMaker(`repeating_${sectionName}_${repeatingId}_${rollName}`,
	        Utils.toTitleCase(optionName), roll20);
	    }
	    return undefined;
	  };
	}

	module.exports = class AbilityMaker extends ShapedModule {

	  addCommands(commandProcessor) {
	    const roll20 = this.roll20;
	    this.staticAbilityOptions = {
	      DELETE: new AbilityDeleter(roll20),
	      advantageTracker: new MultiCommandAbilityMaker([
	        { command: 'shaped-at', options: ['advantage'], abilityName: 'Advantage' },
	        { command: 'shaped-at', options: ['disadvantage'], abilityName: 'Disadvantage' },
	        { command: 'shaped-at', options: ['normal'], abilityName: 'Normal' },
	      ], roll20),
	      advantageTrackerShort: new MultiCommandAbilityMaker([
	        { command: 'shaped-at', options: ['advantage'], abilityName: 'Adv' },
	        { command: 'shaped-at', options: ['disadvantage'], abilityName: 'Dis' },
	        { command: 'shaped-at', options: ['normal'], abilityName: 'Normal' },
	      ], roll20),
	      advantageTrackerShortest: new MultiCommandAbilityMaker([
	        { command: 'shaped-at', options: ['advantage'], abilityName: 'Adv' },
	        { command: 'shaped-at', options: ['disadvantage'], abilityName: 'Dis' },
	      ], roll20),
	      advantageTrackerQuery: new CommandAbilityMaker('shaped-at',
	        ['?{Roll Option|Normal,normal|w/ Advantage,advantage|w/ Disadvantage,disadvantage}'], '(dis)Adv Query', roll20),
	      initiative: new RollAbilityMaker('shaped_initiative', 'Init', roll20),
	      abilityChecks: new RollAbilityMaker('shaped_ability_checks', 'Ability Checks', roll20),
	      abilityChecksQuery: new RollAbilityMaker('shaped_ability_checks_query', 'Ability Checks', roll20),
	      abilChecks: new RollAbilityMaker('shaped_ability_checks', 'AbilChecks', roll20),
	      abilChecksQuery: new RollAbilityMaker('shaped_ability_checks_query', 'AbilChecks', roll20),
	      savingThrows: new RollAbilityMaker('shaped_saving_throw', 'Saving Throws', roll20),
	      savingThrowsQuery: new RollAbilityMaker('shaped_saving_throw_query', 'Saving Throws', roll20),
	      saves: new RollAbilityMaker('shaped_saving_throw', 'Saves', roll20),
	      savesQuery: new RollAbilityMaker('shaped_saving_throw_query', 'Saves', roll20),
	      rests: new CommandAbilityMaker('shaped-rest', [{ name: 'type', value: '?{Rest type|Short,short|Long,long}' }],
	        'Rests', roll20),
	      attacks: new RepeatingAbilityMaker('attack', 'attack', 'Attacks', true, roll20),
	      attacksMacro: new RepeatingSectionMacroMaker('shaped_attacks', 'attack', 'Attacks', roll20),
	      spells: new RepeatingSectionMacroMaker('shaped_spells', 'spell', 'Spells', roll20),
	      statblock: new RollAbilityMaker('shaped_statblock', 'Statblock', roll20),
	      traits: new RepeatingAbilityMaker('trait', 'trait', 'Traits', false, roll20),
	      traitsMacro: new RepeatingSectionMacroMaker('shaped_traits', 'trait', 'Traits', roll20),
	      racialTraits: new RepeatingAbilityMaker('racialtrait', 'action', 'Racial Traits', false, roll20),
	      racialTraitsMacro: new RepeatingSectionMacroMaker('shaped_racialtraits', 'racialtrait', 'Racial Traits',
	        roll20),
	      classFeatures: new RepeatingAbilityMaker('classfeature', 'action', 'Class Features', false, roll20),
	      classFeaturesMacro: new RepeatingSectionMacroMaker('shaped_classfeatures', 'classfeature', 'Class Features',
	        roll20),
	      feats: new RepeatingAbilityMaker('feat', 'action', 'Feats', false, roll20),
	      featsMacro: new RepeatingSectionMacroMaker('shaped_feats', 'feat', 'Feats', roll20),
	      actions: new RepeatingAbilityMaker('action', 'action', 'Actions', true, roll20),
	      actionsMacro: new RepeatingSectionMacroMaker('shaped_actions', 'action', 'Actions', roll20),
	      reactions: new RepeatingAbilityMaker('reaction', 'action', 'Reactions', false, roll20),
	      reactionsMacro: new RepeatingSectionMacroMaker('shaped_reactions', 'reaction', 'Reactions', roll20),
	      legendaryActions: new RepeatingAbilityMaker('legendaryaction', 'action', 'Legendary Actions', true, roll20),
	      legendaryActionsMacro: new RepeatingSectionMacroMaker('shaped_legendaryactions', 'legendaryaction',
	        'Legendary Actions', roll20),
	      legendaryA: new RepeatingSectionMacroMaker('shaped_legendaryactions', 'legendaryaction',
	        'LegendaryA', roll20),
	      lairActions: new RepeatingSectionMacroMaker('shaped_lairactions', 'lairaction', 'Lair Actions', roll20),
	      lairA: new RepeatingSectionMacroMaker('shaped_lairactions', 'lairaction', 'LairA', roll20),
	      regionalEffects: new RepeatingSectionMacroMaker('shaped_regionaleffects', 'regionaleffect',
	        'Regional Effects', roll20),
	      regionalE: new RepeatingSectionMacroMaker('shaped_regionaleffects', 'regionaleffect', 'RegionalE', roll20),
	    };


	    return commandProcessor.addCommand('abilities', this.addAbility.bind(this), false)
	      .withSelection({
	        character: {
	          min: 1,
	          max: Infinity,
	        },
	      })
	      .optionLookup('abilities', this.staticAbilityOptions)
	      .optionLookup('abilities', getRepeatingSectionAbilityLookup('spell0', 'spell', this.roll20))
	      .optionLookup('abilities', getRepeatingSectionAbilityLookup('spell1', 'spell', this.roll20))
	      .optionLookup('abilities', getRepeatingSectionAbilityLookup('spell2', 'spell', this.roll20))
	      .optionLookup('abilities', getRepeatingSectionAbilityLookup('spell3', 'spell', this.roll20))
	      .optionLookup('abilities', getRepeatingSectionAbilityLookup('spell4', 'spell', this.roll20))
	      .optionLookup('abilities', getRepeatingSectionAbilityLookup('spell5', 'spell', this.roll20))
	      .optionLookup('abilities', getRepeatingSectionAbilityLookup('spell6', 'spell', this.roll20))
	      .optionLookup('abilities', getRepeatingSectionAbilityLookup('spell7', 'spell', this.roll20))
	      .optionLookup('abilities', getRepeatingSectionAbilityLookup('spell8', 'spell', this.roll20))
	      .optionLookup('abilities', getRepeatingSectionAbilityLookup('spell9', 'spell', this.roll20))
	      .optionLookup('abilities', getRepeatingSectionAbilityLookup('trait', 'trait', this.roll20))
	      .option('mark', ShapedConfig.booleanValidator);
	  }

	  addAbilitiesByName(abilities, character, showRecharges) {
	    const caches = {};
	    const options = {
	      getCache(key) {
	        return (caches[key] = caches[key] || {});
	      },
	      showRecharges,
	    };
	    // Slightly backwards way of doing this that ensures that we run the items in the order they are listed above
	    // rather than the order they are passed in the parameter. Ideally we'd allow users to configure this but
	    // since we haven't implemented that functionality the order is determine by the order in the saved configuration
	    // object which is quite hard to control.
	    _.chain(this.staticAbilityOptions)
	      .pick((value, key) => _.contains(abilities, key))
	      .each(abilityMaker => abilityMaker.run(character, options));
	  }

	  addAbility(options) {
	    if (_.isEmpty(options.abilities)) {
	      this.reportError('No abilities specified. ' +
	        'Take a look at the documentation for a list of ability options.', options.playerId);
	      return;
	    }
	    const messages = _.map(options.selected.character, (character) => {
	      const operationMessages = _.chain(options.abilities)
	        .sortBy('sortKey')
	        .map(maker => maker.run(character, options))
	        .value();


	      if (_.isEmpty(operationMessages)) {
	        return `<li>${character.get('name')}: Nothing to do</li>`;
	      }

	      let message;
	      message = `<li>Configured the following abilities for character ${character.get('name')}:<ul><li>`;
	      message += operationMessages.join('</li><li>');
	      message += '</li></ul></li>';

	      return message;
	    });

	    this.reportPlayer('Ability Creation', `<ul>${messages.join('')}</ul>`, options.playerId);
	  }
	};


/***/ },
/* 12 */
/***/ function(module, exports) {

	'use strict';

	module.exports = class ShapedModule {

	  constructor(deps) {
	    this.roll20 = deps.roll20;
	    this.reporter = deps.reporter;
	    this.logger = deps.logger;
	    this.myState = deps.myState;
	    deps[`${this.constructor.name.charAt(0).toLowerCase()}${this.constructor.name.slice(1)}`] = this;
	    deps.logger.wrapModule(this);
	  }

	  configure(commandProcessor, chatWatcher, eventDispatcher) {
	    this.addCommands(commandProcessor);
	    this.registerChatListeners(chatWatcher);
	    this.registerEventListeners(eventDispatcher);
	  }

	  addCommands(/* commandProcessor */) {
	  }

	  registerChatListeners(/* chatWatcher */) {
	  }

	  registerEventListeners(/* eventDispatcher */) {
	  }

	  reportPublic(heading, text) {
	    this.reporter.reportPublic(heading, text);
	  }

	  reportPlayer(heading, text, playerId) {
	    this.reporter.reportPlayer(heading, text, playerId);
	  }

	  reportResult(title, text, options) {
	    const reporterName = options.whisper ? 'reportPlayer' : 'reportPublic';
	    this[reporterName](title, text, options.playerId);
	  }

	  reportCharacter(heading, text, characterId) {
	    this.reporter.reportCharacter(heading, text, characterId);
	  }

	  reportError(text, playerId) {
	    this.reporter.reportError(text, playerId);
	  }

	  get logWrap() {
	    return this.constructor.name;
	  }

	  toJSON() {
	    return {
	      name: this.constructor.name,
	    };
	  }
	};


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const Migrator = __webpack_require__(14);
	const Utils = __webpack_require__(6);
	const ShapedModule = __webpack_require__(12);

	const oneSixConfig = {
	  logLevel: 'INFO',
	  tokenSettings: {
	    number: false,
	    bar1: {
	      attribute: 'HP',
	      max: true,
	      link: false,
	      showPlayers: false,
	    },
	    bar2: {
	      attribute: 'speed',
	      max: false,
	      link: true,
	      showPlayers: false,
	    },
	    bar3: {
	      attribute: '',
	      max: false,
	      link: false,
	      showPlayers: false,
	    },
	    aura1: {
	      radius: '',
	      color: '#FFFF99',
	      square: false,
	    },
	    aura2: {
	      radius: '',
	      color: '#59e594',
	      square: false,
	    },
	    light: {
	      radius: '',
	      dimRadius: '',
	      otherPlayers: false,
	      hasSight: false,
	      angle: 360,
	      losAngle: 360,
	      multiplier: 1,
	    },
	    showName: true,
	    showNameToPlayers: false,
	    showAura1ToPlayers: true,
	    showAura2ToPlayers: true,
	  },
	  newCharSettings: {
	    sheetOutput: '@{output_to_all}',
	    deathSaveOutput: '@{output_to_all}',
	    initiativeOutput: '@{output_to_all}',
	    showNameOnRollTemplate: '@{show_character_name_yes}',
	    rollOptions: '@{normal}',
	    initiativeRoll: '@{normal_initiative}',
	    initiativeToTracker: '@{initiative_to_tracker_yes}',
	    breakInitiativeTies: '@{initiative_tie_breaker_var}',
	    showTargetAC: '@{attacks_vs_target_ac_no}',
	    showTargetName: '@{attacks_vs_target_name_no}',
	    autoAmmo: '@{ammo_auto_use_var}',
	    autoRevertAdvantage: false,
	    houserules: {
	      savingThrowsHalfProf: false,
	      mediumArmorMaxDex: 2,
	    },
	  },
	  advTrackerSettings: {
	    showMarkers: false,
	    ignoreNpcs: false,
	    advantageMarker: 'green',
	    disadvantageMarker: 'red',
	    output: 'silent',
	  },
	  sheetEnhancements: {
	    rollHPOnDrop: true,
	    autoHD: true,
	    autoSpellSlots: true,
	  },
	  genderPronouns: [
	    {
	      matchPattern: '^f$|female|girl|woman|feminine',
	      nominative: 'she',
	      accusative: 'her',
	      possessive: 'her',
	      reflexive: 'herself',
	    },
	    {
	      matchPattern: '^m$|male|boy|man|masculine',
	      nominative: 'he',
	      accusative: 'him',
	      possessive: 'his',
	      reflexive: 'himself',
	    },
	    {
	      matchPattern: '^n$|neuter|none|construct|thing|object',
	      nominative: 'it',
	      accusative: 'it',
	      possessive: 'its',
	      reflexive: 'itself',
	    },
	  ],
	  defaultGenderIndex: 2,

	};

	const migrator = new Migrator()
	  .addProperty('config', {})
	  .skipToVersion(0.4)
	  .overwriteProperty('config.genderPronouns', Utils.deepClone(oneSixConfig).genderPronouns)
	  .skipToVersion(1.2)
	  .moveProperty('config.autoHD', 'config.sheetEnhancements.autoHD')
	  .moveProperty('config.rollHPOnDrop', 'config.sheetEnhancements.rollHPOnDrop')
	  .skipToVersion(1.4)
	  .moveProperty('config.newCharSettings.savingThrowsHalfProf',
	    'config.newCharSettings.houserules.savingThrowsHalfProf')
	  .moveProperty('config.newCharSettings.mediumArmorMaxDex', 'config.newCharSettings.houserules.mediumArmorMaxDex')
	  .skipToVersion(1.6)
	  .transformConfig((state) => {
	    _.defaults(state.config, oneSixConfig);
	    _.defaults(state.config.tokenSettings, oneSixConfig.tokenSettings);
	    _.defaults(state.config.newCharSettings, oneSixConfig.newCharSettings);
	    _.defaults(state.config.advTrackerSettings, oneSixConfig.advTrackerSettings);
	    _.defaults(state.config.sheetEnhancements, oneSixConfig.sheetEnhancements);
	    return state;
	  }, 'Applying defaults as at schema version 1.6')
	  // 1.7
	  // add base houserules and variants section
	  // add sheetEnhancements.autoTraits
	  .nextVersion()
	  .addProperty('config.variants', {
	    rests: {
	      longNoHpFullHd: false,
	    },
	  })
	  .addProperty('config.sheetEnhancements.autoTraits', true)
	  // 1.8
	  // Set tokens to have vision by default so that people see the auto-generated stuff based on senses
	  .nextVersion()
	  .overwriteProperty('config.tokenSettings.light.hasSight', true)
	  // 1.9 Add default tab setting
	  .nextVersion()
	  .addProperty('config.newCharSettings.tab', 'core')
	  // 2.0 Add default token actions
	  .nextVersion()
	  .addProperty('config.newCharSettings.tokenActions', {
	    initiative: false,
	    abilityChecks: null,
	    advantageTracker: null,
	    savingThrows: null,
	    attacks: null,
	    statblock: false,
	    traits: null,
	    actions: null,
	    reactions: null,
	    legendaryActions: null,
	    lairActions: null,
	    regionalEffects: null,
	    rests: false,
	  })
	  // 2.1 Add spells token action
	  .nextVersion()
	  .addProperty('config.newCharSettings.tokenActions.spells', false)
	  // 2.2 Changes to support new roll behaviour in sheet 4.2.1
	  .nextVersion()
	  .overwriteProperty('config.newCharSettings.sheetOutput', '')
	  .overwriteProperty('config.newCharSettings.deathSaveOutput', '')
	  .overwriteProperty('config.newCharSettings.initiativeOutput', '')
	  .overwriteProperty('config.newCharSettings.showNameOnRollTemplate', '')
	  .overwriteProperty('config.newCharSettings.rollOptions', '')
	  .overwriteProperty('config.newCharSettings.initiativeRoll', '')
	  .overwriteProperty('config.newCharSettings.initiativeToTracker', '')
	  .overwriteProperty('config.newCharSettings.breakInitiativeTies', '')
	  .overwriteProperty('config.newCharSettings.showTargetAC', '')
	  .overwriteProperty('config.newCharSettings.showTargetName', '')
	  .overwriteProperty('config.newCharSettings.autoAmmo', '1')
	  // 2.3 Remove "small" macros
	  .nextVersion()
	  .transformConfig((config) => {
	    _.each(config.config.newCharSettings.tokenActions, (value, key) => {
	      if (typeof value === 'string' && value.match('.*Small$')) {
	        config.config.newCharSettings.tokenActions[key] = value.replace(/Small$/, '');
	      }
	    });
	    return config;
	  }, 'Removing "small" macros')
	  .addProperty('config.newCharSettings.textSizes', {
	    spellsTextSize: 'text',
	    abilityChecksTextSize: 'text',
	    savingThrowsTextSize: 'text',
	  })
	  // 2.4 Don't set default values for sheet options to save on attribute bloat
	  .nextVersion()
	  .transformConfig((config) => {
	    const ncs = config.config.newCharSettings;
	    const defaults = {
	      sheetOutput: '',
	      deathSaveOutput: '',
	      initiativeOutput: '',
	      showNameOnRollTemplate: '',
	      rollOptions: '{{ignore=[[0',
	      initiativeRoll: '@{shaped_d20}',
	      initiativeToTracker: '@{selected|initiative_formula} &{tracker}',
	      breakInitiativeTies: '',
	      showTargetAC: '',
	      showTargetName: '',
	      autoAmmo: '',
	      tab: 'core',
	    };
	    _.each(defaults, (defaultVal, key) => {
	      if (ncs[key] === defaultVal) {
	        ncs[key] = '***default***';
	      }
	    });

	    if (ncs.houserules.mediumArmorMaxDex === '2') {
	      ncs.houserules.mediumArmorMaxDex = '***default***';
	    }

	    ['spellsTextSize', 'abilityChecksTextSize', 'savingThrowsTextSize'].forEach((prop) => {
	      if (ncs.textSizes[prop] === 'text_big') {
	        ncs.textSizes[prop] = '***default***';
	      }
	    });

	    return config;
	  }, 'Removing default values')
	  // 2.5 Custom saving throws
	  .nextVersion()
	  .addProperty('config.newCharSettings.houserules.saves', {
	    useCustomSaves: '***default***',
	    useAverageOfAbilities: '***default***',
	    fortitude: {
	      fortitudeStrength: '***default***',
	      fortitudeDexterity: '***default***',
	      fortitudeConstitution: '***default***',
	      fortitudeIntelligence: '***default***',
	      fortitudeWisdom: '***default***',
	      fortitudeCharisma: '***default***',
	    },
	    reflex: {
	      reflexStrength: '***default***',
	      reflexDexterity: '***default***',
	      reflexConstitution: '***default***',
	      reflexIntelligence: '***default***',
	      reflexWisdom: '***default***',
	      reflexCharisma: '***default***',
	    },
	    will: {
	      willStrength: '***default***',
	      willDexterity: '***default***',
	      willConstitution: '***default***',
	      willIntelligence: '***default***',
	      willWisdom: '***default***',
	      willCharisma: '***default***',
	    },
	  })
	  .moveProperty('config.newCharSettings.houserules.savingThrowsHalfProf',
	    'config.newCharSettings.houserules.saves.savingThrowsHalfProf')
	  .addProperty('config.newCharSettings.houserules.baseDC', '***default***')
	  // 2.6 expertise_as_advantage
	  .nextVersion()
	  .addProperty('config.newCharSettings.houserules.expertiseAsAdvantage', '***default***')
	  // 2.7 add hide options
	  .nextVersion()
	  .addProperty('config.newCharSettings.hide', {
	    hideAttack: '***default***',
	    hideDamage: '***default***',
	    hideAbilityChecks: '***default***',
	    hideSavingThrows: '***default***',
	    hideSavingThrowDC: '***default***',
	    hideSpellContent: '***default***',
	    hideActionFreetext: '***default***',
	    hideSavingThrowFailure: '***default***',
	    hideSavingThrowSuccess: '***default***',
	    hideRecharge: '***default***',
	  })
	  // 2.8 rename hideActionFreetext
	  .nextVersion()
	  .moveProperty('config.newCharSettings.hide.hideActionFreetext', 'config.newCharSettings.hide.hideFreetext')
	  // 2.9 make auto-applying new character settings optional (and switched off by default)
	  .nextVersion()
	  .addProperty('config.newCharSettings.applyToAll', false)
	  // 3.0 add hit dice output option + show rests option
	  .nextVersion()
	  .addProperty('config.newCharSettings.hitDiceOutput', '***default***')
	  .addProperty('config.newCharSettings.showRests', '***default***')
	  // 3.1 add hideCost
	  .nextVersion()
	  .addProperty('config.newCharSettings.hide.hideCost', '***default***')
	  // 3.2 update roll settings;
	  .nextVersion()
	  .transformConfig((config) => {
	    const ncs = config.config.newCharSettings;
	    const oldVals = {
	      advantage: 'adv {{ignore=[[0',
	      disadvantage: 'dis {{ignore=[[0',
	      two: '{{roll2=[[d20@{d20_mod}',
	    };
	    const newVals = {
	      advantage: '2d20kh1',
	      disadvantage: '2d20kl1',
	      two: '1d20',
	    };
	    const key = _.invert(oldVals)[ncs.rollOptions];
	    ncs.rollOptions = key ? newVals[key] : '***default***';
	    return config;
	  }, 'Upgrading Roll options settings to new format')
	  // 3.3 make boolean switches consistent for 9.x sheet
	  .nextVersion()
	  .transformConfig((config) => {
	    const ncs = config.config.newCharSettings;
	    [
	      'showTargetAC',
	      'showTargetName',
	      'autoAmmo',
	      'houserules.expertiseAsAdvantage',
	      'houserules.saves.useCustomSaves',
	      'houserules.saves.useAverageOfAbilities',
	      'houserules.saves.fortitude.fortitudeStrength',
	      'houserules.saves.fortitude.fortitudeDexterity',
	      'houserules.saves.fortitude.fortitudeConstitution',
	      'houserules.saves.fortitude.fortitudeIntelligence',
	      'houserules.saves.fortitude.fortitudeWisdom',
	      'houserules.saves.fortitude.fortitudeCharisma',
	      'houserules.saves.reflex.reflexStrength',
	      'houserules.saves.reflex.reflexDexterity',
	      'houserules.saves.reflex.reflexConstitution',
	      'houserules.saves.reflex.reflexIntelligence',
	      'houserules.saves.reflex.reflexWisdom',
	      'houserules.saves.reflex.reflexCharisma',
	      'houserules.saves.will.willStrength',
	      'houserules.saves.will.willDexterity',
	      'houserules.saves.will.willConstitution',
	      'houserules.saves.will.willIntelligence',
	      'houserules.saves.will.willWisdom',
	      'houserules.saves.will.willCharisma',
	    ].forEach((propPath) => {
	      const propVal = Utils.getObjectFromPath(ncs, propPath);
	      const newVal = (propVal !== '***default***');
	      Utils.deepExtend(ncs, Utils.createObjectFromPath(propPath, newVal));
	    });
	    return config;
	  }, 'Upgrade config for 9.x character sheet')
	  // 3.4 Fix initiative settings for 9.1.0 sheet
	  .nextVersion()
	  .transformConfig((config) => {
	    const ncs = config.config.newCharSettings;
	    ncs.breakInitiativeTies = ncs.breakInitiativeTies !== '***default***';
	    if (ncs.initiativeToTracker !== '***default***') {
	      ncs.initiativeToTracker = 0;
	    }
	    return config;
	  }, 'Upgrade initiative settings')
	  // 3.5 Add option to put recharges on token actions
	  .nextVersion()
	  .addProperty('config.newCharSettings.tokenActions.showRecharges', false)
	  // 3.6 Add new props for latest sheet
	  .nextVersion()
	  .transformConfig((config) => {
	    const ncs = config.config.newCharSettings;
	    ncs.display = {
	      showPassiveSkills: false,
	      showWeight: '***default***',
	      showEmote: false,
	      showFreetext: false,
	      showFreeform: false,
	      showDiceModifiers: false,
	      showCritRange: false,
	      extraOnACrit: false,
	    };
	    ncs.measurementSystems = {
	      distanceSystem: '***default***',
	      weightSystem: '***default***',
	      encumbranceMultiplier: 1,
	    };
	    _.extend(ncs.houserules, {
	      inspirationMultiple: false,
	      criticalDamageHouserule: '***default***',
	      proficiencyDice: false,
	      psionics: false,
	      customClasses: false,
	      honorToggle: false,
	      sanityToggle: false,
	    });
	    ncs.tokenActions.racialFeatures = null;
	    ncs.tokenActions.classFeatures = null;
	    ncs.tokenActions.feats = null;
	    ncs.automaticHigherLevelQueries = '***default***';
	    return config;
	  }, 'Adding new properties for 9.x sheet settings')
	  .moveProperty('config.newCharSettings.showRests', 'config.newCharSettings.display.showRests')
	  // 3.7 Add monsterTokenName
	  .nextVersion()
	  .addProperty('config.tokenSettings.monsterTokenName', '')
	  // 3.8 Rename hide settings
	  .nextVersion()
	  .deleteProperty('config.newCharSettings.hide.hideSpellContent')
	  .addProperty('config.newCharSettings.hide.hideContent', '***default***')
	  // 3.9 Move spell slots under new character settings
	  .nextVersion()
	  .moveProperty('config.sheetEnhancements.autoSpellSlots', 'config.newCharSettings.automaticallyExpendSpellResources')
	  // 4.0 More flexible options for HP/HD recovery
	  .nextVersion()
	  .transformConfig((config) => {
	    const restSettings = config.config.variants.rests;
	    restSettings.longRestHDRecovery = 0.5;
	    restSettings.longRestHPRecovery = 1;
	    if (restSettings.longNoHpFullHd) {
	      restSettings.longRestHDRecovery = 1;
	      restSettings.longRestHPRecovery = 0;
	    }
	    delete restSettings.longNoHpFullHd;
	    return config;
	  }, 'Making more flexible options for HP/HD recovery')
	  // 4.1 rename racial features
	  .nextVersion()
	  .moveProperty('config.newCharSettings.tokenActions.racialFeatures',
	    'config.newCharSettings.tokenActions.racialTraits')
	  // 4.2 add switch for auto turn recharge
	  .nextVersion()
	  .addProperty('config.sheetEnhancements.turnRecharges', false)
	  // 4.3 add switch for auto ammo recovery
	  .nextVersion()
	  .addProperty('config.sheetEnhancements.ammoRecovery', false)
	  // 4.4 remove hideCost as it isn't used any more
	  .nextVersion()
	  .deleteProperty('config.newCharSettings.hide.hideCost');

	module.exports = class ShapedConfig extends ShapedModule {

	  addCommands(commandProcessor) {
	    commandProcessor
	      .addCommand('reset-config', this.resetConfig.bind(this), true)
	      .addCommand('upgrade-config', this.upgradeConfig.bind(this), true);
	  }

	  runStartupSequence(commandProc, cb) {
	    this.logger.info('Configuration state: $$$', this.myState);
	    if (!migrator.isValid(this.myState)) {
	      const error = '5e Shaped Companion configuration is invalid. This is most likely because you have tried' +
	        ' to downgrade from a later version. You can either reinstall a later version or ' +
	        '<a href="!shaped-reset-config">Reset Configuration</a> to defaults.';
	      this.reporter.reportError(error);
	      this.logger.error('Invalid configuration!');
	      commandProc.setDefaultCommandHandler(() => this.reportError(error));
	      this.configUpgradedCallback = cb;
	      return;
	    }
	    if (migrator.needsUpdate(this.myState)) {
	      this.logger.warn('Configuration requires updating');
	      const title = '5eShaped Companion Updates';
	      const msg = '5e Shaped Companion has been updated and needs to ' +
	        'upgrade its configuration. Please note that this is a one-way process, if you do not wish to proceed, ' +
	        'please revert to a previous version of the script. <a href="!shaped-upgrade-config">Upgrade</a>';
	      this.reporter.reportPlayer(title, msg);
	      commandProc.setDefaultCommandHandler(() => this.reportPlayer(title, msg));
	      this.configUpgradedCallback = cb;
	      return;
	    }
	    cb();
	  }

	  resetConfig() {
	    this.myState = {};
	    this.reportPlayer('5e Shaped Companion Config', 'Configuration has been reset to defaults.');
	    this.upgradeConfig();
	  }

	  upgradeConfig() {
	    migrator.migrateConfig(this.myState, this.logger);
	    this.reportPlayer('5e Shaped Companion Config', 'Configuration has been upgraded to latest version');
	    if (this.configUpgradedCallback) {
	      this.configUpgradedCallback();
	      this.configUpgradedCallback = null;
	    }
	  }

	  static get configToAttributeLookup() {
	    const lookup = {
	      sheetOutput: 'output_option',
	      deathSaveOutput: 'death_save_output_option',
	      initiativeOutput: 'initiative_output_option',
	      hitDiceOutput: 'hit_dice_output_option',
	      showNameOnRollTemplate: 'show_character_name',
	      rollOptions: 'shaped_d20',
	      initiativeRoll: 'initiative_roll',
	      initiativeToTracker: 'initiative_to_tracker',
	      breakInitiativeTies: 'initiative_tie_breaker',
	      showTargetAC: 'attacks_vs_target_ac',
	      showTargetName: 'attacks_vs_target_name',
	      autoAmmo: 'ammo_auto_use',
	      autoRevertAdvantage: 'auto_revert_advantage',
	      showRests: 'show_rests',
	      savingThrowsHalfProf: 'saving_throws_half_proficiency',
	      mediumArmorMaxDex: 'medium_armor_max_dex',
	      spellsTextSize: 'spells_text_size',
	      abilityChecksTextSize: 'ability_checks_text_size',
	      savingThrowsTextSize: 'saving_throws_text_size',
	      baseDC: 'base_dc',
	      tab: 'tab',
	      useCustomSaves: 'use_custom_saving_throws',
	      useAverageOfAbilities: 'average_of_abilities',
	      expertiseAsAdvantage: 'expertise_as_advantage',
	      hideAttack: 'hide_attack',
	      hideDamage: 'hide_damage',
	      hideAbilityChecks: 'hide_ability_checks',
	      hideSavingThrows: 'hide_saving_throws',
	      hideSavingThrowDC: 'hide_saving_throw_dc',
	      hideContent: 'hide_content',
	      hideFreetext: 'hide_freetext',
	      hideSavingThrowFailure: 'hide_saving_throw_failure',
	      hideSavingThrowSuccess: 'hide_saving_throw_success',
	      hideRecharge: 'hide_recharge',
	      customSkills: 'custom_skills',
	      showPassiveSkills: 'show_passive_skills',
	      showWeight: 'show_weight',
	      showEmote: 'show_emote',
	      showFreetext: 'show_freetext',
	      showFreeform: 'show_freeform',
	      showDiceModifiers: 'show_dice_modifiers',
	      showCritRange: 'show_crit_range',
	      extraOnACrit: 'extra_on_a_crit',
	      inspirationMultiple: 'inspiration_multiple',
	      criticalDamageHouserule: 'critical_damage_houserule',
	      proficiencyDice: 'proficiency_dice',
	      psionics: 'psionics',
	      customClasses: 'custom_classes',
	      honorToggle: 'honor_toggle',
	      sanityToggle: 'sanity_toggle',
	      distanceSystem: 'distance_system',
	      weightSystem: 'weight_system',
	      encumbranceMultiplier: 'encumbrance_multiplier',
	      automaticHigherLevelQueries: 'automatic_higher_level_queries',
	      automaticallyExpendSpellResources: 'automatically_expend_spell_resources',
	    };

	    ['fortitude', 'reflex', 'will'].forEach((save) => {
	      ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma'].forEach((ability) => {
	        lookup[`${save}${ability}`] = `${save}_${ability.toLowerCase()}`;
	      });
	    });

	    return lookup;
	  }

	  static booleanValidator(value) {
	    const converted = value === 'true' || (value === 'false' ? false : value);
	    return {
	      valid: typeof value === 'boolean' || value === 'true' || value === 'false',
	      converted,
	    };
	  }

	  static stringValidator(value) {
	    return {
	      valid: true,
	      converted: value,
	    };
	  }

	  static arrayValidator(value) {
	    return {
	      valid: true,
	      converted: value.split(',').map(s => s.trim()),
	    };
	  }

	  static getOptionList(options) {
	    return function optionList(value) {
	      if (value === undefined) {
	        return options;
	      }
	      return {
	        converted: options[value],
	        valid: options[value] !== undefined,
	      };
	    };
	  }

	  static getHideOption(propertyName) {
	    return this.getOptionList({ false: '***default***', true: `{{${propertyName}=1}}` });
	  }

	  static integerValidator(value) {
	    const parsed = parseInt(value, 10);
	    return {
	      converted: parsed,
	      valid: !isNaN(parsed),
	    };
	  }

	  static floatValidator(value) {
	    const parsed = parseFloat(value);
	    return {
	      converted: parsed,
	      valid: !isNaN(parsed),
	    };
	  }

	  static colorValidator(value) {
	    return {
	      converted: value,
	      valid: /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(value),
	    };
	  }

	  static jsonValidator(value) {
	    try {
	      return {
	        converted: JSON.parse(unescape(value)),
	        valid: true,
	      };
	    }
	    catch (e) {
	      return {
	        converted: null,
	        valid: false,
	      };
	    }
	  }

	  static checkCharacterSelectedOrSupplied(options, reporter) {
	    if (options.character) {
	      options.selected.character = options.character;
	    }
	    if (!options.selected.character) {
	      reporter.reportError('You must either select a character token or supply a character id using --character');
	      return false;
	    }

	    return true;
	  }

	  static get sheetOutputValidator() {
	    return this.getOptionList({
	      public: '***default***',
	      whisper: '/w GM',
	    });
	  }

	  static get rollOutputValidator() {
	    return this.getOptionList({
	      sheetStandard: '***default***',
	      public: '',
	      whisper: '/w GM',
	    });
	  }

	  static get commandOutputValidator() {
	    return this.getOptionList({
	      public: 'public',
	      whisper: 'whisper',
	      silent: 'silent',
	    });
	  }

	  static get statusMarkerValidator() {
	    return this.getOptionList(ShapedConfig.validStatusMarkers());
	  }

	  static get barValidator() {
	    return {
	      attribute: this.stringValidator,
	      max: this.booleanValidator,
	      link: this.booleanValidator,
	      showPlayers: this.booleanValidator,
	    };
	  }

	  static get auraValidator() {
	    return {
	      radius: this.stringValidator,
	      color: this.colorValidator,
	      square: this.booleanValidator,
	    };
	  }

	  static get lightValidator() {
	    return {
	      radius: this.stringValidator,
	      dimRadius: this.stringValidator,
	      otherPlayers: this.booleanValidator,
	      hasSight: this.booleanValidator,
	      angle: this.integerValidator,
	      losAngle: this.integerValidator,
	      multiplier: this.integerValidator,
	    };
	  }

	  static getCharacterValidator(roll20) {
	    return ShapedConfig.getObjectValidator('character', roll20);
	  }

	  static getObjectValidator(type, roll20) {
	    return (value) => {
	      const obj = roll20.getObj(type, value);
	      return {
	        converted: obj,
	        valid: !!obj,
	      };
	    };
	  }

	  static get spellSearchOptions() {
	    return {
	      classes: this.arrayValidator,
	      domains: this.arrayValidator,
	      oaths: this.arrayValidator,
	      patrons: this.arrayValidator,
	      school: this.stringValidator,
	      level: this.integerValidator,
	    };
	  }


	  static regExpValidator(value) {
	    try {
	      new RegExp(value, 'i').test('');
	      return {
	        converted: value,
	        valid: true,
	      };
	    }
	    catch (e) {
	      return {
	        converted: null,
	        valid: false,
	      };
	    }
	  }

	  static get configOptionsSpec() {
	    return {
	      tokenSettings: {
	        monsterTokenName: this.stringValidator,
	        number: this.booleanValidator,
	        bar1: this.barValidator,
	        bar2: this.barValidator,
	        bar3: this.barValidator,
	        aura1: this.auraValidator,
	        aura2: this.auraValidator,
	        light: this.lightValidator,
	        showName: this.booleanValidator,
	        showNameToPlayers: this.booleanValidator,
	        showAura1ToPlayers: this.booleanValidator,
	        showAura2ToPlayers: this.booleanValidator,
	      },
	      newCharSettings: {
	        applyToAll: this.booleanValidator,
	        sheetOutput: this.sheetOutputValidator,
	        deathSaveOutput: this.rollOutputValidator,
	        hitDiceOutput: this.rollOutputValidator,
	        initiativeOutput: this.rollOutputValidator,
	        showNameOnRollTemplate: this.getOptionList({
	          true: '{{show_character_name=1}}',
	          false: '***default***',
	        }),
	        rollOptions: this.getOptionList({
	          normal: '***default***',
	          advantage: '2d20kh1',
	          disadvantage: '2d20kl1',
	          query: '?{Roll|Normal,d20|Advantage,2d20kh1|Disadvantage,2d20kl1}',
	          advantageQuery: '?{Disadvantaged|No,2d20kh1|Yes,d20}',
	          disadvantageQuery: '?{Advantaged|No,2d20kl1|Yes,d20}',
	          two: '1d20',
	        }),
	        initiativeRoll: this.getOptionList({
	          normal: '***default***',
	          advantage: '2d20@{d20_mod}kh1',
	          disadvantage: '2d20@{d20_mod}kl1',
	        }),
	        initiativeToTracker: this.getOptionList({
	          true: '***default***',
	          false: 0,
	        }),
	        breakInitiativeTies: this.booleanValidator,
	        showTargetAC: this.booleanValidator,
	        showTargetName: this.booleanValidator,
	        autoAmmo: this.booleanValidator,
	        autoRevertAdvantage: this.booleanValidator,
	        automaticHigherLevelQueries: this.getOptionList({
	          true: '***default***',
	          false: 0,
	        }),
	        automaticallyExpendSpellResources: this.booleanValidator,
	        display: {
	          showRests: this.booleanValidator,
	          showPassiveSkills: this.booleanValidator,
	          showWeight: this.getOptionList({
	            true: '***default***',
	            false: 0,
	          }),
	          showEmote: this.booleanValidator,
	          showFreetext: this.booleanValidator,
	          showFreeform: this.booleanValidator,
	          showDiceModifiers: this.booleanValidator,
	          showCritRange: this.booleanValidator,
	          extraOnACrit: this.booleanValidator,
	        },
	        measurementSystems: {
	          distanceSystem: this.getOptionList({
	            feet: '***default***',
	            meters: 'METERS',
	          }),
	          weightSystem: this.getOptionList({
	            pounds: '***default***',
	            kilograms: 'KILOGRAMS',
	          }),
	          encumbranceMultiplier: this.floatValidator,
	        },
	        houserules: {
	          inspirationMultiple: this.booleanValidator,
	          criticalDamageHouserule: this.getOptionList({
	            normal: '***default***',
	            criticalDamageIsMaximized: 'CRITICAL_DAMAGE_IS_MAXIMIZED',
	            noCriticalDamageFromDefaultDamage: 'NO_CRITICAL_DAMAGE_FROM_DEFAULT_DAMAGE',
	          }),
	          proficiencyDice: this.booleanValidator,
	          psionics: this.booleanValidator,
	          customClasses: this.booleanValidator,
	          honorToggle: this.booleanValidator,
	          sanityToggle: this.booleanValidator,
	          baseDC: this.getOptionList(_.range(0, 21).reduce((result, val) => {
	            result[val] = val === 8 ? '***default***' : val;
	            return result;
	          }, {})),
	          mediumArmorMaxDex: this.getOptionList(_.range(0, 11).reduce((result, val) => {
	            result[val] = val === 2 ? '***default***' : val;
	            return result;
	          }, {})),
	          expertiseAsAdvantage: this.booleanValidator,
	          saves: {
	            savingThrowsHalfProf: this.booleanValidator,
	            useCustomSaves: this.booleanValidator,
	            useAverageOfAbilities: this.booleanValidator,
	            fortitude: {
	              fortitudeStrength: this.booleanValidator,
	              fortitudeDexterity: this.booleanValidator,
	              fortitudeConstitution: this.booleanValidator,
	              fortitudeIntelligence: this.booleanValidator,
	              fortitudeWisdom: this.booleanValidator,
	              fortitudeCharisma: this.booleanValidator,
	            },
	            reflex: {
	              reflexStrength: this.booleanValidator,
	              reflexDexterity: this.booleanValidator,
	              reflexConstitution: this.booleanValidator,
	              reflexIntelligence: this.booleanValidator,
	              reflexWisdom: this.booleanValidator,
	              reflexCharisma: this.booleanValidator,
	            },
	            will: {
	              willStrength: this.booleanValidator,
	              willDexterity: this.booleanValidator,
	              willConstitution: this.booleanValidator,
	              willIntelligence: this.booleanValidator,
	              willWisdom: this.booleanValidator,
	              willCharisma: this.booleanValidator,
	            },
	          },
	        },
	        tab: this.getOptionList({
	          core: '***default***',
	          character: 'character',
	          settings: 'settings',
	          all: 'all',
	        }),
	        tokenActions: {
	          initiative: this.booleanValidator,
	          abilityChecks: this.getOptionList({
	            none: null,
	            query: 'abilityChecksQuery',
	            chatWindow: 'abilityChecks',
	            queryShort: 'abilChecksQuery',
	            chatWindowShort: 'abilChecks',
	          }),
	          advantageTracker: this.getOptionList({
	            none: null,
	            normal: 'advantageTracker',
	            short: 'advantageTrackerShort',
	            shortest: 'advantageTrackerShortest',
	            query: 'advantageTrackerQuery',
	          }),
	          savingThrows: this.getOptionList({
	            none: null,
	            query: 'savingThrowsQuery',
	            chatWindow: 'savingThrows',
	            queryShort: 'savesQuery',
	            chatWindowShort: 'saves',
	          }),
	          attacks: this.getOptionList({
	            none: null,
	            individualActions: 'attacks',
	            chatWindow: 'attacksMacro',
	          }),
	          statblock: this.booleanValidator,
	          traits: this.getOptionList({
	            none: null,
	            individualActions: 'traits',
	            chatWindow: 'traitsMacro',
	          }),
	          racialTraits: this.getOptionList({
	            none: null,
	            individualActions: 'racialTraits',
	            chatWindow: 'racialTraitsMacro',
	          }),
	          classFeatures: this.getOptionList({
	            none: null,
	            individualActions: 'classFeatures',
	            chatWindow: 'classFeaturesMacro',
	          }),
	          feats: this.getOptionList({
	            none: null,
	            individualActions: 'feats',
	            chatWindow: 'featsMacro',
	          }),
	          actions: this.getOptionList({
	            none: null,
	            individualActions: 'actions',
	            chatWindow: 'actionsMacro',
	          }),
	          spells: this.booleanValidator,
	          reactions: this.getOptionList({
	            none: null,
	            individualActions: 'reactions',
	            chatWindow: 'reactionsMacro',
	          }),
	          legendaryActions: this.getOptionList({
	            none: null,
	            individualActions: 'legendaryActions',
	            chatWindow: 'legendaryActionsMacro',
	            chatWindowShort: 'legendaryA',
	          }),
	          lairActions: this.getOptionList({
	            none: null,
	            chatWindow: 'lairActions',
	            chatWindowShort: 'lairA',
	          }),
	          regionalEffects: this.getOptionList({
	            none: null,
	            chatWindow: 'regionalEffects',
	            chatWindowShort: 'regionalE',
	          }),
	          rests: this.booleanValidator,
	          showRecharges: this.booleanValidator,
	        },
	        textSizes: {
	          spellsTextSize: this.getOptionList({
	            normal: '***default***',
	            big: 'big',
	          }),
	          abilityChecksTextSize: this.getOptionList({
	            normal: '***default***',
	            big: 'text_big',
	          }),
	          savingThrowsTextSize: this.getOptionList({
	            normal: '***default***',
	            big: 'text_big',
	          }),
	        },
	        hide: {
	          hideAbilityChecks: this.getHideOption('hide_ability_checks'),
	          hideSavingThrows: this.getHideOption('hide_saving_throws'),
	          hideAttack: this.getHideOption('hide_attack'),
	          hideDamage: this.getHideOption('hide_damage'),
	          hideFreetext: this.getHideOption('hide_freetext'),
	          hideRecharge: this.getHideOption('hide_recharge'),
	          hideSavingThrowDC: this.getHideOption('hide_saving_throw_dc'),
	          hideSavingThrowFailure: this.getHideOption('hide_saving_throw_failure'),
	          hideSavingThrowSuccess: this.getHideOption('hide_saving_throw_success'),
	          hideContent: this.getHideOption('hide_content'),
	        },
	        customSkills: this.stringValidator,
	      },
	      advTrackerSettings: {
	        showMarkers: this.booleanValidator,
	        ignoreNpcs: this.booleanValidator,
	        advantageMarker: this.statusMarkerValidator,
	        disadvantageMarker: this.statusMarkerValidator,
	        output: this.commandOutputValidator,
	      },
	      sheetEnhancements: {
	        rollHPOnDrop: this.booleanValidator,
	        autoHD: this.booleanValidator,
	        autoTraits: this.booleanValidator,
	        turnRecharges: this.booleanValidator,
	        ammoRecovery: this.booleanValidator,
	      },
	      genderPronouns: [
	        {
	          matchPattern: this.regExpValidator,
	          nominative: this.stringValidator,
	          accusative: this.stringValidator,
	          possessive: this.stringValidator,
	          reflexive: this.stringValidator,
	        },
	      ],
	      defaultGenderIndex: this.integerValidator,
	      variants: {
	        rests: {
	          longRestHPRecovery: this.getOptionList({
	            all: 1,
	            half: 0.5,
	            none: 0,
	          }),
	          longRestHDRecovery: this.getOptionList({
	            all: 1,
	            half: 0.5,
	            none: 0,
	          }),
	        },
	      },
	    };
	  }

	  static validStatusMarkers() {
	    const markers = [
	      'red', 'blue', 'green', 'brown', 'purple', 'pink', 'yellow', 'dead', 'skull', 'sleepy',
	      'half-heart', 'half-haze', 'interdiction', 'snail', 'lightning-helix', 'spanner', 'chained-heart',
	      'chemical-bolt', 'death-zone', 'drink-me', 'edge-crack', 'ninja-mask', 'stopwatch', 'fishing-net', 'overdrive',
	      'strong', 'fist', 'padlock', 'three-leaves', 'fluffy-wing', 'pummeled', 'tread', 'arrowed', 'aura',
	      'back-pain', 'black-flag', 'bleeding-eye', 'bolt-shield', 'broken-heart', 'cobweb', 'broken-shield',
	      'flying-flag', 'radioactive', 'trophy', 'broken-skull', 'frozen-orb', 'rolling-bomb', 'white-tower',
	      'grab', 'screaming', 'grenade', 'sentry-gun', 'all-for-one', 'angel-outfit', 'archery-target',
	    ];

	    const obj = {};
	    for (let i = 0; i < markers.length; i++) {
	      obj[markers[i]] = markers[i];
	    }

	    return obj;
	  }
	};



/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const Utils = __webpack_require__(6);


	class Migrator {

	  constructor(startVersion) {
	    this._versions = [{ version: startVersion || 0.1, migrations: [] }];
	  }

	  skipToVersion(version) {
	    this._versions.push({ version, migrations: [] });
	    return this;
	  }

	  nextVersion() {
	    const currentVersion = this._versions.slice(-1)[0].version;
	    const nextVersion = (currentVersion * 10 + 1) / 10; // Avoid FP errors
	    this._versions.push({ version: nextVersion, migrations: [] });
	    return this;
	  }

	  addProperty(path, value) {
	    const expandedProperty = Utils.createObjectFromPath(path, value);
	    return this.transformConfig(config => Utils.deepExtend(config, expandedProperty),
	      `Adding property ${path} with value ${value}`);
	  }

	  overwriteProperty(path, value) {
	    return this.transformConfig((config) => {
	      const parts = path.split('.');
	      const obj = parts.length > 1 ? Utils.getObjectFromPath(config, parts.slice(0, -1).join('.')) : config;
	      obj[parts.slice(-1)[0]] = value;
	      return config;
	    }, `Overwriting property ${path} with value ${JSON.stringify(value)}`);
	  }

	  copyProperty(oldPath, newPath) {
	    return this.transformConfig(Migrator.propertyCopy.bind(null, oldPath, newPath),
	      `Copying property from ${oldPath} to ${newPath}`);
	  }


	  static propertyCopy(oldPath, newPath, config) {
	    const oldVal = Utils.getObjectFromPath(config, oldPath);
	    if (!_.isUndefined(oldVal)) {
	      const expandedProperty = Utils.createObjectFromPath(newPath, oldVal);
	      Utils.deepExtend(config, expandedProperty);
	    }
	    return config;
	  }

	  static propertyDelete(path, config) {
	    const parts = path.split('.');
	    const obj = parts.length > 1 ? Utils.getObjectFromPath(config, parts.slice(0, -1).join('.')) : config;
	    if (obj && !_.isUndefined(obj[parts.slice(-1)[0]])) {
	      delete obj[parts.slice(-1)[0]];
	    }
	    return config;
	  }

	  deleteProperty(propertyPath) {
	    return this.transformConfig(Migrator.propertyDelete.bind(null, propertyPath),
	      `Deleting property ${propertyPath} from config`);
	  }

	  moveProperty(oldPath, newPath) {
	    return this.transformConfig((config) => {
	      config = Migrator.propertyCopy(oldPath, newPath, config);
	      return Migrator.propertyDelete(oldPath, config);
	    }, `Moving property from ${oldPath} to ${newPath}`);
	  }

	  transformConfig(transformer, message) {
	    const lastVersion = this._versions.slice(-1)[0];
	    lastVersion.migrations.push({ transformer, message });
	    return this;
	  }

	  needsUpdate(state) {
	    return !state.version || state.version < _.last(this._versions).version;
	  }

	  isValid(state) {
	    return _.isEmpty(state) || state.version <= _.last(this._versions).version;
	  }

	  migrateConfig(state, logger) {
	    logger.info('Checking config for upgrade, starting state: $$$', state);
	    if (_.isEmpty(state)) {
	      // working with a fresh install here
	      state.version = 0;
	    }
	    if (!this._versions.find(version => version.version >= state.version)) {
	      throw new Error(`Unrecognised schema state ${state.version} - cannot upgrade.`);
	    }

	    return this._versions
	      .filter(version => version.version > state.version)
	      .reduce((versionResult, version) => {
	        logger.info('Upgrading schema to version $$$', version.version);

	        versionResult = version.migrations.reduce((result, migration) => {
	          logger.info(migration.message);
	          return migration.transformer(result);
	        }, versionResult);
	        versionResult.version = version.version;
	        logger.info('Post-upgrade state: $$$', versionResult);
	        return versionResult;
	      }, state);
	  }
	}

	module.exports = Migrator;


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const Utils = __webpack_require__(6);
	const ShapedModule = __webpack_require__(12);
	const ShapedConfig = __webpack_require__(13);

	class ConfigUi extends ShapedModule {

	  addCommands(commandProcessor) {
	    const menus = {
	      atMenu: new AdvantageTrackerMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      tsMenu: new TokensMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      barMenu: new TokenBarsMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      auraMenu: new TokenAurasMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      ncMenu: new NewCharacterMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      taMenu: new TokenActionsMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      hideMenu: new HideMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      hrMenu: new NewCharacterHouseruleMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      savesMenu: new SavesMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      fortitudeMenu: new CustomSaveTypeMenu(this.myState.config, ShapedConfig.configOptionsSpec, 'fortitude'),
	      reflexMenu: new CustomSaveTypeMenu(this.myState.config, ShapedConfig.configOptionsSpec, 'reflex'),
	      willMenu: new CustomSaveTypeMenu(this.myState.config, ShapedConfig.configOptionsSpec, 'will'),
	      textMenu: new NewCharacterTextSizeMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      varsMenu: new VariantsMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      seMenu: new SheetEnhancementsMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      displayMenu: new DisplayMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      msMenu: new MeasurementSystemsMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	      initMenu: new InitiativeMenu(this.myState.config, ShapedConfig.configOptionsSpec),
	    };

	    _.each(menus, menu => this.logger.wrapModule(menu));

	    return commandProcessor.addCommand('config', this.process.bind(this), true)
	      .options(ShapedConfig.configOptionsSpec)
	      .optionLookup('menu', menus);
	  }

	  process(options) {
	    // drop "menu" options
	    Utils.deepExtend(this.myState.config, _.omit(options, 'menu'));

	    if (options.menu) {
	      this.reportPlayer('Configuration', options.menu[0].getMenu(), options.playerId);
	    }
	    else if (_.isEmpty(_.omit(options, 'menu', 'playerId'))) {
	      const menu = new MainMenu(this.myState.config, ShapedConfig.configOptionsSpec);
	      this.reportPlayer('Configuration', menu.getMenu(), options.playerId);
	    }
	  }
	}

	module.exports = ConfigUi;

	/////////////////////////////////////////////////
	// Menu Base
	/////////////////////////////////////////////////
	class ConfigMenu {
	  constructor(config, specRoot) {
	    this.config = config;
	    this.specRoot = specRoot;
	  }

	  makeToggleSetting(params) {
	    let currentVal = Utils.getObjectFromPath(this.config, params.path);
	    if (params.spec) {
	      currentVal = _.invert(params.spec)[currentVal] === 'true';
	    }

	    params.command = `${!currentVal}${!_.isUndefined(params.menuCmd) ? ` --${params.menuCmd}` : ''}`;
	    params.linkText = this.makeBoolText(currentVal);
	    params.tooltip = 'click to toggle';
	    params.buttonColor = currentVal ? '#65c4bd' : '#f84545';

	    return this.makeOptionRow(params);
	  }

	  makeQuerySetting(params) {
	    const currentVal = _.invert(params.spec)[Utils.getObjectFromPath(this.config, params.path)];
	    const cmd = this.getQueryCommand(params.path, params.title, params.spec);

	    params.command = `${cmd}${!_.isUndefined(params.menuCmd) ? ` --${params.menuCmd}` : ''}`;
	    params.linkText = this.makeText(currentVal);
	    params.tooltip = 'click to change';
	    params.buttonColor = '#02baf2';

	    return this.makeOptionRow(params);
	  }

	  makeInputSetting(params) {
	    const currentVal = Utils.getObjectFromPath(this.config, params.path);

	    params.command = `?{${params.prompt}|${currentVal}}${!_.isUndefined(params.menuCmd) ? ` --${params.menuCmd}` : ''}`;
	    params.linkText = currentVal || '[not set]';
	    params.tooltip = 'click to edit';
	    params.buttonColor = params.linkText === '[not set]' ? '#f84545' : '#02baf2';

	    return this.makeOptionRow(params);
	  }

	  // noinspection JSUnusedGlobalSymbols
	  makeColorSetting(params) {
	    const currentVal = Utils.getObjectFromPath(this.config, params.path);

	    params.command = `?{${params.prompt}|${currentVal}}${!_.isUndefined(params.menuCmd) ? ` --${params.menuCmd}` : ''}`;
	    params.linkText = currentVal || '[not set]';
	    params.tooltip = 'click to edit';
	    params.buttonColor = params.linkText === '[not set]' ? '#02baf2' : currentVal;
	    params.buttonTextColor = Utils.getContrastYIQ(params.buttonColor);

	    return this.makeOptionRow(params);
	  }

	  backToMainMenuButton() {
	    return Utils.buildHTML('a', '&lt;-- Main Menu', {
	      href: '!shaped-config',
	      style: 'text-align: center; margin: 5px 0 0 0; padding: 2px 2px ; border-radius: 10px; white-space: nowrap; ' +
	      'overflow: hidden; text-overflow: ellipsis; background-color: #02baf2; border-color: #c0c0c0;',
	    });
	  }

	  backToTokenOptions() {
	    return Utils.buildHTML('a', '&lt;-- Token Options', {
	      href: '!shaped-config --tsMenu',
	      style: 'text-align: center; margin: 5px 0 0 0; padding: 2px 2px ; border-radius: 10px; white-space: nowrap; ' +
	      'overflow: hidden; text-overflow: ellipsis; background-color: #02baf2; border-color: #c0c0c0;',
	    });
	  }

	  backToNewCharOptions() {
	    return Utils.buildHTML('a', '&lt;-- New Character Options', {
	      href: '!shaped-config --ncMenu',
	      style: 'text-align: center; margin: 5px 0 0 0; padding: 2px 2px ; border-radius: 10px; white-space: nowrap; ' +
	      'overflow: hidden; text-overflow: ellipsis; background-color: #02baf2; border-color: #c0c0c0;',
	    });
	  }

	  backToHouseRuleOptions() {
	    return Utils.buildHTML('a', '&lt;-- Houserule Options', {
	      href: '!shaped-config --hrMenu',
	      style: 'text-align: center; margin: 5px 0 0 0; padding: 2px 2px ; border-radius: 10px; white-space: nowrap; ' +
	      'overflow: hidden; text-overflow: ellipsis; background-color: #02baf2; border-color: #c0c0c0;',
	    });
	  }

	  backToSavesOptions() {
	    return Utils.buildHTML('a', '&lt;-- Saves Options', {
	      href: '!shaped-config --savesMenu',
	      style: 'text-align: center; margin: 5px 0 0 0; padding: 2px 2px ; border-radius: 10px; white-space: nowrap; ' +
	      'overflow: hidden; text-overflow: ellipsis; background-color: #02baf2; border-color: #c0c0c0;',
	    });
	  }

	  getQueryCommand(path, title, optionsSpec) {
	    let currentVal = _.invert(optionsSpec)[Utils.getObjectFromPath(this.config, path)];
	    const optionList = _.keys(optionsSpec);

	    // Fix up if we've somehow ended up with an illegal value
	    if (_.isUndefined(currentVal)) {
	      currentVal = _.first(optionList);
	      Utils.deepExtend(this.config, Utils.createObjectFromPath(path, optionsSpec[currentVal]));
	    }

	    // move the current option to the front of the list
	    optionList.splice(optionList.indexOf(currentVal), 1);
	    optionList.unshift(currentVal);

	    return `?{${title}|${optionList.join('|')}}`;
	  }

	  makeOptionRow(params) {
	    const col1 = Utils.buildHTML('td', params.title);
	    const col2 = Utils.buildHTML('td', this.makeOptionButton(params), { style: 'text-align:right;' });

	    return Utils.buildHTML('tr', col1 + col2, { style: 'border: 1px solid gray;' });
	  }

	  makeOptionButton(params) {
	    if (_.isUndefined(params.width)) {
	      params.width = 80;
	    }

	    let css = `text-align: center; width: ${params.width}px; margin: 2px 0 -3px 0; ` +
	      'padding: 2px 2px ; border-radius: 10px; border-color: #c0c0c0;' +
	      `white-space: nowrap; overflow: hidden; text-overflow: ellipsis; background-color: ${params.buttonColor};`;
	    if (params.buttonTextColor) {
	      css += `color: ${params.buttonTextColor}`;
	    }

	    return Utils.buildHTML('a', params.linkText, {
	      style: css,
	      href: `!shaped-config --${params.path} ${params.command}`,
	    });
	  }

	  makeText(value) {
	    return Utils.buildHTML('span', value, { style: 'padding: 0 2px;' });
	  }

	  makeBoolText(value) {
	    return value === true ?
	      Utils.buildHTML('span', 'on', { style: 'padding: 0 2px;' }) :
	      Utils.buildHTML('span', 'off', { style: 'padding: 0 2px;' });
	  }

	  /* eslint-disable object-property-newline */
	  makeThreeColOptionTable(options) {
	    return Utils
	      .buildHTML('tr', [
	        {
	          tag: 'td',
	          innerHtml: [
	            {
	              tag: 'table',
	              innerHtml: [
	                {
	                  tag: 'tr',
	                  innerHtml: [{ tag: 'th', innerHtml: options.tableTitle, attrs: { colspan: 3 } }],
	                },
	                {
	                  tag: 'tr',
	                  innerHtml: [
	                    {
	                      tag: 'td',
	                      innerHtml: options.colTitles[0],
	                    },
	                    {
	                      tag: 'td',
	                      innerHtml: options.colTitles[1],
	                    },
	                    {
	                      tag: 'td',
	                      innerHtml: options.colTitles[2],
	                    },
	                  ],
	                  attrs: { style: 'line-height: 1;' },
	                },
	                {
	                  tag: 'tr',
	                  innerHtml: [
	                    {
	                      tag: 'td',
	                      innerHtml: options.buttons[0],
	                    },
	                    {
	                      tag: 'td',
	                      innerHtml: options.buttons[1],
	                    },
	                    {
	                      tag: 'td',
	                      innerHtml: options.buttons[2],
	                    },
	                  ],
	                },
	                {
	                  tag: 'tr',
	                  innerHtml: [
	                    {
	                      tag: 'td',
	                      innerHtml: options.colTitles[3],
	                    },
	                  ],
	                  attrs: { style: 'line-height: 1;' },
	                },
	                {
	                  tag: 'tr',
	                  innerHtml: [
	                    {
	                      tag: 'td',
	                      innerHtml: options.buttons[3],
	                    },
	                  ],
	                },
	              ],
	              attrs: { style: 'width: 100%; text-align: center;' },
	            },
	          ], attrs: { colspan: '2' },
	        },
	      ], { style: 'border: 1px solid gray;' });
	  }

	  get logWrap() {
	    return this.constructor.name;
	  }

	  toJSON() {
	    return {};
	  }
	}

	/////////////////////////////////////////////////
	// Menus
	/////////////////////////////////////////////////
	class MainMenu extends ConfigMenu {
	  getMenu() {
	    const optionRows =
	      this.makeOptionRow({
	        title: 'Advantage Tracker', path: 'atMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'Token Defaults', path: 'tsMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'New Characters', path: 'ncMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'Char. Sheet Enhancements', path: 'seMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'Houserules & Variants', path: 'varsMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      });

	    const th = Utils.buildHTML('th', 'Main Menu', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const footer = Utils.buildHTML('tr', Utils.buildHTML('td', 'Shaped Companion Version v8.1.0',
	      { colspan: '2' }));

	    return Utils.buildHTML('table', tr + optionRows + footer, { style: 'width: 100%; font-size: 0.9em;' });
	  }
	}

	class AdvantageTrackerMenu extends ConfigMenu {
	  getMenu() {
	    const ats = 'advTrackerSettings';
	    const menu = 'atMenu';

	    const optionRows =
	      this.makeQuerySetting({
	        path: `${ats}.output`, title: 'Output', menuCmd: menu,
	        spec: this.specRoot.advTrackerSettings.output(),
	      }) +
	      this.makeToggleSetting({
	        path: `${ats}.showMarkers`, title: 'Show Markers', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${ats}.ignoreNpcs`, title: 'Ignore NPCs', menuCmd: menu,
	      }) +
	      this.makeQuerySetting({
	        path: `${ats}.advantageMarker`, title: 'Advantage Marker', menuCmd: menu,
	        spec: this.specRoot.advTrackerSettings.advantageMarker(),
	      }) +
	      this.makeQuerySetting({
	        path: `${ats}.disadvantageMarker`, title: 'Disadvantage Marker', menuCmd: menu,
	        spec: this.specRoot.advTrackerSettings.disadvantageMarker(),
	      });


	    const th = Utils.buildHTML('th', 'Advantage Tracker Options', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToMainMenuButton();
	  }
	}

	class TokensMenu extends ConfigMenu {
	  getMenu() { // config) {
	    // this.config = config;
	    const ts = 'tokenSettings';
	    const menu = 'tsMenu';

	    const optionRows =
	      this.makeToggleSetting({
	        path: `${ts}.number`, title: 'Numbered Tokens', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${ts}.showName`, title: 'Show Name Tag', menuCmd: menu,
	      }) +
	      this.makeInputSetting({
	        path: `${ts}.monsterTokenName`, title: 'Token name override', prompt: 'Token name override (empty to unset)',
	        menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${ts}.showNameToPlayers`, title: 'Show Name to Players', menuCmd: menu,
	      }) +
	      this.makeInputSetting({
	        path: `${ts}.light.radius`, title: 'Light Radius', prompt: 'Light Radius (empty to unset)', menuCmd: menu,
	      }) +
	      this.makeInputSetting({
	        path: `${ts}.light.dimRadius`, title: 'Dim Radius', prompt: 'Light Dim Radius (empty to unset)', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${ts}.light.otherPlayers`, title: 'Other players see light', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${ts}.light.hasSight`, title: 'Has Sight', menuCmd: menu,
	      }) +
	      this.makeInputSetting({
	        path: `${ts}.light.angle`, title: 'Light Angle', prompt: 'Light Angle', menuCmd: menu,
	      }) +
	      this.makeInputSetting({
	        path: `${ts}.light.losAngle`, title: 'LOS Angle', prompt: 'LOS Angle', menuCmd: menu,
	      }) +
	      this.makeInputSetting({
	        path: `${ts}.light.multiplier`, title: 'Light Muliplier', prompt: 'Light Muliplier', menuCmd: menu,
	      }) +
	      this.makeOptionRow({
	        title: 'Token Bar Options', path: 'barMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'Token Aura Options', path: 'auraMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      });

	    const th = Utils.buildHTML('th', 'Token Options', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToMainMenuButton();
	  }
	}

	class TokenBarsMenu extends ConfigMenu {
	  getMenu() {
	    const ts = 'tokenSettings';
	    const menu = 'barMenu';

	    let optionRows = '';

	    for (let i = 1; i <= 3; i++) {
	      const currAttr = Utils.getObjectFromPath(this.config, `${ts}.bar${i}.attribute`);
	      const currAttrEmptyHint = currAttr || '[not set]';
	      const currMax = Utils.getObjectFromPath(this.config, `${ts}.bar${i}.max`);
	      const currLink = Utils.getObjectFromPath(this.config, `${ts}.bar${i}.link`);

	      const attBtn = this.makeOptionButton({
	        path: `${ts}.bar${i}.attribute`, linkText: this.makeText(currAttrEmptyHint), tooltip: 'click to edit',
	        buttonColor: currAttrEmptyHint === '[not set]' ? '#f84545' : '#02baf2', width: 60,
	        command: `?{Bar ${i} Attribute (empty to unset)|${currAttr}} --${menu}`,
	      });
	      const maxBtn = this.makeOptionButton({
	        path: `${ts}.bar${i}.max`, linkText: this.makeBoolText(currMax), tooltip: 'click to toggle',
	        buttonColor: currMax ? '#65c4bd' : '#f84545', width: 60,
	        command: `${!currMax} --${menu}`,
	      });
	      const linkBtn = this.makeOptionButton({
	        path: `${ts}.bar${i}.link`, linkText: this.makeBoolText(currLink), tooltip: 'click to togle',
	        buttonColor: currLink ? '#65c4bd' : '#f84545', width: 60,
	        command: `${!currLink} --${menu}`,
	      });

	      optionRows += this.makeThreeColOptionTable({
	        tableTitle: `Bar ${i}`,
	        colTitles: ['Attribute', 'Max', 'Link'],
	        buttons: [attBtn, maxBtn, linkBtn],
	      });
	    }

	    for (let i = 1; i <= 3; i++) {
	      optionRows += this.makeToggleSetting({
	        path: `${ts}.bar${i}.showPlayers`, title: `Bar ${i} Show Players`, menuCmd: 'barMenu',
	      });
	    }

	    const th = Utils.buildHTML('th', 'Token Bar Options', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToTokenOptions();
	  }
	}

	class TokenAurasMenu extends ConfigMenu {
	  getMenu() {
	    const ts = 'tokenSettings';
	    const menu = 'auraMenu';

	    let optionRows = '';

	    for (let i = 1; i <= 2; i++) {
	      const currRad = Utils.getObjectFromPath(this.config, `${ts}.aura${i}.radius`);
	      const currRadEmptyHint = currRad || '[not set]';
	      const currColor = Utils.getObjectFromPath(this.config, `${ts}.aura${i}.color`);
	      const currSquare = Utils.getObjectFromPath(this.config, `${ts}.aura${i}.square`);

	      const radBtn = this.makeOptionButton({
	        path: `${ts}.aura${i}.radius`, linkText: this.makeText(currRadEmptyHint), tooltip: 'click to edit',
	        buttonColor: currRadEmptyHint === '[not set]' ? '#f84545' : '#02baf2', width: 60,
	        command: `?{Aura ${i} Radius (empty to unset)|${currRad}} --${menu}`,
	      });
	      const colorBtn = this.makeOptionButton({
	        path: `tokenSettings.aura${i}.color`, linkText: this.makeText(currColor), tooltip: 'click to edit',
	        buttonColor: currColor, buttonTextColor: Utils.getContrastYIQ(currColor), width: 60,
	        command: `?{Aura ${i} Color (hex colors)|${currColor}} --${menu}`,
	      });
	      const squareBtn = this.makeOptionButton({
	        path: `tokenSettings.aura${i}.square`, linkText: this.makeBoolText(currSquare), tooltip: 'click to toggle',
	        buttonColor: currSquare ? '#65c4bd' : '#f84545', width: 60,
	        command: `${!currSquare} --${menu}`,

	      });

	      optionRows += this.makeThreeColOptionTable({
	        tableTitle: `Aura ${i}`,
	        colTitles: ['Range', 'Color', 'Square'],
	        buttons: [radBtn, colorBtn, squareBtn],
	      });
	    }

	    for (let i = 1; i <= 2; i++) {
	      optionRows += this.makeToggleSetting({
	        path: `${ts}.showAura${i}ToPlayers`, title: `Aura ${i} Show Players`, menuCmd: 'auraMenu',
	      });
	    }

	    const th = Utils.buildHTML('th', 'Token Aura Options', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToTokenOptions();
	  }
	}

	class NewCharacterMenu extends ConfigMenu {
	  getMenu() {
	    const menu = 'ncMenu';
	    const ncs = 'newCharSettings';
	    let optionRows =
	      this.makeToggleSetting({ path: `${ncs}.applyToAll`, title: 'Apply to all new chars?', menuCmd: menu });

	    const spec = this.specRoot.newCharSettings;

	    const currSheetOut =
	      _.invert(spec.sheetOutput())[Utils.getObjectFromPath(this.config, `${ncs}.sheetOutput`)];
	    const currDSaveOut =
	      _.invert(spec.deathSaveOutput())[Utils.getObjectFromPath(this.config, `${ncs}.deathSaveOutput`)];
	    const currHDOut =
	      _.invert(spec.hitDiceOutput())[Utils.getObjectFromPath(this.config, `${ncs}.hitDiceOutput`)];


	    const sheetBtn = this.makeOptionButton({
	      path: `${ncs}.sheetOutput`, linkText: this.makeText(currSheetOut), tooltip: 'click to change',
	      buttonColor: '#02baf2', width: 60,
	      command: `${this.getQueryCommand(`${ncs}.sheetOutput`, 'Sheet Output', spec.sheetOutput())}`
	      + ` --${menu}`,
	    });
	    const dSaveBtn = this.makeOptionButton({
	      path: `${ncs}.deathSaveOutput`, linkText: this.makeText(currDSaveOut), tooltip: 'click to change',
	      buttonColor: '#02baf2', width: 60,
	      command: `${this.getQueryCommand(`${ncs}.deathSaveOutput`, 'Death Save Output', spec.deathSaveOutput())}`
	      + ` --${menu}`,
	    });
	    const hdBtn = this.makeOptionButton({
	      path: `${ncs}.hitDiceOutput`, linkText: this.makeText(currHDOut), tooltip: 'click to change',
	      buttonColor: '#02baf2', width: 60,
	      command: `${this.getQueryCommand(`${ncs}.hitDiceOutput`, 'Death Save Output', spec.hitDiceOutput())}`
	      + ` --${menu}`,
	    });


	    optionRows += this.makeThreeColOptionTable({
	      tableTitle: 'Output',
	      colTitles: ['Sheet', 'Death Save', 'Hit Dice'],
	      buttons: [sheetBtn, dSaveBtn, hdBtn],
	    });

	    optionRows +=
	      this.makeOptionRow({
	        title: 'Initiative Settings', path: 'initMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeToggleSetting({
	        path: `${ncs}.showNameOnRollTemplate`, title: 'Show Name on Roll Template', menuCmd: menu,
	        spec: spec.showNameOnRollTemplate(),
	      }) +
	      this.makeQuerySetting({
	        path: `${ncs}.rollOptions`, title: 'Roll Options', menuCmd: menu, spec: spec.rollOptions(),
	      }) +
	      this.makeToggleSetting({
	        path: `${ncs}.autoRevertAdvantage`, title: 'Revert Advantage', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${ncs}.showTargetAC`, title: 'Show Target AC', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${ncs}.showTargetName`, title: 'Show Target Name', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${ncs}.autoAmmo`, title: 'Auto Use Ammo', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${ncs}.automaticHigherLevelQueries`, title: 'Automatic Higher Level Queries', menuCmd: menu,
	        spec: spec.automaticHigherLevelQueries(),
	      }) +
	      this.makeToggleSetting({
	        path: `${ncs}.automaticallyExpendSpellResources`, title: 'Auto spell slots/points', menuCmd: menu,
	      }) +
	      this.makeQuerySetting({
	        path: `${ncs}.tab`, title: 'Default tab', menuCmd: menu, spec: spec.tab(),
	      }) +
	      this.makeOptionRow({
	        title: 'Default Token Actions', path: 'taMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'Display Settings', path: 'displayMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'Houserule Settings', path: 'hrMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'Hide Settings', path: 'hideMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'Measurement Systems', path: 'msMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'Text sizes', path: 'textMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      });

	    const th = Utils.buildHTML('th', 'New Character Sheets', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToMainMenuButton();
	  }
	}

	class InitiativeMenu extends ConfigMenu {
	  getMenu() {
	    const ncs = 'newCharSettings';
	    const menu = 'initMenu';
	    const spec = this.specRoot.newCharSettings;

	    const optionRows =
	      this.makeQuerySetting({
	        path: `${ncs}.initiativeOutput`, title: 'Initiative Output', menuCmd: menu, spec: spec.initiativeOutput(),
	      }) +
	      this.makeQuerySetting({
	        path: `${ncs}.initiativeRoll`, title: 'Init Roll', menuCmd: menu, spec: spec.initiativeRoll(),
	      }) +
	      this.makeToggleSetting({
	        path: `${ncs}.initiativeToTracker`, title: 'Init To Tracker', menuCmd: menu, spec: spec.initiativeToTracker(),
	      }) +
	      this.makeToggleSetting({
	        path: `${ncs}.breakInitiativeTies`, title: 'Break Init Ties', menuCmd: menu,
	      });


	    const th = Utils.buildHTML('th', 'Initiative Settings', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToNewCharOptions();
	  }
	}


	class DisplayMenu extends ConfigMenu {
	  getMenu() {
	    const display = 'newCharSettings.display';
	    const menu = 'displayMenu';
	    const spec = this.specRoot.newCharSettings.display;

	    const optionRows =
	      this.makeToggleSetting({
	        path: `${display}.showRests`, title: 'Show Rests', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${display}.showPassiveSkills`, title: 'Show Passive Skills', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${display}.showWeight`, title: 'Show Weight', menuCmd: menu, spec: spec.showWeight(),
	      }) +
	      this.makeToggleSetting({
	        path: `${display}.showEmote`, title: 'Show Emote', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${display}.showFreetext`, title: 'Show Freetext', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${display}.showFreeform`, title: 'Show Freeform', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${display}.showDiceModifiers`, title: 'Show Dice Modifiers', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${display}.showCritRange`, title: 'Show Crit Range', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${display}.extraOnACrit`, title: 'Extra on a Crit', menuCmd: menu,
	      });


	    const th = Utils.buildHTML('th', 'Display Settings', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToNewCharOptions();
	  }
	}

	class MeasurementSystemsMenu extends ConfigMenu {
	  getMenu() {
	    const ms = 'newCharSettings.measurementSystems';
	    const menu = 'msMenu';
	    const spec = this.specRoot.newCharSettings.measurementSystems;

	    const optionRows =
	      this.makeQuerySetting({
	        path: `${ms}.distanceSystem`, title: 'Distance System', prompt: 'Distance System', menuCmd: menu,
	        spec: spec.distanceSystem(),
	      }) +
	      this.makeQuerySetting({
	        path: `${ms}.weightSystem`, title: 'Weight System', prompt: 'Weight System', menuCmd: menu,
	        spec: spec.weightSystem(),
	      }) +
	      this.makeInputSetting({
	        path: `${ms}.encumbranceMultiplier`, title: 'Encumbrance Multiplier', prompt: 'Encumbrance Multiplier',
	        menuCmd: menu,
	      });

	    const th = Utils.buildHTML('th', 'Measurement Systems', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToNewCharOptions();
	  }
	}

	class NewCharacterHouseruleMenu extends ConfigMenu {
	  getMenu() {
	    const hr = 'newCharSettings.houserules';
	    const menu = 'hrMenu';

	    const optionRows =
	      this.makeToggleSetting({
	        path: `${hr}.inspirationMultiple`, title: 'Multiple Inspiration', menuCmd: menu,
	      }) +
	      this.makeQuerySetting({
	        path: `${hr}.criticalDamageHouserule`, title: 'Critical Damage', prompt: 'Critical Damage', menuCmd: menu,
	        spec: this.specRoot.newCharSettings.houserules.criticalDamageHouserule(),
	      }) +
	      this.makeToggleSetting({
	        path: `${hr}.proficiencyDice`, title: 'Proficiency Dice', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${hr}.psionics`, title: 'Psionics', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${hr}.customClasses`, title: 'Custom Classes', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${hr}.expertiseAsAdvantage`, title: 'Expertise as advantage', menuCmd: menu,
	      }) +
	      this.makeQuerySetting({
	        path: `${hr}.baseDC`, title: 'Base DC', prompt: 'Base DC', menuCmd: menu,
	        spec: this.specRoot.newCharSettings.houserules.baseDC(),
	      }) +
	      this.makeQuerySetting({
	        path: `${hr}.mediumArmorMaxDex`, title: 'Medium Armor Max Dex', menuCmd: menu,
	        spec: this.specRoot.newCharSettings.houserules.mediumArmorMaxDex(),
	      }) +
	      this.makeToggleSetting({
	        path: `${hr}.honorToggle`, title: 'Honor', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${hr}.sanityToggle`, title: 'Sanity', menuCmd: menu,
	      }) +
	      this.makeOptionRow({
	        title: 'Saving Throws', path: 'savesMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      });

	    const th = Utils.buildHTML('th', 'Houserule Settings', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToNewCharOptions();
	  }
	}

	class HideMenu extends ConfigMenu {
	  getMenu() {
	    const hide = 'newCharSettings.hide';
	    const menu = 'hideMenu';

	    const optionRows = [
	      'hideAbilityChecks', 'hideSavingThrows', 'hideAttack', 'hideDamage', 'hideFreetext', 'hideRecharge',
	      'hideSavingThrowDC', 'hideSavingThrowFailure', 'hideSavingThrowSuccess', 'hideContent',
	    ].reduce((result, functionName) => {
	      const title = Utils.toTitleCase(
	        functionName.replace(/([a-z])([A-Z]+)/g, (match, lower, upper) => `${lower} ${upper.toLowerCase()}`));
	      result += this.makeToggleSetting({
	        path: `${hide}.${functionName}`, title, menuCmd: menu,
	        spec: this.specRoot.newCharSettings.hide[functionName](),
	      });
	      return result;
	    }, '');

	    const th = Utils.buildHTML('th', 'Hide Settings', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToNewCharOptions();
	  }
	}

	class SavesMenu extends ConfigMenu {
	  getMenu() {
	    const saves = 'newCharSettings.houserules.saves';
	    const menu = 'savesMenu';

	    const optionRows =
	      this.makeToggleSetting({
	        path: `${saves}.savingThrowsHalfProf`, title: 'Half Proficiency Saves', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${saves}.useCustomSaves`, title: 'Use Custom Saves', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${saves}.useAverageOfAbilities`, title: 'Use Average of Highest Abils', menuCmd: menu,
	      }) +
	      this.makeOptionRow({
	        title: 'Fortitude', path: 'fortitudeMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'Reflex', path: 'reflexMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      }) +
	      this.makeOptionRow({
	        title: 'Will', path: 'willMenu', command: '', linkText: 'view --&gt;', buttonColor: '#02baf2',
	      });

	    const th = Utils.buildHTML('th', 'Houserule Settings', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToHouseRuleOptions();
	  }
	}

	class CustomSaveTypeMenu extends ConfigMenu {

	  constructor(config, specRoot, saveName) {
	    super(config, specRoot);
	    this.saveName = saveName;
	  }

	  getMenu() {
	    const saves = `newCharSettings.houserules.saves.${this.saveName}`;
	    const menu = `${this.saveName}Menu`;

	    const optionRows = ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma']
	      .reduce((result, attr) => {
	        const propName = `${this.saveName}${attr}`;
	        result += this.makeToggleSetting({
	          path: `${saves}.${propName}`, title: attr, menuCmd: menu,
	        });
	        return result;
	      }, '');

	    const th = Utils.buildHTML('th', `${this.saveName} Saves`, { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToSavesOptions();
	  }
	}


	class NewCharacterTextSizeMenu extends ConfigMenu {
	  getMenu() {
	    const textSizes = 'newCharSettings.textSizes';
	    const menu = 'textMenu';

	    const optionRows =
	      this.makeQuerySetting({
	        path: `${textSizes}.spellsTextSize`, title: 'Spells', menuCmd: menu,
	        spec: this.specRoot.newCharSettings.textSizes.spellsTextSize(),
	      }) +
	      this.makeQuerySetting({
	        path: `${textSizes}.abilityChecksTextSize`, title: 'Ability Checks', menuCmd: menu,
	        spec: this.specRoot.newCharSettings.textSizes.abilityChecksTextSize(),
	      }) +
	      this.makeQuerySetting({
	        path: `${textSizes}.savingThrowsTextSize`, title: 'Saving Throws', menuCmd: menu,
	        spec: this.specRoot.newCharSettings.textSizes.savingThrowsTextSize(),
	      });

	    const th = Utils.buildHTML('th', 'Text sizes', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToNewCharOptions();
	  }
	}


	class VariantsMenu extends ConfigMenu {
	  getMenu() {
	    const root = 'variants';
	    const menu = 'varsMenu';
	    const spec = this.specRoot.variants;

	    const optionRows =
	      this.makeQuerySetting({
	        path: `${root}.rests.longRestHPRecovery`, title: 'Long Rest HP Recovery', menuCmd: menu,
	        spec: spec.rests.longRestHPRecovery(),
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.rests.longRestHDRecovery`, title: 'Long Rest HD Recovery', menuCmd: menu,
	        spec: spec.rests.longRestHDRecovery(),
	      });

	    const th = Utils.buildHTML('th', 'Houserules & Variants', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });

	    return table + this.backToMainMenuButton();
	  }
	}

	class SheetEnhancementsMenu extends ConfigMenu {
	  getMenu() {
	    const root = 'sheetEnhancements';
	    const menu = 'seMenu';

	    const optionRows =
	      this.makeToggleSetting({
	        path: `${root}.rollHPOnDrop`, title: 'Roll HP On Drop', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${root}.autoHD`, title: 'Process HD Automatically', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${root}.autoTraits`, title: 'Process Uses automatically', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${root}.turnRecharges`, title: 'Recharge uses on new turns', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${root}.ammoRecovery`, title: 'Show ammo recovery buttons', menuCmd: menu,
	      });

	    const th = Utils.buildHTML('th', 'Character Sheet Enhancements', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });
	    return table + this.backToMainMenuButton();
	  }
	}

	class TokenActionsMenu extends ConfigMenu {
	  getMenu() {
	    const root = 'newCharSettings.tokenActions';
	    const menu = 'taMenu';
	    const spec = this.specRoot.newCharSettings.tokenActions;

	    const optionRows =
	      this.makeToggleSetting({
	        path: `${root}.showRecharges`, title: 'Show recharges', menuCmd: menu,
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.advantageTracker`, title: 'Advantage Tracker', menuCmd: menu, spec: spec.advantageTracker(),
	      }) +
	      this.makeToggleSetting({
	        path: `${root}.initiative`, title: 'Initiative', menuCmd: menu,
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.abilityChecks`, title: 'Ability Checks', menuCmd: menu, spec: spec.abilityChecks(),
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.savingThrows`, title: 'Saves', menuCmd: menu, spec: spec.savingThrows(),
	      }) +
	      this.makeToggleSetting({
	        path: `${root}.rests`, title: 'Rests', menuCmd: menu,
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.attacks`, title: 'Attacks', menuCmd: menu, spec: spec.attacks(),
	      }) +
	      this.makeToggleSetting({
	        path: `${root}.spells`, title: 'Spells', menuCmd: menu,
	      }) +
	      this.makeToggleSetting({
	        path: `${root}.statblock`, title: 'Statblock', menuCmd: menu,
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.traits`, title: 'Traits', menuCmd: menu, spec: spec.traits(),
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.racialTraits`, title: 'Racial Traits', menuCmd: menu, spec: spec.racialTraits(),
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.classFeatures`, title: 'Class Features', menuCmd: menu, spec: spec.classFeatures(),
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.feats`, title: 'Feats', menuCmd: menu, spec: spec.feats(),
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.actions`, title: 'Actions', menuCmd: menu, spec: spec.actions(),
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.reactions`, title: 'Reactions', menuCmd: menu, spec: spec.reactions(),
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.legendaryActions`, title: 'Legendary Actions', menuCmd: menu, spec: spec.legendaryActions(),
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.lairActions`, title: 'Lair Actions', menuCmd: menu, spec: spec.lairActions(),
	      }) +
	      this.makeQuerySetting({
	        path: `${root}.regionalEffects`, title: 'Regional Effects', menuCmd: menu, spec: spec.regionalEffects(),
	      });

	    const th = Utils.buildHTML('th', 'Default Token Actions', { colspan: '2' });
	    const tr = Utils.buildHTML('tr', th, { style: 'margin-top: 5px;' });
	    const table = Utils.buildHTML('table', tr + optionRows, { style: 'width: 100%; font-size: 0.9em;' });
	    return table + this.backToNewCharOptions();
	  }
	}

	/* eslint-disable object-property-newline */


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const Utils = __webpack_require__(6);
	const ShapedModule = __webpack_require__(12);
	const ShapedConfig = __webpack_require__(13);

	const rollOptions = {
	  normal: {
	    message: 'normally',
	    shaped_d20: 'd20',
	  },
	  advantage: {
	    message: 'with advantage',
	    shaped_d20: '2d20kh1',
	  },
	  disadvantage: {
	    message: 'with disadvantage',
	    shaped_d20: '2d20kl1',
	  },
	  roll2: {
	    message: 'two dice',
	    shaped_d20: '1d20',
	  },
	};

	class AdvantageTracker extends ShapedModule {

	  addCommands(commandProcessor) {
	    return commandProcessor.addCommand('at', this.process.bind(this), false)
	      .option('advantage', ShapedConfig.booleanValidator)
	      .option('disadvantage', ShapedConfig.booleanValidator)
	      .option('normal', ShapedConfig.booleanValidator)
	      .option('revert', ShapedConfig.booleanValidator)
	      .option('persist', ShapedConfig.booleanValidator)
	      .option('id', ShapedConfig.getCharacterValidator(this.roll20), false)
	      .withSelection({
	        character: {
	          min: 0,
	          max: Infinity,
	        },
	      });
	  }

	  registerEventListeners(eventDispatcher) {
	    eventDispatcher.registerEventHandler('add:token', this.handleTokenAdded.bind(this));
	    eventDispatcher.registerAttributeChangeHandler('shaped_d20', this.handleRollOptionChange.bind(this));
	  }

	  registerChatListeners(chatWatcher) {
	    chatWatcher.registerChatListener(['character', '2d20kh1'], this.handleD20Roll.bind(this));
	    chatWatcher.registerChatListener(['character', '2d20kl1'], this.handleD20Roll.bind(this));
	  }

	  handleD20Roll(options) {
	    const autoRevertOptions = this.roll20.getAttrByName(options.character.id, 'auto_revert_advantage');
	    if (autoRevertOptions === 1 || autoRevertOptions === '1') {
	      this.setRollOption('normal', [options.character]);
	    }
	  }

	  process(options) {
	    let type;

	    // const at = new AdvantageTracker(this.logger, this.myState, this.roll20);

	    if (!_.isUndefined(options.id)) {
	      // if an ID is passed, overwrite any selection, and only process for the passed charId
	      options.selected.character = [options.id];
	    }

	    if (_.isEmpty(options.selected.character)) {
	      this.reportError('Advantage Tracker was called, but no token was selected, and no character id was passed.',
	        options.playerId);
	    }
	    else {
	      if (options.normal) {
	        type = 'normal';
	      }
	      else if (options.advantage) {
	        type = 'advantage';
	      }
	      else if (options.disadvantage) {
	        type = 'disadvantage';
	      }

	      if (!_.isUndefined(type)) {
	        this.setRollOption(type, options.selected.character);
	      }

	      if (options.revert) {
	        this.setAutoRevert(true, options.selected.character);
	      }
	      else if (options.persist) {
	        this.setAutoRevert(false, options.selected.character);
	      }
	    }
	  }

	  handleRollOptionChange(msg) {
	    const char = [];
	    char.push(msg.get('_characterid'));
	    const br = this.buildResources(_.uniq(_.union(char)));

	    if (!_.isEmpty(br)) {
	      this.setStatusMarkers(br[0].tokens,
	        msg.get('current') === rollOptions.advantage.shaped_d20,
	        msg.get('current') === rollOptions.disadvantage.shaped_d20);

	      switch (msg.get('current')) {
	        case rollOptions.normal.shaped_d20:
	          this.sendChatNotification(br[0], 'normal');
	          break;
	        case rollOptions.advantage.shaped_d20:
	          this.sendChatNotification(br[0], 'advantage');
	          break;
	        case rollOptions.disadvantage.shaped_d20:
	          this.sendChatNotification(br[0], 'disadvantage');
	          break;
	        default:
	          break;
	      }
	    }
	  }

	  handleTokenAdded(token) {
	    this.logger.debug('AT: Updating New Token');
	    if (this.shouldShowMarkers() && token.get('represents') !== '') {
	      const character = this.roll20.getObj('character', token.get('represents'));
	      const setting = this.roll20.getAttrByName(character.id, 'shaped_d20');

	      if (this.shouldIgnoreNpcs()) {
	        if (this.roll20.getAttrByName(character.id, 'is_npc') === '1') {
	          return;
	        }
	      }

	      token.set(`status_${this.disadvantageMarker()}`, setting === rollOptions.disadvantage.shaped_d20);
	      token.set(`status_${this.advantageMarker()}`, setting === rollOptions.advantage.shaped_d20);
	    }
	  }

	  buildResources(characterIds) {
	    let res = _.chain(characterIds)
	      .map(charId => this.roll20.getObj('character', charId))
	      .reject(_.isUndefined)
	      .map(char => ({
	        character: char,
	        tokens: this.roll20.filterObjs(obj => obj.get('_type') === 'graphic' && char.id === obj.get('represents')),
	      }))
	      .value();

	    if (this.shouldIgnoreNpcs()) {
	      res = _.chain(res)
	        .filter((c) => {
	          const isNpc = this.roll20.getAttrByName(c.character.id, 'is_npc');
	          return isNpc && parseInt(isNpc, 10) === 0;
	        })
	        .value();
	    }

	    return res;
	  }

	  setStatusMarkers(tokens, showAdvantage, showDisadvantage) {
	    if (this.shouldShowMarkers()) {
	      _.each(tokens, (token) => {
	        token.set(`status_${this.advantageMarker()}`, showAdvantage);
	        token.set(`status_${this.disadvantageMarker()}`, showDisadvantage);
	      });
	    }
	  }

	  setAutoRevert(value, selectedChars) {
	    const resources = this.buildResources(_.chain(selectedChars).map(c => c.get('_id')).value());
	    _.each(resources, (resource) => {
	      const charId = resource.character.get('_id');
	      this.roll20.setAttrByName(charId, 'auto_revert_advantage', value ? 1 : 0);
	    });
	  }

	  setRollOption(type, selectedChars) {
	    const resources = this.buildResources(_.chain(selectedChars).map(c => c.get('_id')).value());

	    _.each(resources, (resource) => {
	      const charId = resource.character.get('_id');

	      this.setStatusMarkers(resource.tokens, type === 'advantage', type === 'disadvantage');

	      if (this.roll20.getAttrByName(charId, 'shaped_d20') === rollOptions[type].shaped_d20) {
	        return;
	      }

	      this.roll20.setAttrWithWorker(charId, 'shaped_d20', rollOptions[type].shaped_d20);

	      this.sendChatNotification(resource, type);
	    });
	  }

	  sendChatNotification(resource, type) {
	    if (this.outputOption() !== 'silent') {
	      let msg = ` &{template:5e-shaped} {{character_name=${resource.character.get('name')}}} ` +
	        `@{${resource.character.get('name')}|show_character_name} {{title=${Utils.toTitleCase(type)}}} ` +
	        `{{text_top=${resource.character.get('name')} is rolling ${rollOptions[type].message}!}}`;
	      if (this.outputOption() === 'whisper') {
	        msg = `/w gm ${msg}`;
	      }
	      this.roll20.sendChat('Shaped AdvantageTracker', msg);
	    }
	  }

	  outputOption() {
	    return this.myState.config.advTrackerSettings.output;
	  }

	  shouldShowMarkers() {
	    return this.myState.config.advTrackerSettings.showMarkers;
	  }

	  shouldIgnoreNpcs() {
	    return this.myState.config.advTrackerSettings.ignoreNpcs;
	  }

	  advantageMarker() {
	    return this.myState.config.advTrackerSettings.advantageMarker;
	  }

	  disadvantageMarker() {
	    return this.myState.config.advTrackerSettings.disadvantageMarker;
	  }
	}

	module.exports = AdvantageTracker;


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const ShapedModule = __webpack_require__(12);
	const ShapedConfig = __webpack_require__(13);
	const Utils = __webpack_require__(6);

	function getStringRechargeTester(targetRechargeValue) {
	  return rechargeValue => ({ recharge: rechargeValue === targetRechargeValue });
	}

	function getDieRollRechargeTester(restType, roll20) {
	  if (restType !== 'turn') {
	    return rechargeValue => ({ recharge: rechargeValue === 'TURN' || rechargeValue.indexOf('RECHARGE_') === 0 });
	  }
	  return (rechargeValue) => {
	    if (rechargeValue === 'TURN') {
	      return { recharge: true };
	    }

	    const match = rechargeValue.match(/RECHARGE_(\d)(?:_\d)?/);
	    if (match) {
	      const result = roll20.randomInteger(6);
	      return {
	        recharge: result >= parseInt(match[1], 10),
	        dieRoll: result,
	      };
	    }
	    return { recharge: false };
	  };
	}

	class RestManager extends ShapedModule {

	  addCommands(commandProcessor) {
	    this.rests = [
	      {
	        name: 'turn',
	        operations: [
	          this.recoverUses.bind(this),
	          this.recoverLegendaryPoints.bind(this),
	        ],
	        getRechargeTester: restType => getDieRollRechargeTester(restType, this.roll20),
	        displayName: 'Turn Recharge',
	      },
	      {
	        name: 'short',
	        operations: [
	          this.recoverUses.bind(this),
	          this.recoverWarlockSpellSlots.bind(this),
	        ],
	        getRechargeTester: () => getStringRechargeTester('SHORT_OR_LONG_REST'),
	        displayName: 'Short Rest',
	      },
	      {
	        name: 'long',
	        operations: [
	          this.recoverUses.bind(this),
	          this.recoverHP.bind(this),
	          this.recoverHD.bind(this),
	          this.recoverSpellSlots.bind(this),
	          this.recoverSpellPoints.bind(this),
	          this.reduceExhaustion.bind(this),
	        ],
	        getRechargeTester: () => getStringRechargeTester('LONG_REST'),
	        displayName: 'Long Rest',
	      },
	    ];

	    this.displayTemplates = {
	      hp: values => (values.hp > 0 ? `{{heal=[[${values.hp}]]}}` : ''),
	      hd: values => values.hd.map(hd => `{{Hit Die Regained (${hd.die})=${hd.quant}}}`).join(''),
	      uses: values => `{{Uses Recharged=${values.uses.join(', ')}}}`,
	      usesNotRecharged: values => `{{Uses Not Recharged=${values.usesNotRecharged.join(', ')}}}`,
	      slots: values => (values.slots ? '{{Spell Slots Regained=&nbsp;}}' : ''),
	      exhaustion: values => `{{text_top=Removed 1 Level Of Exhaustion, now at level: [[${values.exhaustion}]]}}`,
	      warlockSlots: values => (values.warlockSlots ? '{{Warlock Spell Slots Regained=&nbsp;}}' : ''),
	      spellPoints: values => (values.spellPoints ? '{{Spell Points Regained=&nbsp;}}' : ''),
	      legendaries: values => (values.legendaries ? `{{Legendary points regained=${values.legendaries}}}` : ''),
	    };

	    return commandProcessor.addCommand(['rest', 'recharge'], this.handleRest.bind(this), false)
	      .option('type', (value) => {
	        const converted = value.toLowerCase();
	        return {
	          valid: _.chain(this.rests).pluck('name').contains(converted).value(),
	          converted,
	        };
	      }, true)
	      .option('character', ShapedConfig.getCharacterValidator(this.roll20), false)
	      .withSelection({
	        character: {
	          min: 0,
	          max: Infinity,
	        },
	      });
	  }

	  registerEventListeners(eventDispatcher) {
	    eventDispatcher.registerEventHandler('change:campaign:turnorder', (turnOrder) => {
	      if (!_.isEmpty(turnOrder) && turnOrder[0].id !== '-1' && this.myState.config.sheetEnhancements.turnRecharges) {
	        const graphic = this.roll20.getObj('graphic', turnOrder[0].id);
	        const char = this.roll20.getObj('character', graphic.get('represents'));
	        if (char) {
	          const results = this.doRest(char, 'turn');
	          if (this.buildRestMessageBody(results) !== '') {
	            this.roll20.sendChat(`character|${char.id}`, this.buildMessage(char, 'turn', results, true));
	          }
	        }
	      }
	    });
	  }

	  handleRest(options) {
	    let chars = options.selected.character;
	    if (!_.isUndefined(options.character)) {
	      chars = [options.character];
	    }
	    if (_.isEmpty(chars)) {
	      this.reportError('Invalid options/selection', 'You must select at least one character or include --character ' +
	        'when calling !shaped-rest', options.playerId);
	    }
	    chars.forEach((char) => {
	      const results = this.doRest(char, options.type);
	      const whisper = this.roll20.getAttrByName(char.id, 'output_option') === '/w GM';
	      this.roll20.sendChat(`character|${char.id}`, this.buildMessage(char, options.type, results, whisper));
	    });
	  }

	  doRest(char, type) {
	    const restIndex = this.rests.findIndex(rest => rest.name === type);
	    const restsToProcess = this.rests.slice(0, restIndex + 1);
	    return restsToProcess.reduce((results, rest) =>
	        rest.operations
	          .map(op => op(char, rest.name, type))
	          .reduce((restResults, opResult) =>
	            Utils.extendWithArrayValues(restResults, opResult), results),
	      {});
	  }


	  buildMessage(character, restType, results, whisper) {
	    const charName = character.get('name');
	    const charId = character.id;
	    const displayName = _.findWhere(this.rests, { name: restType }).displayName;

	    let msg = whisper ? `/w "${charName}" ` : '';

	    msg += `&{template:5e-shaped} {{title=${displayName}}} {{character_name=${charName}}}`;

	    if (this.roll20.getAttrByName(charId, 'show_character_name') === '@{show_character_name_yes}') {
	      msg += '{{show_character_name=1}}';
	    }

	    msg += this.buildRestMessageBody(results);

	    return msg;
	  }

	  buildRestMessageBody(results) {
	    return _.chain(this.displayTemplates)
	      .pick(_.keys(results))
	      .map(template => template(results))
	      .value()
	      .join('');
	  }

	  recoverUses(character, restType, originalRestType) {
	    const charId = character.id;
	    const rechargeTester = _.findWhere(this.rests, { name: restType }).getRechargeTester(originalRestType);

	    const result = {
	      uses: [],
	      usesNotRecharged: [],
	    };

	    _.chain(this.roll20.findObjs({ type: 'attribute', characterid: charId }))
	      .filter(attribute => attribute.get('name').match(/^repeating_(?!armor|equipment|lairaction|regionaleffect).*$/))
	      .groupBy(attribute => attribute.get('name').match(/^(repeating_[^_]+_[^_]+)_.*$/)[1])
	      .pick((attributeGroup, prefix) => attributeGroup.some(attr => attr.get('name') === `${prefix}_recharge`))
	      .each((attributeGroup) => {
	        const attributesByName = _.object(attributeGroup
	          .map(attr => [attr.get('name').match(/repeating_[^_]+_[^_]+_(.*)$/)[1], attr]));
	        const name = attributesByName.name.get('current');
	        const recharge = attributesByName.recharge.get('current');
	        const usesAttr = attributesByName.uses;
	        if (!usesAttr || !usesAttr.get('max')) {
	          this.logger.error(`Tried to recharge the uses for '${name}' for character with id ${charId}, ` +
	            'but there were no uses defined.');
	          return;
	        }

	        if (usesAttr.get('current') < usesAttr.get('max')) {
	          const rechargeTesterResult = rechargeTester(recharge);
	          const traitTextForResults = rechargeTesterResult.dieRoll ?
	            `${name} (Rolled a ${rechargeTesterResult.dieRoll})` : name;
	          if (rechargeTesterResult.recharge) {
	            usesAttr.setWithWorker({ current: usesAttr.get('max') });
	            result.uses.push(traitTextForResults);
	          }
	          else if (rechargeTesterResult.dieRoll) {
	            result.usesNotRecharged.push(traitTextForResults);
	          }
	        }
	      });
	    return result;
	  }

	  recoverLegendaryPoints(character) {
	    const legendaryAmountAttr = this.roll20.getAttrObjectByName(character.id, 'legendary_action_amount');
	    if (legendaryAmountAttr) {
	      const max = legendaryAmountAttr.get('max');
	      if (max) {
	        this.logger.debug('Restoring legendary points');
	        const current = legendaryAmountAttr.get('current') || 0;
	        legendaryAmountAttr.setWithWorker({ current: max });
	        return {
	          legendaries: max - current,
	        };
	      }
	    }
	    return null;
	  }

	  recoverHP(character) {
	    const charId = character.id;
	    const hpAttr = this.roll20.getAttrObjectByName(charId, 'HP');
	    const maxReduction = parseInt(this.roll20.getAttrByName(character.id, 'hp_max_reduced'), 10);
	    const regained = this.recoverAttribute(hpAttr, this.myState.config.variants.rests.longRestHPRecovery,
	      character, true, maxReduction);

	    return {
	      hp: regained,
	    };
	  }

	  recoverAttribute(attribute, multiplier, character, errorIfNoMax, maxReduction) {
	    if (multiplier === 0 || !attribute) {
	      return 0;
	    }

	    const fullMax = parseInt(attribute.get('max'), 10);
	    const reducedMax = maxReduction ? fullMax - maxReduction : fullMax;
	    if (!reducedMax) {
	      if (errorIfNoMax) {
	        this.logger.error(`Can't recharge ${attribute.get('name')} for character ${character.get('name')} ` +
	          'because max value is not set');
	      }
	      return null;
	    }

	    const current = parseInt(attribute.get('current') || 0, 10);
	    const regained = Math.min(reducedMax - current, Math.max(1, Math.floor(reducedMax * multiplier)));
	    attribute.setWithWorker({ current: current + regained });
	    return regained;
	  }

	  recoverHD(character) {
	    const charId = character.id;
	    this.logger.debug('Regaining Hit Dice');
	    const hitDieRegained = _.chain(this.roll20.findObjs({ type: 'attribute', characterid: charId }))
	      .filter(attribute => (attribute.get('name').match(/^hd_d\d{1,2}$/)))
	      .uniq()
	      .map((hdAttr) => {
	        const regained = this.recoverAttribute(hdAttr, this.myState.config.variants.rests.longRestHDRecovery,
	          character, false, 0);
	        if (regained) {
	          return {
	            die: hdAttr.get('name').replace(/hd_/, ''),
	            quant: regained,
	          };
	        }

	        return null;
	      })
	      .compact()
	      .value();

	    return {
	      hd: hitDieRegained,
	    };
	  }

	  recoverSpellSlots(character) {
	    const charId = character.id;
	    let slotsFound = false;

	    this.logger.debug('Regaining Spell Slots');
	    _.chain(this.roll20.findObjs({ type: 'attribute', characterid: charId }))
	      .filter(attribute => (attribute.get('name').match(/^spell_slots_l\d$/)))
	      .uniq()
	      .each((slotAttr) => {
	        const max = parseInt(slotAttr.get('max'), 10);
	        if (max > 0) {
	          this.roll20.setAttrWithWorker(charId, slotAttr.get('name'), max);
	          slotsFound = true;
	        }
	      });

	    return {
	      slots: slotsFound,
	    };
	  }

	  recoverSpellPoints(character) {
	    const charId = character.id;
	    this.logger.debug('Regaining Spell Points');
	    let spellPointsFound = false;
	    const spellPointsAttr = this.roll20.getAttrObjectByName(charId, 'spell_points');
	    const spellPointsMax = spellPointsAttr ? parseInt(spellPointsAttr.get('max'), 10) : 0;
	    if (spellPointsMax) {
	      spellPointsAttr.setWithWorker('current', spellPointsMax);
	      spellPointsFound = true;
	    }

	    return {
	      spellPoints: spellPointsFound,
	    };
	  }

	  recoverWarlockSpellSlots(character) {
	    const charId = character.id;
	    this.logger.debug('Regaining Warlock Spell slots');
	    let warlockSlotsFound = false;
	    const warlockSlotsAttr = this.roll20.getAttrObjectByName(charId, 'warlock_spell_slots');
	    const slotsMax = warlockSlotsAttr ? parseInt(warlockSlotsAttr.get('max'), 10) : 0;
	    if (slotsMax) {
	      warlockSlotsAttr.setWithWorker('current', slotsMax);
	      warlockSlotsFound = true;
	    }
	    return {
	      warlockSlots: warlockSlotsFound,
	    };
	  }

	  reduceExhaustion(character) {
	    const charId = character.id;
	    this.logger.debug('Reducing Exhaustion');

	    const currentLevel = parseInt(this.roll20.getAttrByName(charId, 'exhaustion_level'), 10);

	    if (currentLevel > 0) {
	      this.roll20.setAttrWithWorker(charId, 'exhaustion_level', currentLevel - 1);
	      return {
	        exhaustion: currentLevel - 1,
	      };
	    }

	    return null;
	  }

	}

	module.exports = RestManager;


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const ShapedModule = __webpack_require__(12);
	const _ = __webpack_require__(2);

	class UsesManager extends ShapedModule {

	  registerChatListeners(chatWatcher) {
	    chatWatcher.registerChatListener(['character', 'uses', 'repeatingItem'], this.handleUses.bind(this));
	    chatWatcher.registerChatListener(['character', 'legendary'], this.handleLegendary.bind(this));
	  }

	  /**
	   * Handles the click event of a trait when 'autoTraits' is true
	   * Consumes one use of the clicked trait
	   * @param {object} options - The message options
	   */
	  handleUses(options) {
	    if (!this.myState.config.sheetEnhancements.autoTraits) {
	      return;
	    }

	    let perUse = parseInt(options.perUse || 1, 10);
	    if (_.isNaN(perUse)) {
	      this.reportError(`Character ${options.characterName} has an invalid 'Per Use" value [${options.perUse}] for ` +
	        `${options.title} so uses could not be decremented.`, options.playerId);
	      return;
	    }

	    perUse = perUse || 1;

	    const usesAttr = this.roll20.getAttrObjectByName(options.character.id, `${options.repeatingItem}_uses`);


	    if (usesAttr && usesAttr.get('max')) {
	      const currentVal = parseInt(usesAttr.get('current'), 10);
	      if (currentVal - perUse >= 0) {
	        usesAttr.setWithWorker({ current: currentVal - perUse });
	      }
	      else {
	        this.reportResult('Uses Police', `${options.characterName} can't use ${options.title} because ` +
	          'they don\'t have sufficient uses left.', options);
	      }
	    }
	  }

	  handleLegendary(options) {
	    if (!this.myState.config.sheetEnhancements.autoTraits) {
	      return;
	    }


	    let cost = 1;
	    switch (options.cost) {
	      case 'COSTS_2_ACTIONS':
	        cost = 2;
	        break;
	      case 'COSTS_3_ACTIONS':
	        cost = 3;
	        break;
	      default:
	      // Do nothing
	    }

	    const legendaryAmountAttr = this.roll20.getAttrObjectByName(options.character.id, 'legendary_action_amount');
	    if (!legendaryAmountAttr) {
	      this.logger.error('No legendary action amount defined for character $$$ so can\'t decrement it',
	        options.character.id);
	      return;
	    }

	    const current = legendaryAmountAttr.get('current');
	    if (cost > current) {
	      this.reportResult('Uses Police', `${options.characterName} can't use ${options.title} because ` +
	        'they don\'t have sufficient legendary points left.', options);
	      return;
	    }

	    legendaryAmountAttr.setWithWorker({ current: current - 1 });
	  }
	}

	module.exports = UsesManager;


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const ShapedModule = __webpack_require__(12);
	const ShapedConfig = __webpack_require__(13);

	class AmmoManager extends ShapedModule {

	  registerEventListeners(eventDispatcher) {
	    eventDispatcher.registerEventHandler('change:campaign:initiativepage', (initPage) => {
	      this.logger.debug('Initiative page changed to: $$$', initPage);
	      if (initPage) {
	        this.myState.ammoTracking = {};
	      }
	      else {
	        this.reportTotalAmmoUse();
	        this.myState.ammoTracking = {};
	      }
	    });
	  }

	  addCommands(commandProc) {
	    commandProc
	      .addCommand('recover-ammo', this.recoverAmmo.bind(this), true)
	      .option('ammoAttr', ShapedConfig.getObjectValidator('attribute', this.roll20), true)
	      .option('qty', ShapedConfig.integerValidator, true);
	  }

	  registerChatListeners(chatWatcher) {
	    chatWatcher.registerChatListener(['ammoName', 'character'], this.consumeAmmo.bind(this));
	  }

	  consumeAmmo(options) {
	    if (!this.roll20.checkCharacterFlag(options.character.id, 'ammo_auto_use')) {
	      return;
	    }

	    const ammoAttr = _.chain(this.roll20.findObjs({ type: 'attribute', characterid: options.character.id }))
	      .filter(attribute => attribute.get('name').indexOf('repeating_ammo') === 0)
	      .groupBy(attribute => attribute.get('name').replace(/(repeating_ammo_[^_]+).*/, '$1'))
	      .find(attributeList =>
	        _.find(attributeList, attribute =>
	        attribute.get('name').match(/.*name$/) && attribute.get('current') === options.ammoName)
	      )
	      .find(attribute => attribute.get('name').match(/.*qty$/))
	      .value();

	    if (!ammoAttr) {
	      this.logger.error('No ammo attribute found corresponding to name $$$', options.ammoName);
	      return;
	    }

	    if (options.ammo) {
	      const ammoRemaining = parseInt(options.ammo, 10);
	      if (ammoRemaining >= 0) {
	        const current = parseInt(ammoAttr.get('current'), 10);
	        ammoAttr.setWithWorker('current', ammoRemaining);
	        const ammoTracking = this.getAmmoTracking();
	        if (ammoTracking) {
	          ammoTracking[ammoAttr.id] = (ammoTracking[ammoAttr.id] || 0) + current - ammoRemaining;
	        }
	      }
	      else {
	        this.reportResult('Ammo Police', `${options.characterName} can't use ${options.title} because ` +
	          `they don't have enough ${options.ammoName} left`, options);
	      }
	    }
	  }

	  getAmmoTracking() {
	    if (this.roll20.getCampaign().get('initiativepage')) {
	      this.myState.ammoTracking = this.myState.ammoTracking || {};
	      return this.myState.ammoTracking;
	    }
	    return null;
	  }

	  reportTotalAmmoUse() {
	    if (!this.myState.config.sheetEnhancements.ammoRecovery) {
	      return;
	    }
	    const recoveryStrings = _.chain(this.myState.ammoTracking)
	      .map((used, id) => {
	        const ammoAttr = this.roll20.getObj('attribute', id);
	        if (!ammoAttr) {
	          return null;
	        }
	        const ammoName = this.roll20.getAttrByName(ammoAttr.get('characterid'),
	          ammoAttr.get('name').replace(/_qty/, '_name'));
	        const char = this.roll20.getObj('character', ammoAttr.get('characterid'));
	        return `${char.get('name')} used ${used} ${ammoName}.&nbsp;<a href="!shaped-recover-ammo ` +
	          `--ammoAttr ${id} --qty ?{Quantity to recover|${Math.floor(used / 2)}}">Recover</a>`;
	      })
	      .compact()
	      .value();

	    if (!_.isEmpty(recoveryStrings)) {
	      const msg = `<ul><li>${recoveryStrings.join('</li><li>')}</li></ul>`;
	      this.reportPlayer('Ammo Recovery', msg);
	    }
	  }

	  recoverAmmo(options) {
	    const ammoName = this.roll20.getAttrByName(options.ammoAttr.get('characterid'),
	      options.ammoAttr.get('name').replace(/_qty/, '_name'));
	    options.ammoAttr.setWithWorker({ current: options.ammoAttr.get('current') + options.qty });
	    this.reportCharacter('Ammo Recovery', `You recover ${options.qty} ${ammoName}`,
	      options.ammoAttr.get('characterid'));
	  }

	}

	module.exports = AmmoManager;


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/* globals unescape */
	'use strict';
	const ShapedModule = __webpack_require__(12);
	const _ = __webpack_require__(2);
	const Logger = __webpack_require__(4);

	class Importer extends ShapedModule {

	  fixRoll20Brokenness(character) {
	    _.chain(this.roll20.findObjs({ characterid: character.id, type: 'attribute' }))
	      .groupBy(attr => attr.get('name'))
	      .pick(attrGroup => attrGroup.length > 1)
	      .each((attrGroup) => {
	        this.logger.warn('Found duplicate attributes from character $$$: $$$', character.get('name'),
	          attrGroup.map(attr => [attr.get('name'), attr.get('current'), attr.get('max'), attr.id]));
	        attrGroup.reduce((previous, attr) => {
	          if (attr.get('current')) {
	            previous.setWithWorker({ current: attr.get('current') });
	          }
	          else if (attr.get('max')) {
	            previous.setWithWorker({ max: attr.get('max') });
	          }
	          attr.remove();
	          return previous;
	        });
	      });
	    return character;
	  }

	  runImportStage(character, attributes, name, msgStreamer) {
	    const initialPromise = Promise.resolve(character);
	    if (!_.isEmpty(attributes)) {
	      this.logger.debug('Importing attributes for stage $$$: $$$', name, attributes);
	      msgStreamer.stream(name);
	      this.logger.debug(`${name} start`);
	      if (this.logger.getLogLevel() >= Logger.levels.DEBUG) {
	        this.logger.debug('Character attributes at start: $$$',
	          this.roll20.findObjs({ type: 'attribute', characterid: character.id }));
	      }

	      const newPromise = new Promise(resolve => this.roll20.onSheetWorkerCompleted(() => {
	        this.logger.debug(`Sheet worker completed for ${name}`);
	        resolve(character);
	      }));
	      _.each(attributes, (attrVal, attrName) => {
	        this.roll20.setAttrWithWorker(character.id, attrName, attrVal);
	      });

	      return newPromise.then(newChar => this.fixRoll20Brokenness(newChar));
	    }
	    return initialPromise;
	  }
	}

	module.exports = Importer;


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const ShapedModule = __webpack_require__(12);

	module.exports = class DeathSaveManager extends ShapedModule {

	  registerChatListeners(chatWatcher) {
	    chatWatcher.registerChatListener(['deathSavingThrow', 'character', 'roll1'], this.handleDeathSave.bind(this));
	  }

	  handleDeathSave(options) {
	    if (this.roll20.getAttrByName(options.character.id, 'shaped_d20') === '1d20') {
	      return; // Sheet is set to Roll 2 - we don't know if the character has (dis)advantage so automation isn't possible
	    }
	    const currentHP = this.roll20.getAttrByName(options.character.id, 'HP');
	    if (currentHP !== 0 && currentHP !== '0') {
	      this.reportResult('Death Saves', `${options.character.get('name')} has more than 0 HP and shouldn't be rolling ` +
	        'death saves', options);
	      return;
	    }

	    const successes = this.roll20.getOrCreateAttr(options.character.id, 'death_saving_throw_successes');
	    let successCount = successes.get('current');
	    const failures = this.roll20.getOrCreateAttr(options.character.id, 'death_saving_throw_failures');
	    let failureCount = failures.get('current');
	    const result = parseInt(options.roll1, 10);

	    switch (result) {
	      case 1:
	        failureCount += 2;
	        break;
	      case 20:
	        failureCount = 0;
	        successCount = 0;

	        this.roll20.setAttrWithWorker(options.character.id, 'HP', 1);
	        this.reportResult('Death Saves', `${options.character.get('name')} has recovered to 1 HP`, options);
	        break;
	      default:
	        if (result >= 10) {
	          successCount++;
	        }
	        else {
	          failureCount++;
	        }
	    }

	    if (failureCount >= 3) {
	      failureCount = 3;
	      this.reportResult('Death Saves', `${options.character.get('name')} has failed 3` +
	        ' death saves and is now dead', options);
	    }
	    else if (successCount >= 3) {
	      this.reportResult('Death Saves', `${options.character.get('name')} has succeeded 3` +
	        ' death saves and is now stable', options);
	      failureCount = 0;
	      successCount = 0;
	    }
	    successes.setWithWorker({ current: successCount });
	    failures.setWithWorker({ current: failureCount });
	  }
	};



/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const ShapedModule = __webpack_require__(12);

	module.exports = class HDManager extends ShapedModule {

	  registerChatListeners(chatWatcher) {
	    chatWatcher.registerChatListener(['character', 'title'], this.handleHD.bind(this));
	  }

	  handleHD(options) {
	    const match = options.title.match(/(\d+)d(\d+) HIT_DICE/);
	    if (match && this.myState.config.sheetEnhancements.autoHD) {
	      const hdCount = parseInt(match[1], 10);
	      const hdSize = match[2];
	      const hdAttr = this.roll20.getAttrObjectByName(options.character.id, `hd_d${hdSize}`);
	      const hpAttr = this.roll20.getOrCreateAttr(options.character.id, 'HP');
	      const maxReduction = parseInt(this.roll20.getAttrByName(options.character.id, 'hp_max_reduced'), 10);
	      const regained = Math.max(0, parseInt(options.roll1, 10));
	      const fullMax = hpAttr.get('max') || Infinity;
	      const reducedMax = maxReduction ? fullMax - maxReduction : fullMax;
	      const newHp = Math.min(parseInt(hpAttr.get('current') || 0, 10) + regained, reducedMax);

	      if (hdAttr) {
	        if (hdCount <= hdAttr.get('current')) {
	          hdAttr.setWithWorker('current', hdAttr.get('current') - hdCount);
	          hpAttr.setWithWorker('current', newHp);
	          if (!hpAttr.get('max')) {
	            hpAttr.setWithWorker('max', newHp);
	          }
	        }
	        else {
	          this.reportResult('HD Police',
	            `${options.characterName} can't use ${hdCount}d${hdSize} hit dice because they ` +
	            `only have ${hdAttr.get('current')} left`, options);
	        }
	      }
	    }
	  }
	};



/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const ShapedModule = __webpack_require__(12);
	const _ = __webpack_require__(2);

	module.exports = class FXManager extends ShapedModule {

	  registerChatListeners(chatWatcher) {
	    chatWatcher.registerChatListener(['fx', 'character'], this.handleFX.bind(this));
	  }

	  handleFX(options) {
	    const parts = options.fx.split(' ');
	    if (parts.length < 2 || _.some(parts.slice(0, 2), _.isEmpty)) {
	      this.logger.warn('FX roll template variable is not formated correctly: [$$$]', options.fx);
	      return;
	    }


	    const fxType = parts[0];
	    const pointsOfOrigin = parts[1];
	    let targetTokenId;
	    const sourceCoords = {};
	    const targetCoords = {};
	    let fxCoords = [];
	    let pageId;

	    // noinspection FallThroughInSwitchStatementJS
	    switch (pointsOfOrigin) {
	      case 'sourceToTarget':
	      case 'source':
	        targetTokenId = parts[2];
	        fxCoords.push(sourceCoords, targetCoords);
	        break;
	      case 'targetToSource':
	      case 'target':
	        targetTokenId = parts[2];
	        fxCoords.push(targetCoords, sourceCoords);
	        break;
	      default:
	        throw new Error(`Unrecognised pointsOfOrigin type in fx spec: ${pointsOfOrigin}`);
	    }

	    if (targetTokenId) {
	      const targetToken = this.roll20.getObj('graphic', targetTokenId);
	      pageId = targetToken.get('_pageid');
	      targetCoords.x = targetToken.get('left');
	      targetCoords.y = targetToken.get('top');
	    }
	    else {
	      pageId = this.roll20.getCurrentPage(options.playerId).id;
	    }


	    const casterTokens = this.roll20.findObjs({ type: 'graphic', pageid: pageId, represents: options.character.id });

	    if (casterTokens.length) {
	      // If there are multiple tokens for the character on this page, then try and find one of them that is selected
	      // This doesn't work without a selected token, and the only way we can get this is to use @{selected} which is a
	      // pain for people who want to launch without a token selected if(casterTokens.length > 1) { const selected =
	      // _.findWhere(casterTokens, {id: sourceTokenId}); if (selected) { casterTokens = [selected]; } }
	      sourceCoords.x = casterTokens[0].get('left');
	      sourceCoords.y = casterTokens[0].get('top');
	    }


	    if (!fxCoords[0]) {
	      this.logger.warn('Couldn\'t find required point for fx for character $$$, casterTokens: $$$, fxSpec: $$$ ',
	        options.character.id, casterTokens, options.fx);
	      return;
	    }
	    else if (!fxCoords[1]) {
	      fxCoords = fxCoords.slice(0, 1);
	    }

	    this.roll20.spawnFx(fxCoords, fxType, pageId);
	  }
	};



/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const ShapedModule = __webpack_require__(12);
	const _ = __webpack_require__(2);
	const ShapedConfig = __webpack_require__(13);
	const EntityCriteriaCollector = __webpack_require__(25);
	const EntityLookup = __webpack_require__(5);
	const Utils = __webpack_require__(6);

	function spellKey(name) {
	  return name.toLowerCase().replace(/\s+/g, '');
	}

	module.exports = class SpellManager extends ShapedModule {

	  constructor(dependencies) {
	    super(dependencies);
	    this.entityLookup = dependencies.entityLookup;
	    this.entityLister = dependencies.entityLister;
	    this.importer = dependencies.importer;
	    this.srdConverter = dependencies.srdConverter;
	    const spellListGrouper = SpellManager.getSpellListGrouper();
	    const spellCriteria = new EntityCriteriaCollector([
	      { name: 'lists', buildListEntry: spellListGrouper.buildListEntry },
	      { name: 'school' },
	      { name: 'level', validator: ShapedConfig.integerValidator },
	    ], this.logger, this.entityLookup, 'spells');

	    this.entityLookup.configureEntity('spells',
	      [SpellManager.getSpellListEntityUpdater(), spellCriteria.getEntityProcessor()],
	      EntityLookup.getVersionChecker('2.0.0', 'spells'));
	    this.entityLookup.configureEntity('classes',
	      [SpellManager.getSpellDenormaliser(), spellListGrouper.entityProcessor],
	      EntityLookup.getVersionChecker('2.0.0', 'classes'));
	    this.entityLister.addEntity('spells', 'spell', spellCriteria, this, false);
	  }

	  addCommands(commandProc) {
	    commandProc
	      .addCommand('remove-spell', this.removeSpell.bind(this), false)
	      .option('all', ShapedConfig.booleanValidator, false)
	      .option('character', ShapedConfig.getCharacterValidator(this.roll20), false)
	      .option('relist', ShapedConfig.jsonValidator, false)
	      .optionLookup('spells', this.spellLookup.bind(this), false)
	      .withSelection({
	        character: {
	          min: 0,
	          max: 1,
	        },
	      })
	      // !shaped-import-spell, !shaped-spell
	      .addCommand(['import-spell', 'spell'], this.importSpellsFromJson.bind(this), false)
	      .optionLookup('spells', _.partial(this.entityLookup.findEntity.bind(this.entityLookup), 'spells', _, false), true)
	      .option('overwrite', ShapedConfig.booleanValidator)
	      .option('character', ShapedConfig.getCharacterValidator(this.roll20))
	      .option('relist', ShapedConfig.jsonValidator)
	      .withSelection({
	        character: {
	          min: 0,
	          max: 1,
	        },
	      })
	      .addCommand('expand-spells', this.expandSpells.bind(this), false)
	      .withSelection({
	        character: {
	          min: 0,
	          max: Infinity,
	        },
	      })
	      .option('all', ShapedConfig.booleanValidator);
	  }

	  registerChatListeners(chatWatcher) {
	    chatWatcher.registerChatListener(['character', 'spell', 'castAsLevel'], this.handleSpellCast.bind(this));
	  }

	  handleSpellCast(options) {
	    const autoSlots = parseInt(this.roll20.getAttrByName(options.character.id,
	      'automatically_expend_spell_resources'), 10);
	    if (options.ritual || !autoSlots || options.spellLevel === 'CANTRIP' || options.spellRepeat) {
	      return;
	    }

	    const castingLevel = parseInt(options.castAsLevel, 10);
	    if (_.isNaN(castingLevel)) {
	      this.logger.error('Bad casting level [$$$]', options.castAsLevel);
	      this.reportError('An error occured with spell slots, see the log for more details', options.playerId);
	      return;
	    }

	    const spellPointsAttr = this.roll20.getAttrObjectByName(options.character.id, 'spell_points');
	    if (spellPointsAttr && spellPointsAttr.get('current')) {
	      const spellPointsLimit = parseInt(this.roll20.getAttrByName(options.character.id, 'spell_points_limit'), 10);
	      const cost = castingLevel + Math.floor(castingLevel / 3) + 1;
	      if (castingLevel <= spellPointsLimit && cost <= spellPointsAttr.get('current')) {
	        spellPointsAttr.setWithWorker({ current: spellPointsAttr.get('current') - cost });
	        return;
	      }
	    }


	    const spellSlotAttr = this.roll20.getAttrObjectByName(options.character.id, `spell_slots_l${options.castAsLevel}`);
	    const warlockSlotsAttr = this.roll20.getAttrObjectByName(options.character.id, 'warlock_spell_slots');
	    if (warlockSlotsAttr && warlockSlotsAttr.get('current')) {
	      const warlockSlotsLevelString = this.roll20.getAttrByName(options.character.id, 'warlock_spells_max_level');
	      this.logger.debug('Warlock slots level: $$$', warlockSlotsLevelString);
	      const warlockSlotsLevel = warlockSlotsLevelString ? parseInt(warlockSlotsLevelString.substring(0, 1), 10) : 0;
	      this.logger.debug('Parsed warlock slots level: $$$', warlockSlotsLevel);
	      if (warlockSlotsLevel === castingLevel) {
	        this.logger.debug('Decrementing warlock spell slots attribute $$$', warlockSlotsAttr);
	        warlockSlotsAttr.setWithWorker({ current: warlockSlotsAttr.get('current') - 1 });
	        return;
	      }
	    }

	    if (spellSlotAttr && spellSlotAttr.get('current')) {
	      this.logger.debug('Decrementing normal spell slots attribute $$$', spellSlotAttr);
	      spellSlotAttr.setWithWorker({ current: spellSlotAttr.get('current') - 1 });
	    }
	    else {
	      this.reportResult('Slots Police', `${options.characterName} cannot cast ${options.title} at level ` +
	        `${options.castAsLevel} because they don't have enough spell slots/points.`, options);
	    }
	  }

	  spellLookup(name, options) {
	    const spellCache = this.getSpellCache(options);
	    return spellCache[spellKey(name)];
	  }


	  getSpellCache(options) {
	    const character = options.character || options.selected.character;
	    if (!character) {
	      return {};
	    }
	    const charId = character.id;
	    const spellCache = options.getCache('characterSpells');
	    if (!spellCache.initialised) {
	      _.chain(this.roll20.findObjs({ type: 'attribute', characterid: charId }))
	        .filter(attr => attr.get('name').match(/^repeating_spell\d.*/))
	        .groupBy(attr => attr.get('name').match(/^repeating_spell\d_([^_]+)/)[1])
	        .each((attrs, id) => {
	          const name = attrs.find(attr => attr.get('name').match(/^.*_name$/)).get('current');
	          if (name) {
	            spellCache[spellKey(name)] = { attrs, id, name };
	          }
	        });
	      Object.defineProperty(spellCache, 'initialised', { value: true });
	    }
	    return spellCache;
	  }

	  importSpellsFromJson(options) {
	    if (!ShapedConfig.checkCharacterSelectedOrSupplied(options, this.reporter)) {
	      return null;
	    }

	    const spellCount = this.roll20
	      .findObjs({ type: 'attribute', characterid: options.selected.character.id })
	      .filter(attr => attr.get('name').match(/^repeating_spell\d.*_name$/))
	      .length;

	    if (spellCount > 35) {
	      this.reportPlayer('Spell Count Warning', `Character ${options.selected.character.get('name')} ` +
	        `already has ${spellCount} spells. Adding more spells will seriously degrade the performance of the sheet ` +
	        'and your campaign more generally. ');
	    }

	    return this.importData(options.selected.character, options.spells, options.overwrite)
	      .then(() => {
	        const imported = options.spells.filter(spell => !spell.noImport);
	        const skipped = options.spells.filter(spell => spell.noImport);
	        let message = '';
	        if (!_.isEmpty(imported)) {
	          message += 'Added the following spells:  <ul><li>' +
	            `${_.map(imported, spell => spell.name).join('</li><li>')}</li></ul>`;
	        }
	        if (!_.isEmpty(skipped)) {
	          message += 'Skipped the following spells which were already present (use --overwrite to replace): <ul><li>' +
	            `${_.map(skipped, spell => spell.name).join('</li><li>')}</li></ul>`;
	        }
	        this.reportPlayer('Import Complete', message, options.playerId);
	        if (options.relist) {
	          _.extend(options, options.relist);
	          options.clearCache('characterSpells');
	          this.entityLister.listEntity('spells', options);
	        }
	      });
	  }

	  importData(character, spells, overwrite, msg) {
	    this.logger.debug('Importing new character spells $$$', spells);
	    const pronounInfo = this.getPronounInfo(character);
	    const closeMessage = !msg;
	    msg = msg || this.reporter.getMessageStreamer(`${character.get('name')} Spell Import`);
	    const spellAttrs = this.getSpellAttributesForImport(character, pronounInfo, spells, overwrite);
	    const promise = _.isEmpty(spellAttrs) ? Promise.resolve(character) :
	      this.importer.runImportStage(character, spellAttrs, 'Importing spells', msg);

	    return promise.then((newChar) => {
	      if (closeMessage) {
	        msg.finish();
	      }
	      return newChar;
	    });
	  }

	  removeSpell(options) {
	    if (!options.all && _.isEmpty(options.spells)) {
	      this.reportError('You must supply either --all or a list of individual spells to !shaped-remove-spell');
	      return;
	    }
	    if (!ShapedConfig.checkCharacterSelectedOrSupplied(options, this.reporter)) {
	      return;
	    }

	    const spellCache = this.getSpellCache(options);
	    if (options.all) {
	      options.spells = _.values(spellCache);
	    }

	    const removed = options.spells.map((spellDetails) => {
	      _.invoke(spellDetails.attrs, 'removeWithWorker');
	      return spellDetails.name;
	    });

	    if (!_.isEmpty(removed)) {
	      this.logger.debug('Spells removed: $$$', removed);
	      this.reportPlayer('Spells Removed', 'Removed the following spells from character ' +
	        `${options.selected.character.get('name')}: <ul><li>${removed.join('</li><li>')}</li></ul>`, options.playerId);
	    }
	    else {
	      this.reportPlayer('No Spells Removed',
	        `${options.selected.character.get('name')} has no spells to remove!`, options.playerId);
	    }

	    if (options.relist) {
	      _.extend(options, options.relist);
	      options.clearCache('characterSpells');
	      this.entityLister.listEntity('spells', options);
	    }
	  }

	  getSpellAttributesForCharacter(char) {
	    return _.chain(this.roll20.findObjs({ type: 'attribute', characterid: char.id }))
	      .filter(attribute => attribute.get('name').match(/^repeating_spell[\d]_[^_]+_/))
	      .groupBy(attribute => attribute.get('name').match(/repeating_spell[\d]_([^_]+)_/)[1])
	      .reduce((memo, spellAttrGroup, rowId) => {
	        const nameAttr = spellAttrGroup
	          .find(attribute => attribute.get('name').match(/^repeating_spell[\d]_[^_]+_name$/));
	        if (!nameAttr) {
	          return memo;
	        }

	        const name = nameAttr.get('current').replace(/\*/g, '').trim();
	        const level = nameAttr.get('name').match(/^repeating_spell([\d])_[^_]+_name$/)[1];
	        const hasContent = _.some(spellAttrGroup,
	          attribute => attribute.get('name').match(/^repeating_spell[\d]_[^_]+_content/));
	        memo[name.toLowerCase()] = {
	          name,
	          attributes: spellAttrGroup,
	          hasContent,
	          rowId,
	          level,
	        };
	        return memo;
	      }, {})
	      .value();
	  }

	  getSpellAttributesForImport(char, pronounInfo, newSpells, overwrite) {
	    const spells = this.getSpellAttributesForCharacter(char);

	    const spellsToHydrate = _.chain(spells)
	      .pick(spell => !spell.hasContent)
	      .map((spell) => {
	        const bareName = spell.name.replace(/\([^)]+\)/g, '').trim();
	        const spellObject = this.entityLookup.findEntity('spells', bareName);
	        if (spellObject) {
	          spellObject.name = spell.name;
	          spellObject.rowId = spell.rowId;
	        }
	        return spellObject;
	      })
	      .compact()
	      .value();

	    this.logger.debug('Existing Spells $$$', spells);
	    const jsonSpellsToAdd = _.chain(newSpells)
	      .map((spell, index) => {
	        this.logger.debug('Checking for existing spell $$$', spell.name);
	        const existingSpell = spells[spell.name.toLowerCase()];
	        if (existingSpell) {
	          this.logger.debug('Existing spell $$$', existingSpell);
	          let newData = null;
	          if (overwrite && existingSpell.hasContent) {
	            spell.rowId = existingSpell.rowId;
	            _.invoke(existingSpell.attributes, 'remove');
	            newData = spell;
	          }
	          else if (!overwrite) {
	            newSpells[index].noImport = true;
	          }
	          return newData;
	        }

	        return spell;
	      })
	      .compact()
	      .value();

	    const finalSpells = spellsToHydrate.concat(jsonSpellsToAdd);

	    if (_.isEmpty(finalSpells)) {
	      return {};
	    }
	    return { import_data: JSON.stringify({ spell_data: this.srdConverter.convertSpells(finalSpells, pronounInfo) }) };
	  }

	  getPronounInfo(character) {
	    const gender = this.roll20.getAttrByName(character.id, 'gender');

	    const defaultIndex = Math.min(this.myState.config.defaultGenderIndex, this.myState.config.genderPronouns.length);
	    const defaultPronounInfo = this.myState.config.genderPronouns[defaultIndex];
	    const pronounInfo = _.clone(_.find(this.myState.config.genderPronouns,
	        pronounDetails => new RegExp(pronounDetails.matchPattern, 'i').test(gender)) || defaultPronounInfo);
	    _.defaults(pronounInfo, defaultPronounInfo);
	    return pronounInfo;
	  }

	  getButtoniser(options, relistOptions) {
	    const spellCache = this.getSpellCache(options);
	    const additionalOptions = `${relistOptions} ${this.getListCommandOptions(options)}`;
	    return (spell) => {
	      const alreadyAdded = !!spellCache[spellKey(spell.name)];
	      const command = alreadyAdded ? '!shaped-remove-spell' : '!shaped-import-spell';
	      const className = alreadyAdded ? 'remove' : '';
	      return `<a href="${command} ${additionalOptions} --${spell.name}" class="${className}">${spell.name}</a>`;
	    };
	  }

	  validateListCommandOptions(options) {
	    return ShapedConfig.checkCharacterSelectedOrSupplied(options, this.reporter);
	  }

	  addOptionsForListCommand(cmd) {
	    cmd
	      .option('character', ShapedConfig.getCharacterValidator(this.roll20), false)
	      .withSelection({
	        character: {
	          min: 0,
	          max: 1,
	        },
	      });
	  }

	  getListCommandOptions(options) {
	    return options.character ? `--character ${options.character.id}` : '';
	  }

	  expandSpells(options) {
	    if (options.all) {
	      options.selected.character = this.roll20.findObjs({ type: 'character' });
	    }

	    return options.selected.character.reduce((promise, character) =>
	        promise.then(() => this.importData(character, [])),
	      Promise.resolve())
	      .then(() => {
	        const msg = ' Spells expanded for characters: <ul><li>' +
	          `${options.selected.character.map(char => char.get('name')).join('</li><li>')}</li></ul>`;
	        this.reporter.reportPlayer('Spell Expansion Complete', msg, options.playerId);
	      });
	  }

	  static getSpellListEntityUpdater() {
	    return (spellEntityInfo) => {
	      const spell = spellEntityInfo.entity;
	      spellEntityInfo.lookup('classes').forEach((clazz) => {
	        const newLists = [];
	        if (clazz.spells && clazz.spells.find(classSpell => classSpell.name === spell.name)) {
	          newLists.push(clazz.name);
	        }
	        if (clazz.archetypes) {
	          newLists.push.apply(newLists,
	            clazz.archetypes.filter(archetype => archetype.spells && _.contains(archetype.spells, spell.name))
	              .map(archetype => archetype.name));
	        }

	        spell.lists = _.union(spell.lists, newLists);
	      });
	      return spellEntityInfo;
	    };
	  }

	  static getSpellDenormaliser() {
	    return (classEntityInfo) => {
	      const classObj = classEntityInfo.entity;
	      if (classObj.spells) {
	        addSpellListToSpells(classObj.spells, classObj.name, classEntityInfo.lookup);
	      }
	      if (classObj.archetypes) {
	        _.each(classObj.archetypes, (archetype) => {
	          if (archetype.spells) {
	            addSpellListToSpells(archetype.spells, archetype.name, classEntityInfo.lookup);
	          }
	        });
	      }
	      return classEntityInfo;
	    };
	  }

	  static getSpellListGrouper() {
	    const classForLists = {};
	    return {
	      get entityProcessor() {
	        return (entityInfo) => {
	          const clazz = entityInfo.entity;
	          if (clazz.archetypes) {
	            clazz.archetypes.forEach(archetype => (classForLists[archetype.name] = clazz.name));
	            classForLists[clazz.name] = clazz.name;
	          }
	          return entityInfo;
	        };
	      },
	      buildListEntry(suppliedCriteria, entitySpecificOptions) {
	        const critRows = _.chain(this.values)
	          .reduce((rows, list) => {
	            const parentClass = classForLists[list];
	            if (parentClass) {
	              (rows[parentClass] = rows[parentClass] || { values: [] }).values.push(list);
	              if (_.contains(suppliedCriteria.lists, list)) {
	                rows[parentClass].hasSelectedValues = true;
	              }
	              if (parentClass === list) {
	                rows.top.values.push(list);
	              }
	            }
	            else {
	              rows.top.values.push(list);
	            }
	            return rows;
	          }, { top: { values: [] } })
	          .omit((row, parentClass) => !(parentClass === 'top' || row.hasSelectedValues))
	          .value();

	        return _.map(critRows, (row, parentClass) => {
	          const mainClassList = parentClass === 'top';
	          const name = mainClassList ? 'Classes' : `${Utils.toTitleCase(parentClass)} Archetypes`;


	          const valueList = row.values
	            .sort((val1, val2) => {
	              if (val1 === parentClass) {
	                return -1;
	              }
	              if (val2 === parentClass) {
	                return 1;
	              }
	              return val1.localeCompare(val2);
	            })
	            .map((value) => {
	              const selected = _.contains(suppliedCriteria.lists, value) ||
	                (mainClassList && critRows[value] && critRows[value].hasSelectedValues);
	              const className = selected ? 'selected' : '';

	              let newOpts = '';
	              if (parentClass === 'top' && critRows[value] && selected) {
	                const newCriteria = Utils.deepClone(suppliedCriteria);
	                newCriteria.lists = newCriteria.lists.filter(list => !row.values.includes(list));
	                newOpts = makeOptionsString(newCriteria);
	              }
	              else {
	                newOpts = buildNewOptionsString(suppliedCriteria, 'lists', value);
	              }
	              const displayName = value === parentClass ? 'Class' : value;
	              return `<a href="!shaped-list-spells ${newOpts} ${entitySpecificOptions}" class="${className}">` +
	                `${displayName}</a>`;
	            }).join(', ');
	          return `<div class="criterion"><span class="criterion-name">${name}. </span>${valueList}</div>`;
	        }).join('');
	      },
	    };
	  }
	};

	function buildNewOptionsString(suppliedCriteria, criterionToModify, valueToToggle) {
	  const newCriteria = Utils.deepClone(suppliedCriteria);
	  if (!newCriteria[criterionToModify]) {
	    newCriteria[criterionToModify] = [valueToToggle];
	  }
	  else {
	    const valueList = newCriteria[criterionToModify];
	    newCriteria[criterionToModify] = _.contains(valueList, valueToToggle) ? _.without(valueList, valueToToggle) :
	      valueList.concat(valueToToggle);
	  }
	  return makeOptionsString(newCriteria);
	}

	function makeOptionsString(criteria) {
	  return _.reduce(criteria, (optionString, valueList, criterion) =>
	    (_.isEmpty(valueList) ? optionString : `${optionString} --${criterion} ${valueList.join(',')}`), '');
	}

	function addSpellListToSpells(spells, spellListName, lookup) {
	  spells.forEach((spell) => {
	    const spellObj = lookup('spells', spell);
	    if (spellObj) {
	      spellObj.lists = _.union(spellObj.lists, [spellListName]);
	    }
	  });
	}


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const ShapedConfig = __webpack_require__(13);
	const Utils = __webpack_require__(6);

	function makeKey(criterionName, value) {
	  return `${criterionName}|${value}`;
	}


	module.exports = class EntityCriteriaCollector {

	  constructor(criteriaList, logger, entityLookup, entityType) {
	    this._criteria = criteriaList;
	    this._entityLookup = entityLookup;
	    this._criteriaFilters = {};
	    this._dirty = true;
	    this._entityType = entityType;
	    this.logger = logger;
	    criteriaList.forEach((criterion) => {
	      criterion.values = [];
	    });
	  }

	  getEntityProcessor() {
	    return (entityInfo) => {
	      this._dirty = true;
	      return entityInfo;
	    };
	  }

	  getCriteriaToDisplay(currentCriteria) {
	    this.rebuildCriteria();
	    let filteredCriteria = this.criteria;
	    if (!_.isEmpty(currentCriteria)) {
	      filteredCriteria = this._criteria
	        .map((criterionToFilter) => {
	          let baseKeySets = this._criteria
	            .filter(criterion => currentCriteria[criterion.name] && criterion !== criterionToFilter)
	            .map(criterion =>
	              criterion.values
	                .filter(value => _.contains(currentCriteria[criterion.name], value))
	                .map(value => makeKey(criterion.name, value)))
	            .concat([[undefined]]);

	          baseKeySets = Utils.cartesianProductOf.apply(this, baseKeySets).map(keySet => _.compact(keySet));

	          const filteredValues = criterionToFilter.values.filter((value) => {
	            const testKey = makeKey(criterionToFilter.name, value);
	            return baseKeySets.some(keySet => this._criteriaFilters[keySet.concat(testKey).sort().join(';')]);
	          });
	          const criterion = {
	            name: criterionToFilter.name,
	            values: filteredValues,
	          };
	          Object.defineProperties(criterion, {
	            buildListEntry: { enumerable: false, value: criterionToFilter.buildListEntry },
	            compare: { enumerable: false, value: criterionToFilter.compare },
	          });
	          return criterion;
	        })
	        .filter(criterion => !_.isEmpty(criterion.values));
	    }

	    filteredCriteria
	      .forEach((criterion) => {
	        criterion.values.sort(criterion.compare);
	      });

	    return filteredCriteria;
	  }

	  get criteria() {
	    this.rebuildCriteria();
	    return this._criteria;
	  }

	  get criteriaOptionsValidator() {
	    this.rebuildCriteria();
	    return _.object(this._criteria.map(criterion => [criterion.name, getValidator(criterion.validator)]));
	  }

	  rebuildCriteria() {
	    if (!this._dirty) {
	      return;
	    }

	    this.logger.debug('Rebuilding entity criteria for entity $$$', this._entityType);
	    this._entityLookup.getAll(this._entityType).forEach((entity) => {
	      const criteriaKeys = [];
	      _.each(this._criteria, (criterion) => {
	        const value = entity[criterion.name];
	        if (!_.isUndefined(value)) {
	          (_.isArray(value) ? value : [value]).forEach((innerValue) => {
	            innerValue = (criterion.transformer || _.identity)(innerValue);
	            const criterionKey = makeKey(criterion.name, innerValue);
	            criteriaKeys.push(criterionKey);

	            if (!_.contains(criterion.values, innerValue)) {
	              criterion.values.push(innerValue);
	            }
	          });
	          criterion.values.sort(criterion.compare);
	        }
	      });

	      criteriaKeys.sort();
	      Utils.combine(criteriaKeys).forEach(key => (this._criteriaFilters[key] = 1));
	    });
	    this._dirty = false;
	  }
	};

	function getValidator(validator) {
	  if (!validator) {
	    return ShapedConfig.arrayValidator;
	  }

	  return (value) => {
	    const arrayResult = ShapedConfig.arrayValidator(value);
	    arrayResult.converted = arrayResult.converted.map((val) => {
	      const result = validator(val);
	      arrayResult.valid = arrayResult.valid && result.valid;
	      return result.converted;
	    });
	    return arrayResult;
	  };
	}


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const ShapedModule = __webpack_require__(12);
	const ChatWatcher = __webpack_require__(27);

	module.exports = class TokenBarConfigurer extends ShapedModule {

	  registerEventListeners(eventDispatcher) {
	    eventDispatcher.registerEventHandler('change:attribute', (curr) => {
	      const barAttributes = _.chain(this.myState.config.tokenSettings)
	        .pick('bar1', 'bar2', 'bar3')
	        .pluck('attribute')
	        .compact()
	        .map(attrName => (attrName === 'HP' ? 'hp_formula' : attrName))
	        .value();

	      if (_.contains(barAttributes, curr.get('name'))) {
	        this.roll20.findObjs({ type: 'graphic', represents: curr.get('characterid') })
	          .forEach(token => this.setTokenBarsOnDrop(token, false));
	      }
	    });
	    eventDispatcher.registerEventHandler('add:token', token => this.setTokenBarsOnDrop(token, true));
	  }

	  setTokenBarsOnDrop(token, overwrite) {
	    const character = this.roll20.getObj('character', token.get('represents'));
	    if (!character) {
	      return;
	    }

	    function setBar(barName, bar, value) {
	      if (value) {
	        token.set(`${barName}_value`, value);
	        if (bar.max) {
	          token.set(`${barName}_max`, value);
	        }
	      }
	    }

	    _.chain(this.myState.config.tokenSettings)
	      .pick('bar1', 'bar2', 'bar3')
	      .each((bar, barName) => {
	        if (bar.attribute && !token.get(`${barName}_link`) && (!token.get(`${barName}_value`) || overwrite)) {
	          if (bar.attribute === 'HP' && this.myState.config.sheetEnhancements.rollHPOnDrop) {
	            // Guard against characters that aren't properly configured - i.e. ones used for templates and system
	            // things rather than actual characters
	            if (_.isEmpty(this.roll20.getAttrByName(character.id, 'hp_formula'))) {
	              this.logger.debug('Ignoring character $$$ for rolling HP - has no hp_formula attribute',
	                character.get('name'));
	              return;
	            }
	            this.roll20.sendChat('', `%{${character.get('name')}|shaped_npc_hp}`, (results) => {
	              if (results && results.length === 1) {
	                const message = ChatWatcher.processInlinerolls(results[0]);
	                if (!results[0].inlinerolls || !results[0].inlinerolls[0]) {
	                  this.logger.warn('HP roll didn\'t have the expected structure. This is what we got back: $$$',
	                    results[0]);
	                }
	                else {
	                  this.roll20.sendChat('HP Roller', `/w GM &{template:5e-shaped} ${message}`, null,
	                    { noarchive: true });
	                  setBar(barName, bar, results[0].inlinerolls[0].results.total);
	                }
	              }
	            });
	          }
	          else {
	            setBar(barName, bar, this.roll20.getAttrByName(character.id, bar.attribute));
	          }
	        }
	      });
	  }
	};


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	const _ = __webpack_require__(2);

	module.exports = class ChatWatcher {
	  constructor(roll20, logger, eventDispatcher) {
	    this.roll20 = roll20;
	    this.logger = logger;
	    this.eventDispatcher = eventDispatcher;
	    this.chatListeners = [];
	    logger.wrapModule(this);
	    eventDispatcher.registerEventHandler('chat:message', (msg) => {
	      if (msg.type !== 'api') {
	        this.logger.debug('Processing message $$$', msg);
	        this.triggerChatListeners(msg);
	      }
	    });
	  }

	  registerChatListener(triggerFields, handler) {
	    const matchers = [];
	    if (triggerFields && !_.isEmpty(triggerFields)) {
	      matchers.push((msg, options) => _.intersection(triggerFields, _.keys(options)).length === triggerFields.length);
	    }
	    this.chatListeners.push({ matchers, handler });
	  }

	  triggerChatListeners(msg) {
	    const options = this.getRollTemplateOptions(msg);
	    this.logger.debug('Roll template options: $$$', options);
	    options.playerId = msg.playerid;
	    options.whisper = msg.type === 'whisper';
	    _.each(this.chatListeners, (listener) => {
	      if (_.every(listener.matchers, matcher => matcher(msg, options))) {
	        listener.handler(options);
	      }
	    });
	  }

	  /**
	   *
	   * @returns {*}
	   */
	  getRollTemplateOptions(msg) {
	    if (msg.rolltemplate === '5e-shaped') {
	      const regex = /\{\{(.*?)}}/g;
	      let match;
	      const options = {};
	      while ((match = regex.exec(ChatWatcher.processInlinerolls(msg)))) {
	        if (match[1]) {
	          const splitAttr = match[1].split('=');
	          const propertyName = splitAttr[0].replace(/_([a-z])/g, (m, letter) => letter.toUpperCase());
	          options[propertyName] = splitAttr.length === 2 ? splitAttr[1].replace(/\^\{/, '') : '';
	        }
	      }
	      if (options.characterName) {
	        options.character = this.roll20.findObjs({
	          _type: 'character',
	          name: options.characterName,
	        })[0];
	      }
	      return options;
	    }
	    return {};
	  }

	  static processInlinerolls(msg) {
	    if (_.has(msg, 'inlinerolls')) {
	      return _.chain(msg.inlinerolls)
	        .reduce((previous, current, index) => {
	          previous[`$[[${index}]]`] = current.results.total || 0;
	          return previous;
	        }, {})
	        .reduce((previous, current, index) => previous.replace(index.toString(), current), msg.content)
	        .value();
	    }

	    return msg.content;
	  }

	  get logWrap() {
	    return 'ChatWatcher';
	  }
	};


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);
	const Utils = __webpack_require__(6);

	function getRenameMapper(newName, upperCaseValue) {
	  return function renameMapper(key, value, output) {
	    output[newName] = upperCaseValue && value ? value.toUpperCase() : value;
	  };
	}

	function upperCaseMapper(key, value, output) {
	  output[key] = value ? value.toUpperCase() : value;
	}

	function identityMapper(key, value, output) {
	  output[key] = value;
	}

	function booleanMapper(key, value, output) {
	  if (value) {
	    output[key] = 'Yes';
	  }
	}

	function durationMapper(key, value, output, spellObj) {
	  let newDuration = spellObj.concentration ? 'CONCENTRATION_' : '';
	  newDuration += value.toUpperCase().replace(/\s/g, '_');
	  output[key] = newDuration;
	}

	function spellLevelMapper(key, value, output) {
	  let spellLevel;
	  if (value === 0) {
	    spellLevel = 'CANTRIP';
	  }
	  else {
	    switch (value % 10) {
	      case 1:
	        spellLevel = `${value}ST_LEVEL`;
	        break;
	      case 2:
	        spellLevel = `${value}ND_LEVEL`;
	        break;
	      case 3:
	        spellLevel = `${value}RD_LEVEL`;
	        break;
	      default:
	        spellLevel = `${value}TH_LEVEL`;
	        break;
	    }
	  }
	  output.spell_level = spellLevel;
	  output.level = value;
	}

	function camelCaseFixMapper(key, value, output) {
	  const newKey = Utils.camelToSnakeCase(key);
	  output[newKey] = value;
	}

	function getCastingStatMapper(prefix) {
	  return function castingStatMapper(key, value, output) {
	    if (value) {
	      output[`${prefix}_ability`] = 'SPELL_ABILITY';
	    }
	  };
	}

	function castingTimeMapper(key, value, output) {
	  output.casting_time = value && value.toUpperCase().replace(/\s/g, '_');
	}


	function componentMapper(key, value, output) {
	  const components = _.chain(value)
	    .omit('materialCost')
	    .map((propValue, propName) => {
	      if (propName !== 'materialMaterial') {
	        return propName.toUpperCase().slice(0, 1);
	      }

	      output.materials = propValue;
	      return null;
	    })
	    .compact()
	    .value()
	    .join('_');

	  if (components) {
	    output.components = `COMPONENTS_${components}`;
	  }
	}

	function attackTypeMapper(key, value, output) {
	  switch (value) {
	    case 'ranged':
	      output.attack_type = 'RANGED_SPELL_ATTACK';
	      break;
	    default:
	      output.attack_type = 'MELEE_SPELL_ATTACK';
	  }
	}

	function getDiceExploder(prefix) {
	  return function damageMapper(key, value, output) {
	    const match = value.match(/^(.+)(d[\d]+)$/);
	    if (match) {
	      output[`${prefix}_dice`] = match[1];
	      output[`${prefix}_die`] = match[2];
	    }
	  };
	}

	function getDamageMapper(prefix) {
	  return getDiceExploder(`${prefix}_damage`);
	}

	function getSecondaryDamageMapper(prefix) {
	  const valueMapper = getDamageMapper(`${prefix}_second`);
	  return function secondaryDamagerMapper(key, value, output) {
	    valueMapper(key, value, output);
	    output[`${prefix}_second_damage_condition`] = 'PLUS';
	  };
	}

	function getPrefixCamelCaseFixMapper(prefix) {
	  return function prefixCamelCaseFixMapper(key, value, output) {
	    const newKey = `${prefix}_${Utils.camelToSnakeCase(key)}`;
	    output[newKey] = value;
	  };
	}

	function getSaveAttackMappings(prefix) {
	  return {
	    ability: getRenameMapper('saving_throw_vs_ability', true),
	    type: attackTypeMapper,
	    damage: getDamageMapper(prefix),
	    damageBonus: getPrefixCamelCaseFixMapper(prefix),
	    damageType: getPrefixCamelCaseFixMapper(prefix),
	    saveSuccess: getRenameMapper('saving_throw_success'),
	    higherLevelDice: getPrefixCamelCaseFixMapper(prefix),
	    secondaryDamage: getSecondaryDamageMapper(prefix),
	    secondaryDamageBonus: getRenameMapper(`${prefix}_second_damage_bonus`),
	    secondaryDamageType: getRenameMapper(`${prefix}_second_damage_type`),
	    higherLevelSecondaryDice: getRenameMapper(`${prefix}_second_higher_level_dice`),
	    higherLevelSecondaryDie: getRenameMapper(`${prefix}_second_higher_level_die`),
	    castingStat: getCastingStatMapper(`${prefix}_damage`),
	    secondaryCastingStat: getCastingStatMapper(`${prefix}_second_damage`),
	  };
	}

	function getObjectMapper(mappings) {
	  return function objectMapper(key, value, output) {
	    _.each(value, (propVal, propName) => {
	      const mapper = mappings[propName];
	      if (!mapper) {
	        throw new Error('Unrecognised property when attempting to convert to srd format: ' +
	          `[${propName}] ${JSON.stringify(output)}`);
	      }
	      mapper(propName, propVal, output, value);
	    });
	  };
	}

	const spellMapper = getObjectMapper({
	  name: identityMapper,
	  duration: durationMapper,
	  level: spellLevelMapper,
	  school: upperCaseMapper,
	  emote: identityMapper,
	  range: identityMapper,
	  castingTime: castingTimeMapper,
	  target: identityMapper,
	  description: getRenameMapper('content'),
	  higherLevel: camelCaseFixMapper,
	  ritual: booleanMapper,
	  concentration: booleanMapper,
	  save: getObjectMapper(getSaveAttackMappings('saving_throw')),
	  attack: getObjectMapper(getSaveAttackMappings('attack')),
	  damage: getObjectMapper(getSaveAttackMappings('other')),
	  heal: getObjectMapper({
	    heal: getDiceExploder('heal'),
	    castingStat: getCastingStatMapper('heal'),
	    higherLevelDice: camelCaseFixMapper,
	    higherLevelAmount: getRenameMapper('higher_level_heal'),
	    bonus: getRenameMapper('heal_bonus'),
	  }),
	  components: componentMapper,
	  prepared(key, value, output) {
	    if (value) {
	      output.is_prepared = 'on';
	    }
	  },
	  classes: _.noop,
	  aoe: _.noop,
	  source: _.noop,
	  effects: _.noop,
	  domains: _.noop,
	  oaths: _.noop,
	  circles: _.noop,
	  patrons: _.noop,
	  lists: _.noop,
	  rowId: identityMapper,
	});


	const monsterMapper = getObjectMapper({
	  name: getRenameMapper('character_name'),
	  size: identityMapper,
	  type: identityMapper,
	  alignment: identityMapper,
	  AC: getRenameMapper('ac_srd'),
	  HP: getRenameMapper('hp_srd'),
	  speed: getRenameMapper('npc_speed'),
	  strength: identityMapper,
	  dexterity: identityMapper,
	  constitution: identityMapper,
	  intelligence: identityMapper,
	  wisdom: identityMapper,
	  charisma: identityMapper,
	  skills: getRenameMapper('skills_srd'),
	  savingThrows: getRenameMapper('saving_throws_srd'),
	  damageResistances: getRenameMapper('damage_resistances'),
	  damageImmunities: getRenameMapper('damage_immunities'),
	  conditionImmunities: getRenameMapper('condition_immunities'),
	  damageVulnerabilities: getRenameMapper('damage_vulnerabilities'),
	  senses: identityMapper,
	  languages: identityMapper,
	  challenge: identityMapper,
	  traits: identityMapper,
	  actions: identityMapper,
	  reactions: identityMapper,
	  regionalEffects: identityMapper,
	  regionalEffectsFade: identityMapper,
	  legendaryPoints: identityMapper,
	  legendaryActions: identityMapper,
	  lairActions: identityMapper,
	  spells: _.noop,
	  source: _.noop,
	});

	const pronounTokens = {
	  '{{GENDER_PRONOUN_HE_SHE}}': 'nominative',
	  '{{GENDER_PRONOUN_HIM_HER}}': 'accusative',
	  '{{GENDER_PRONOUN_HIS_HER}}': 'possessive',
	  '{{GENDER_PRONOUN_HIMSELF_HERSELF}}': 'reflexive',
	};


	module.exports = {

	  convertMonster(npcObject) {
	    const output = {};
	    monsterMapper(null, npcObject, output);

	    const actionTraitTemplate = _.template('**<%=data.name%>' +
	      '<% if(data.recharge) { print(" (" + data.recharge + ")") } %>**: <%=data.text%>', { variable: 'data' });
	    const legendaryTemplate = _.template('**<%=data.name%>' +
	      '<% if(data.cost && data.cost > 1){ print(" (Costs " + data.cost + " actions)") }%>**: <%=data.text%>',
	      { variable: 'data' });

	    function lairRegionalTemplate(item) {
	      return `\u2022 ${item}`;
	    }

	    const simpleSectionTemplate = _.template('\n <%=data.title%>\n<% print(data.items.join("\\n")); %>',
	      { variable: 'data' });
	    const legendarySectionTemplate = _.template('\n <%=data.title%>\n' +
	      'The <%=data.name%> can take <%=data.legendaryPoints%> legendary actions, choosing from the options below. ' +
	      'It can take only one legendary action at a time and only at the end of another creature\'s turn. ' +
	      'The <%=data.name%> regains spent legendary actions at the start of its turn.\n' +
	      '<% print(data.items.join("\\n")) %>', { variable: 'data' });
	    const regionalSectionTemplate = _.template(' <%=data.title%>\n<% print(data.items.join("\\n")); %>\n' +
	      '**<%=data.regionalEffectsFade%>', { variable: 'data' });

	    const srdContentSections = [
	      { prop: 'lairActions', itemTemplate: lairRegionalTemplate, sectionTemplate: simpleSectionTemplate },
	      { prop: 'regionalEffects', itemTemplate: lairRegionalTemplate, sectionTemplate: regionalSectionTemplate },
	      { prop: 'traits', itemTemplate: actionTraitTemplate, sectionTemplate: simpleSectionTemplate },
	      { prop: 'actions', itemTemplate: actionTraitTemplate, sectionTemplate: simpleSectionTemplate },
	      { prop: 'reactions', itemTemplate: actionTraitTemplate, sectionTemplate: simpleSectionTemplate },
	      { prop: 'legendaryActions', itemTemplate: legendaryTemplate, sectionTemplate: legendarySectionTemplate },
	    ];

	    function makeDataObject(propertyName, itemList) {
	      return {
	        title: propertyName.replace(/([A-Z])/g, ' $1').replace(/^[a-z]/, letter => letter.toUpperCase()),
	        name: output.character_name,
	        legendaryPoints: output.legendaryPoints,
	        regionalEffectsFade: output.regionalEffectsFade,
	        items: itemList,
	      };
	    }

	    output.is_npc = 1;
	    output.edit_mode = 0;

	    output.content_srd = _.chain(srdContentSections)
	      .map((sectionSpec) => {
	        const items = output[sectionSpec.prop];
	        delete output[sectionSpec.prop];
	        return _.map(items, sectionSpec.itemTemplate);
	      })
	      .map((sectionItems, sectionIndex) => {
	        const sectionSpec = srdContentSections[sectionIndex];
	        if (!_.isEmpty(sectionItems)) {
	          return sectionSpec.sectionTemplate(makeDataObject(sectionSpec.prop, sectionItems));
	        }

	        return null;
	      })
	      .compact()
	      .value()
	      .join('\n');


	    delete output.legendaryPoints;

	    return output;
	  },


	  convertSpells(spellObjects, pronounInfo) {
	    const result = _.chain(spellObjects)
	      .map((spellObject) => {
	        const converted = {};
	        spellMapper(null, spellObject, converted);
	        converted.toggle_details = 0;
	        if (converted.emote) {
	          _.each(pronounTokens, (pronounType, token) => {
	            const replacement = pronounInfo[pronounType];
	            converted.emote = converted.emote.replace(new RegExp(token, 'g'), replacement);
	          });
	        }
	        return converted;
	      })
	      .reduce((attrsObject, spellProps) => {
	        const rowId = spellProps.rowId || Utils.generateRowID();
	        _.each(_.omit(spellProps, 'rowId', 'level'), (propVal, propName) => {
	          attrsObject[`repeating_spell${spellProps.level}_${rowId}_${propName}`] = propVal;
	        });
	        return attrsObject;
	      }, {})
	      .value();

	    if (!_.isEmpty(result)) {
	      result.show_spells = 1;
	    }
	    return result;
	  },
	};


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/* globals GroupInitiative: false */
	const _ = __webpack_require__(2);

	module.exports = class EventDispatcher {

	  constructor(roll20, errorHandler, logger) {
	    this.roll20 = roll20;
	    this.addedTokenIds = [];
	    this.errorHandler = errorHandler;
	    this.logger = logger;
	    this.addTokenListeners = [];
	    this.attributeChangeHandlers = {};
	    this.turnOrderChangeListeners = [];
	    this.initPageListeners = [];
	    logger.wrapModule(this);
	    roll20.on('add:token', this.handleAddToken.bind(this));
	    roll20.on('change:token', this.handleChangeTokenForAdd.bind(this));
	    roll20.on('change:campaign:initiativepage', (obj) => {
	      this.initPageListeners.forEach(listener => listener(obj.get('initiativepage')));
	    });
	    if (typeof GroupInitiative !== 'undefined' && GroupInitiative.ObserveTurnOrderChange) {
	      /* eslint-disable new-cap */
	      // noinspection JSUnresolvedFunction
	      GroupInitiative.ObserveTurnOrderChange(this.handleGroupInitTurnOrderChange.bind(this));
	      /* eslint-enable new-cap */
	    }
	    if (typeof TurnMarker !== 'undefined') {
	      roll20.on('chat:message', (msg) => {
	        if (msg.type === 'api' && msg.content === '!eot') {
	          const turnOrder = roll20.getCampaign().get('turnorder');
	          _.defer(this.handleTurnOrderChange.bind(this, turnOrder));
	        }
	      });
	    }
	    roll20.on('change:attribute', (curr, prev) => {
	      (this.attributeChangeHandlers[curr.get('name')] || []).forEach(handler => handler(curr, prev));
	    });
	  }

	  /////////////////////////////////////////////////
	  // Event Handlers
	  /////////////////////////////////////////////////
	  handleAddToken(token) {
	    const represents = token.get('represents');
	    if (_.isEmpty(represents)) {
	      return;
	    }
	    const character = this.roll20.getObj('character', represents);
	    if (!character) {
	      return;
	    }
	    this.addedTokenIds.push(token.id);

	    // URGH. Thanks Roll20.
	    setTimeout(() => {
	      const addedToken = this.roll20.getObj('graphic', token.id);
	      if (addedToken) {
	        this.handleChangeTokenForAdd(addedToken);
	      }
	    }, 100);
	  }

	  handleChangeTokenForAdd(token) {
	    if (_.contains(this.addedTokenIds, token.id)) {
	      this.addedTokenIds = _.without(this.addedTokenIds, token.id);
	      this.addTokenListeners.forEach(listener => listener(token));
	    }
	  }

	  handleTurnOrderChange(current, prev) {
	    const prevOrder = prev ? JSON.parse(prev) : [];
	    const currentOrder = current ? JSON.parse(current) : [];

	    if (currentOrder.length > 0 &&
	      (prevOrder.length === 0 || currentOrder[0].id !== prevOrder[0].id)) {
	      this.turnOrderChangeListeners.forEach(listener => listener(currentOrder));
	    }
	  }

	  handleGroupInitTurnOrderChange(current, prev) {
	    this.handleTurnOrderChange(current, prev);
	    if (current && current === '[]' && this.roll20.getCampaign().get('initiativepage') === false) {
	      this.initPageListeners.forEach(listener => listener(false));
	    }
	    else if (prev && prev === '[]') {
	      _.defer(() => {
	        const initPage = this.roll20.getCampaign().get('initiativepage');
	        if (initPage !== false) {
	          this.initPageListeners.forEach(listener => listener(initPage));
	        }
	      });
	    }
	  }

	  registerEventHandler(eventType, handler) {
	    switch (eventType) {
	      case 'add:token':
	        this.addTokenListeners.push(this.wrapHandler(handler));
	        break;
	      case 'change:campaign:turnorder':
	        this.turnOrderChangeListeners.push(this.wrapHandler(handler));
	        break;
	      case 'change:campaign:initiativepage':
	        this.initPageListeners.push(this.wrapHandler(handler));
	        break;
	      default:
	        this.roll20.on(eventType, this.wrapHandler(handler));
	    }
	  }

	  registerAttributeChangeHandler(attributeName, handler) {
	    this.attributeChangeHandlers[attributeName] = this.attributeChangeHandlers[attributeName] || [];
	    this.attributeChangeHandlers[attributeName].push(this.wrapHandler(handler));
	  }

	  wrapHandler(handler) {
	    const self = this;
	    return function handlerWrapper() {
	      try {
	        handler.apply(null, arguments);
	      }
	      catch (e) {
	        self.errorHandler(e);
	      }
	      finally {
	        self.logger.prefixString = '';
	      }
	    };
	  }

	  get logWrap() {
	    return 'EventDispatcher';
	  }
	};


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const ShapedModule = __webpack_require__(12);
	const _ = __webpack_require__(2);
	const Utils = __webpack_require__(6);

	module.exports = class EntityLister extends ShapedModule {
	  constructor(deps) {
	    super(deps);
	    this.entities = {};
	    this.entityLookup = deps.entityLookup;
	  }

	  addCommands(commandProc) {
	    _.each(this.entities, (entity) => {
	      const cmdNames = [`list-${entity.name}`, entity.name];
	      const cmd = commandProc
	        .addCommand(cmdNames, this.listEntity.bind(this, entity.name), entity.gmOnly)
	        .options(entity.criteriaProvider.criteriaOptionsValidator);

	      entity.entityManager.addOptionsForListCommand(cmd);
	    });
	  }

	  addEntity(name, singularName, criteriaProvider, entityManager, gmOnly) {
	    if (!this.entityLookup.hasEntities(name)) {
	      throw new Error(`Invalid entity type ${name}`);
	    }

	    this.entities[name] = {
	      name,
	      singularName,
	      criteriaProvider,
	      entityManager,
	      gmOnly,
	    };
	  }

	  listEntity(entityName, options) {
	    const entityRecord = this.entities[entityName];
	    if (!entityRecord.entityManager.validateListCommandOptions(options)) {
	      return;
	    }
	    const criteria = entityRecord.criteriaProvider.criteria;
	    const criteriaNames = _.pluck(criteria, 'name');
	    const suppliedCriteria = _.pick(options, criteriaNames);
	    this.logger.debug('Looking for entities of type $$$ matching criteria $$$', entityName, suppliedCriteria);
	    const entities = this.entityLookup.searchEntities(entityName, suppliedCriteria);
	    this.logger.debug('Found: $$$', entities);
	    const relistOptions = `--relist ${escape(JSON.stringify(suppliedCriteria))}`;

	    const entitySpecificOptions = entityRecord.entityManager.getListCommandOptions(options);

	    const buttoniser = entityRecord.entityManager.getButtoniser(options, relistOptions);

	    const possibleCriteria = entityRecord.criteriaProvider.getCriteriaToDisplay(suppliedCriteria);

	    const header = this.buildHeader(entityName, possibleCriteria, suppliedCriteria, entitySpecificOptions,
	      entityRecord);
	    const list = this.buildList(entities, buttoniser);
	    this.reporter.sendPlayer(`&{template:5e-shaped}{{title=${Utils.toTitleCase(entityName)}}}` +
	      `{{content=<div class="entity-list">${header}<hr>${list}</div>}}`, options.playerId);
	  }


	  buildHeader(entityName, criteria, suppliedCriteria, entitySpecificOptions, entityRecord) {
	    const criteriaList = criteria.map((criterion) => {
	      if (criterion.buildListEntry) {
	        return criterion.buildListEntry(suppliedCriteria, entitySpecificOptions);
	      }

	      const valueList = criterion.values.map((value) => {
	        const selected = _.contains(suppliedCriteria[criterion.name], value);
	        const className = selected ? 'selected' : '';
	        const newOpts = buildNewOptionsString(suppliedCriteria, criterion.name, value);
	        return `<a href="!shaped-list-${entityName} ${newOpts} ${entitySpecificOptions}" class="${className}">` +
	          `${value}</a>`;
	      }).join(', ');
	      const name = Utils.toTitleCase(criterion.name);
	      return `<div class="criterion"><span class="criterion-name">${name}. </span>${valueList}</div>`;
	    }).join('');

	    return `${this.getEntityPicker(entityRecord)}${criteriaList}`;
	  }

	  buildList(entities, buttoniser) {
	    return '<div class="entity-scroller">' +
	      `${entities.map(entity => `<span>${buttoniser(entity)}</span>`).join('')}</div>`;
	  }

	  getEntityPicker(entityRecord) {
	    const list = this.entityLookup.getKeys(entityRecord.name, true);

	    if (!_.isEmpty(list)) {
	      // title case the  names for better display
	      list.forEach((part, index) => (list[index] = Utils.toTitleCase(part)));

	      // create a clickable button with a roll query to select an entity from the loaded json
	      return `<a href="!shaped-import-${entityRecord.singularName} ` +
	        `--?{Pick a ${entityRecord.singularName}|${list.join(
	          '|')}}">Select a ${entityRecord.singularName} by query</a>`;
	    }
	    return `Could not find any ${entityRecord.name}.<br/>Please ensure you have a properly formatted ` +
	      `${entityRecord.name} json file.`;
	  }
	};

	function buildNewOptionsString(suppliedCriteria, criterionToModify, valueToToggle) {
	  const newCriteria = Utils.deepClone(suppliedCriteria);
	  if (!newCriteria[criterionToModify]) {
	    newCriteria[criterionToModify] = [valueToToggle];
	  }
	  else {
	    const valueList = newCriteria[criterionToModify];
	    newCriteria[criterionToModify] = _.contains(valueList, valueToToggle) ? _.without(valueList, valueToToggle) :
	      valueList.concat(valueToToggle);
	  }
	  return _.reduce(newCriteria, (optionString, valueList, criterion) =>
	    (_.isEmpty(valueList) ? optionString : `${optionString} --${criterion} ${valueList.join(',')}`), '');
	}


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const ShapedModule = __webpack_require__(12);
	const ShapedConfig = __webpack_require__(13);
	const _ = __webpack_require__(2);
	const sanitise = __webpack_require__(32);
	const Utils = __webpack_require__(6);
	const JSONValidator = __webpack_require__(33);
	const mmFormat = __webpack_require__(34);
	const EntityLookup = __webpack_require__(5);
	const EntityCriteriaCollector = __webpack_require__(25);

	function crComparer(cr1, cr2) {
	  const cr1Parts = cr1.split('/');
	  const cr2Parts = cr2.split('/');
	  cr1 = cr1Parts[0] / (cr1Parts[1] || 1);
	  cr2 = cr2Parts[0] / (cr2Parts[1] || 1);
	  return cr1 - cr2;
	}

	function typeTransformer(type) {
	  return type.replace(/([^(]+)\(.*/, '$1').replace(/^swarm.*/i, 'Swarm').trim();
	}

	const SIZES = ['Tiny', 'Small', 'Medium', 'Large', 'Huge', 'Gargantuan'];

	module.exports = class MonsterManager extends ShapedModule {

	  constructor(deps) {
	    super(deps);
	    this.entityLookup = deps.entityLookup;
	    this.parser = deps.parseModule.getParser(mmFormat, this.logger);
	    this.abilityMaker = deps.abilityMaker;
	    this.srdConverter = deps.srdConverter;
	    this.tokenBarConfigurer = deps.tokenBarConfigurer;
	    this.entityLister = deps.entityLister;
	    this.importer = deps.importer;
	    this.spellManager = deps.spellManager;
	    const jsonValidator = new JSONValidator(mmFormat);

	    const monsterCriteria = new EntityCriteriaCollector([
	      { name: 'type', transformer: typeTransformer },
	      { name: 'challenge', compare: crComparer },
	      { name: 'size', compare: Utils.getFixedSort(SIZES) },
	    ], this.logger, this.entityLookup, 'monsters');
	    this.entityLookup.configureEntity('monsters',
	      [EntityLookup.jsonValidatorAsEntityProcessor(jsonValidator, ['source'])],
	      EntityLookup.jsonValidatorAsVersionChecker(jsonValidator, 'monsters'));
	    this.entityLister.addEntity('monsters', 'monster', monsterCriteria, this, true);
	  }

	  addCommands(commandProcessor) {
	    // !shaped-import-statblock
	    return commandProcessor.addCommand('import-statblock', this.importStatblock.bind(this), true)
	      .option('overwrite', ShapedConfig.booleanValidator)
	      .option('replace', ShapedConfig.booleanValidator)
	      .withSelection({
	        graphic: {
	          min: 1,
	          max: Infinity,
	        },
	      })
	      // !shaped-import-monster , !shaped-monster
	      .addCommand(['import-monster', 'monster'], this.importMonstersFromJson.bind(this), true)
	      .optionLookup('monsters', _.partial(this.entityLookup.findEntity.bind(this.entityLookup), 'monsters', _, false),
	        true)
	      .option('overwrite', ShapedConfig.booleanValidator)
	      .option('relist', ShapedConfig.jsonValidator, false)
	      .option('replace', ShapedConfig.booleanValidator)
	      .option('as', ShapedConfig.stringValidator)
	      .withSelection({
	        graphic: {
	          min: 0,
	          max: 1,
	        },
	      })
	      .addCommand('import-by-token', this.importByToken.bind(this), true)
	      .option('overwrite', ShapedConfig.booleanValidator)
	      .option('replace', ShapedConfig.booleanValidator)
	      .withSelection({
	        graphic: {
	          min: 1,
	          max: Infinity,
	        },
	      })
	      // !shaped-token-defaults
	      .addCommand(['token-defaults', 'apply-defaults'], this.applyTokenDefaults.bind(this), false)
	      .withSelection({
	        graphic: {
	          min: 1,
	          max: Infinity,
	        },
	      })
	      .addCommand('update-character', this.updateCharacter.bind(this), true)
	      .withSelection({
	        character: {
	          min: 0,
	          max: Infinity,
	          anyVersion: true,
	        },
	      })
	      .option('all', ShapedConfig.booleanValidator);
	  }

	  registerEventListeners(eventDispatcher) {
	    eventDispatcher.registerEventHandler('add:character', (character) => {
	      if (this.myState.config.newCharSettings.applyToAll) {
	        this.applyCharacterDefaults(character);
	      }
	    });
	  }

	  applyTokenDefaults(options) {
	    const messageBody = _.chain(options.selected.graphic)
	      .map((token) => {
	        const represents = token.get('represents');
	        const character = this.roll20.getObj('character', represents);
	        if (character) {
	          this.applyCharacterDefaults(character);
	          this.createTokenActions(character);
	          this.getTokenConfigurer(token)(character);
	          const isNpc = this.roll20.getAttrByName(character.id, 'is_npc');
	          let sensesString;
	          if (isNpc === 1) {
	            sensesString = this.roll20.getAttrByName(character.id, 'senses');
	          }
	          else {
	            sensesString = ['blindsight', 'darkvision', 'tremorsense', 'truesight']
	              .map(sense => [sense, this.roll20.getAttrByName(character.id, sense)])
	              .filter(senseInfo => senseInfo[1])
	              .map(senseInfo => `${senseInfo[0]} ${senseInfo[1]}`)
	              .join(',');
	          }
	          this.getTokenVisionConfigurer(token, sensesString)(character);
	          this.getDefaultTokenPersister(token)(character);
	          return character.get('name');
	        }
	        return null;
	      })
	      .compact()
	      .value()
	      .join('</li><li>');

	    this.reportPlayer('Apply Defaults', `Character and token defaults applied for:<ul><li>${messageBody}</li></ul>`,
	      options.playerId);
	  }

	  importStatblock(options) {
	    this.logger.info('Importing statblocks for tokens $$$', options.selected.graphic);
	    _.each(options.selected.graphic, (token) => {
	      const error = `Could not find GM notes on either selected token ${token.get('name')} or the character ` +
	        'it represents. Have you pasted it in correctly?';
	      const text = token.get('gmnotes');
	      if (!text) {
	        const char = this.roll20.getObj('character', token.get('represents'));
	        if (char) {
	          char.get('gmnotes', (notes) => {
	            if (notes) {
	              return this.processGMNotes(options, token, notes);
	            }
	            return this.reportError(error, options.playerId);
	          });
	        }
	        else {
	          return this.reportError(error, options.playerId);
	        }
	      }

	      return this.processGMNotes(options, token, text);
	    });
	  }

	  processGMNotes(options, token, text) {
	    text = sanitise(unescape(text), this.logger);
	    const monsters = this.parser.parse(text).monsters;
	    return this.importMonsters(monsters, options, token, [
	      function gmNotesSetter(character) {
	        character.set('gmnotes', text.replace(/\n/g, '<br>'));
	        return character;
	      },
	    ]).then(this.displayImportResults.bind(this, options.playerId));
	  }

	  displayImportResults(playerId, results) {
	    if (!_.isEmpty(results.importedList)) {
	      const monsterList = results.importedList.map(char => char.get('name')).join('</li><li>');
	      this.reportPlayer('Import Success', `Added the following monsters: <ul><li>${monsterList}</li></ul>`, playerId);
	    }
	    if (!_.isEmpty(results.errors)) {
	      const errorList = results.errors.join('</li><li>');
	      this.reportError(`The following errors occurred on import:  <ul><li>${errorList}</li></ul>`, playerId);
	    }
	  }

	  importMonstersFromJson(options) {
	    return this.importMonsters(options.monsters, options, options.selected.graphic, [])
	      .then(this.displayImportResults.bind(this, options.playerId));
	  }

	  importByToken(options) {
	    const notFound = [];
	    const imported = [];
	    const errors = [];
	    return options.selected.graphic
	      .reduce((promise, token) =>
	        promise.then((prevImported) => {
	          if (prevImported) {
	            Array.prototype.push.apply(imported, prevImported.importedList);
	            Array.prototype.push.apply(errors, prevImported.errors);
	          }
	          const monsterName = token.get('name');
	          const monster = this.entityLookup.findEntity('monsters', monsterName, true);
	          if (monster) {
	            return this.importMonsters([monster], options, token, []);
	          }
	          notFound.push(monsterName);
	          return null;
	        }), Promise.resolve())
	      .then((prevImported) => {
	        if (prevImported) {
	          imported.push.apply(imported, prevImported.importedList);
	          errors.push.apply(errors, prevImported.errors);
	        }
	        this.logger.debug('Final results: $$$', imported);
	        let message = '';
	        if (!_.isEmpty(imported)) {
	          message += 'The following monsters were imported successfully:<ul><li>' +
	            `${imported.map(monster => monster.get('name')).join('</li><li>')}</ul>`;
	        }
	        if (!_.isEmpty(notFound)) {
	          message += 'The following monsters were not found in the database:<ul><li>' +
	            `${notFound.join('</li><li>')}</li></ul>`;
	        }
	        if (!_.isEmpty(errors)) {
	          message += 'The following errors were reported: <ul><li>  ' +
	            `${errors.join('</li><li>')}</li></ul>`;
	        }
	        this.reportPlayer('Monster Import Complete', message, options.playerId);
	      });
	  }

	  importMonsters(monsters, options, token, characterProcessors) {
	    const characterRetrievalStrategies = [];

	    if (_.size(monsters) === 1) {
	      if (options.as) {
	        monsters[0].name = options.as;
	      }
	      if (token && (options.replace || options.overwrite)) {
	        characterRetrievalStrategies.push(this.getTokenRetrievalStrategy(token).bind(this));
	      }
	    }

	    if (options.replace) {
	      characterRetrievalStrategies.push(this.nameRetrievalStrategy.bind(this));
	    }

	    characterRetrievalStrategies.push(this.creationRetrievalStrategy.bind(this));
	    characterProcessors.push(this.monsterDataPopulator.bind(this));
	    characterProcessors.push(this.applyCharacterDefaults.bind(this));
	    characterProcessors.push(this.createTokenActions.bind(this));

	    if (token) {
	      characterProcessors.push(this.getAvatarCopier(token).bind(this));
	      if (_.size(monsters) === 1) {
	        characterProcessors.push(this.getTokenConfigurer(token, true).bind(this));
	        characterProcessors.push(this.getTokenVisionConfigurer(token, monsters[0].senses));
	        characterProcessors.push(this.getTokenBarSetter(token).bind(this));
	        characterProcessors.push(this.getDefaultTokenPersister(token));
	      }
	    }


	    const errors = [];
	    const importedList = [];
	    return monsters
	      .reduce((prevPromise, monsterData) =>
	        prevPromise.then(() => {
	          const character = _.reduce(characterRetrievalStrategies,
	            (result, strategy) => result || strategy(monsterData.name, errors), null);

	          if (!character) {
	            this.logger.error('Failed to find or create character for monster $$$', monsterData.name);
	            return null;
	          }

	          const oldAttrs = this.roll20.findObjs({ type: 'attribute', characterid: character.id });
	          _.invoke(oldAttrs, 'remove');
	          character.set('name', monsterData.name);

	          return characterProcessors.reduce((charPromise, proc) =>
	              charPromise.then(updatedChar => proc(updatedChar, monsterData))
	            , Promise.resolve(character))
	            .then((finishedChar) => {
	              importedList.push(finishedChar);
	            });
	        }), Promise.resolve())
	      .then(() => {
	        this.logger.debug('All monsters imported $$$', importedList);
	        return {
	          errors,
	          importedList,
	        };
	      });
	  }

	  monsterDataPopulator(character, monsterData) {
	    const converted = this.srdConverter.convertMonster(monsterData);
	    this.logger.debug('Converted monster data: $$$', converted);
	    return this.importData(character, converted);
	  }

	  importData(character, data) {
	    this.logger.debug('Importing new character data $$$', data);
	    const msg = this.reporter.getMessageStreamer(`${character.get('name')} Import`);
	    let charPromise = Promise.resolve(character);
	    if (!this.roll20.getAttrByName(character.id, 'version')) {
	      charPromise = this.importer.runImportStage(character, { sheet_opened: 1 }, 'Creating character', msg);
	    }

	    return charPromise
	      .then(newChar => this.importer.runImportStage(newChar, { import_data: JSON.stringify({ npc_data: data }) },
	        'Importing character data', msg))
	      .then(newChar => this.spellManager.importData(newChar, [], false, msg))
	      .then((newChar) => {
	        msg.finish();
	        return newChar;
	      });
	  }

	  getTokenRetrievalStrategy(token) {
	    return (name, errors) => {
	      if (token) {
	        const character = this.roll20.getObj('character', token.get('represents'));
	        if (character && this.roll20.getAttrByName(character.id, 'locked')) {
	          errors.push(`Character with name ${character.get('name')} and id ${character.id}` +
	            ' was locked and cannot be overwritten');
	          return null;
	        }
	        return character;
	      }
	      return null;
	    };
	  }

	  nameRetrievalStrategy(name, errors) {
	    const chars = this.roll20.findObjs({ type: 'character', name });
	    if (chars.length > 1) {
	      errors.push(`More than one existing character found with name "${name}". Can't replace`);
	      return null;
	    }

	    if (chars[0] && this.roll20.getAttrByName(chars[0].id, 'locked')) {
	      errors.push(`Character with name ${chars[0].get('name')} and id ${chars[0].id}` +
	        ' was locked and cannot be overwritten');
	      return null;
	    }

	    return chars[0];
	  }

	  creationRetrievalStrategy(name, errors) {
	    if (!_.isEmpty(this.roll20.findObjs({ type: 'character', name }))) {
	      errors.push(`Can't create new character with name "${name}` +
	        '" because one already exists with that name. Perhaps you want --replace?');
	      return null;
	    }

	    return this.roll20.createObj('character', { name });
	  }

	  getAvatarCopier(token) {
	    return function avatarCopier(character) {
	      character.set('avatar', token.get('imgsrc'));
	      return character;
	    };
	  }

	  applyCharacterDefaults(character) {
	    const completionPromise = new Promise(resolve => this.roll20.onSheetWorkerCompleted(() => resolve(character)));
	    const defaults = _.chain(Utils.flattenObject(_.omit(this.myState.config.newCharSettings, 'tokenActions')))
	      .reduce((result, value, key) => {
	        const attrName = ShapedConfig.configToAttributeLookup[key];
	        if (attrName) {
	          result[attrName] = value;
	        }
	        return result;
	      }, {})
	      .value();

	    this.logger.debug('Setting character defaults $$$', defaults);

	    _.each(defaults, (value, key) => {
	      let attribute = this.roll20.getAttrObjectByName(character.id, key);
	      if (value === '***default***' || (_.isBoolean(value) && !value)) {
	        if (attribute) {
	          this.logger.debug('Removing attribute $$$', key);
	          attribute.removeWithWorker();
	        }
	      }
	      else {
	        if (!attribute) {
	          attribute = this.roll20.createObj('attribute', { characterid: character.id, name: key });
	        }
	        this.logger.debug('Setting attribute $$$ to $$$', key, value);
	        attribute.setWithWorker('current', _.isBoolean(value) ? 1 : value);
	      }
	    });
	    return completionPromise.then(() => {
	      this.logger.debug('Finished setting character defaults for $$$', character.get('name'));
	      return character;
	    });
	  }

	  createTokenActions(character) {
	    const abilityNames = _.chain(this.myState.config.newCharSettings.tokenActions)
	      .omit('showRecharges')
	      .map((action, actionName) => (action === true ? actionName : action))
	      .compact()
	      .values()
	      .value();
	    this.abilityMaker.addAbilitiesByName(abilityNames, character,
	      this.myState.config.newCharSettings.tokenActions.showRecharges);
	    return character;
	  }

	  getTokenConfigurer(token, monsterImport) {
	    return (character) => {
	      const isNpcLiteral = this.roll20.getAttrByName(character.id, 'is_npc');
	      const isNpc = (isNpcLiteral === 1 || isNpcLiteral === '1' || monsterImport);
	      this.logger.debug('isNPC $$$ $$$', isNpcLiteral, isNpc);
	      token.set('represents', character.id);
	      const settings = this.myState.config.tokenSettings;
	      if (monsterImport) {
	        const name = _.isEmpty(settings.monsterTokenName) ? character.get('name') : settings.monsterTokenName;
	        token.set('name', name);
	      }
	      if (settings.number && isNpc && token.get('name').indexOf('%%NUMBERED%%') === -1) {
	        token.set('name', `${token.get('name')} %%NUMBERED%%`);
	      }

	      _.chain(settings)
	        .pick(['bar1', 'bar2', 'bar3'])
	        .each((bar, barName) => {
	          if (!_.isEmpty(bar.attribute)) {
	            // We create attribute here to ensure we have control over the id
	            const attribute = this.roll20.getOrCreateAttr(character.id, bar.attribute);
	            if (attribute) {
	              if (bar.link) {
	                token.set(`${barName}_link`, attribute.id);
	              }
	              else {
	                token.set(`${barName}_link`, '');
	              }
	              token.set(`${barName}_value`, attribute.get('current'));
	              if (bar.max) {
	                token.set(`${barName}_max`, attribute.get('max'));
	              }
	              else {
	                token.set(`${barName}_max`, '');
	              }
	              token.set(`showplayers_${barName}`, bar.showPlayers);
	            }
	          }
	        });

	      // auras
	      _.chain(settings)
	        .pick(['aura1', 'aura2'])
	        .each((aura, auraName) => {
	          token.set(`${auraName}_radius`, aura.radius);
	          token.set(`${auraName}_color`, aura.color);
	          token.set(`${auraName}_square`, aura.square);
	        });

	      this.logger.debug('Settings for tokens: $$$', settings);
	      token.set('showname', settings.showName);
	      token.set('showplayers_name', settings.showNameToPlayers);
	      token.set('showplayers_aura1', settings.showAura1ToPlayers);
	      token.set('showplayers_aura2', settings.showAura2ToPlayers);
	      token.set('light_radius', settings.light.radius);
	      token.set('light_dimradius', settings.light.dimRadius);
	      token.set('light_otherplayers', settings.light.otherPlayers);
	      token.set('light_hassight', settings.light.hasSight);
	      token.set('light_angle', settings.light.angle);
	      token.set('light_losangle', settings.light.losAngle);
	      token.set('light_multiplier', settings.light.multiplier);
	      return character;
	    };
	  }

	  getTokenVisionConfigurer(token, sensesString) {
	    if (_.isEmpty(sensesString)) {
	      this.logger.debug('Empty senses string, using default values');
	      return _.identity;
	    }

	    function fullRadiusLightConfigurer() {
	      token.set('light_radius', Math.max(token.get('light_radius') || 0, this.lightRadius));
	      token.set('light_dimradius', Math.max(token.get('light_dimradius') || 0, this.lightRadius));
	    }

	    function darkvisionLightConfigurer() {
	      token.set('light_radius', Math.max(token.get('light_radius') || 0, Math.round(this.lightRadius * 1.1666666)));
	      if (!token.get('light_dimradius')) {
	        token.set('light_dimradius', -5);
	      }
	    }

	    const configureFunctions = {
	      blindsight: fullRadiusLightConfigurer,
	      truesight: fullRadiusLightConfigurer,
	      tremorsense: fullRadiusLightConfigurer,
	      darkvision: darkvisionLightConfigurer,
	    };

	    const re = /(blindsight|darkvision|tremorsense|truesight)\s+(\d+)/;
	    let match;
	    const senses = [];
	    while ((match = sensesString.match(re))) {
	      senses.push({
	        name: match[1],
	        lightRadius: parseInt(match[2], 10),
	        configureVision: configureFunctions[match[1]],
	      });
	      sensesString = sensesString.slice(match.index + match[0].length);
	    }

	    return function configureTokenVision(character) {
	      senses.forEach(sense => sense.configureVision());
	      return character;
	    };
	  }

	  getTokenBarSetter(token) {
	    return (character) => {
	      this.tokenBarConfigurer.setTokenBarsOnDrop(token, true);
	      return character;
	    };
	  }

	  getDefaultTokenPersister(token) {
	    return (character) => {
	      this.roll20.setDefaultTokenForCharacter(character, token);
	      return character;
	    };
	  }

	  updateCharacter(options) {
	    if (options.all) {
	      options.selected.character = this.roll20.findObjs({ type: 'character' });
	    }

	    if (_.isEmpty(options.selected.character)) {
	      this.reportError('You have no tokens selected that represent characters, and you did not specify --all',
	        options.playerId);
	      return null;
	    }
	    const count = options.selected.character.length;
	    const msg = this.reporter.getMessageStreamer(`Updating ${count} characters`);
	    return options.selected.character.reduce((promise, character, index) =>
	        promise.then(() => {
	          const sheetOpened = this.roll20.getAttrByName(character.id, 'sheet_opened');
	          return this.importer
	            .runImportStage(character, { sheet_opened: sheetOpened === 1 ? 0 : 1 },
	              `Updating character ${index + 1} - ${character.get('name')}`, msg);
	        }),
	      Promise.resolve())
	      .then(() => {
	        msg.finish();
	        this.reportPlayer('Update Complete', `${count} characters checked/updated`, options.playerId);
	      });
	  }

	  getButtoniser(options, relistOptions) {
	    return monster => `<a href="!shaped-import-monster ${relistOptions} --${monster.name}">${monster.name}</a>`;
	  }

	  validateListCommandOptions() {
	    return true;
	  }

	  addOptionsForListCommand() {
	  }

	  getListCommandOptions() {
	    return '';
	  }

	};


/***/ },
/* 32 */
/***/ function(module, exports) {

	'use strict';
	function sanitise(statblock, logger, noOcrFixes) {
	  logger.debug('Pre-sanitise: $$$', statblock);
	  statblock = statblock
	    .replace(/\s+([.,;:])/g, '$1')
	      .replace(/\n+/g, '#')
	      .replace(/–/g, '-')
	      .replace(/‒/g, '-')
	      .replace(/−/g, '-') // Watch out: this and the two lines above containing funny unicode versions of '-'
	      .replace(/’/gi, '\'')
	      .replace(/<br[^>]*>/g, '#')
	      .replace(/#+/g, '#')
	      .replace(/\s*#\s*/g, '#')
	      .replace(/(<([^>]+)>)/gi, '')
	      .replace(/legendary actions/gi, 'Legendary Actions')
	      .replace(/(\S)\sACTIONS/, '$1#ACTIONS')
	      .replace(/LAIR#ACTIONS/gi, 'LAIR ACTIONS')
	      .replace(/#(?=[a-z]|DC)/g, ' ')
	      .replace(/\s+/g, ' ')
	      .replace(/#Hit:/gi, 'Hit:')
	      .replace(/Hit:#/gi, 'Hit: ')
	      .replace(/#Each /gi, 'Each ')
	      .replace(/#On a successful save/gi, 'On a successful save')
	      .replace(/DC#(\d+)/g, 'DC $1')
	      .replace('LanguagesChallenge', 'Languages -\nChallenge')
	      .replace('\' Speed', 'Speed')
	    .replace(/(\w+) s([\s.,])/g, '$1s$2')
	      .replace(/#Medium or/gi, ' Medium or')
	      .replace(/take#(\d+)/gi, 'take $1')
	      .replace(/#/g, '\n')
	      .replace(/&gt;/g, '>')
	      .replace(/&lt;/g, '<')
	      .replace(/&amp;/g, '&');


	  logger.debug('First stage cleaned statblock: $$$', statblock);

	  // Sometimes the texts ends up like 'P a r a l y z i n g T o u c h . M e l e e S p e l l A t t a c k : + 1 t o h i t
	  // In this case we can fix the title case stuff, because we can find the word boundaries. That will at least meaning
	  // that the core statblock parsing will work. If this happens inside the lowercase body text, however, there's
	  // nothing we can do about it because you need to understand the natural language to reinsert the word breaks
	  // properly.
	  statblock = statblock.replace(/([A-Z])(\s[a-z]){2,}/g, (match, p1) =>
	      p1 + match.slice(1).replace(/\s([a-z])/g, '$1')
	  );


	  // Conversely, sometimes words get mushed together. Again, we can only fix this for title case things, but that's
	  // better than nothing
	  statblock = statblock.replace(/([A-Z][a-z]+)(?=[A-Z])/g, '$1 ');

	  // This covers abilites that end up as 'C O N' or similar
	  statblock = statblock.replace(/^[A-Z]\s?[A-Z]\s?[A-Z](?=\s|$)/mg, match => match.replace(/\s/g, ''));

	  statblock = statblock.replace(/^[A-Z '()-]+$/mg, match =>
	      match.replace(/([A-Z])([A-Z'-]+)(?=\s|\)|$)/g, (innerMatch, p1, p2) => p1 + p2.toLowerCase())
	  );


	  statblock = statblock.replace(/(\d+)\s*?plus\s*?((?:\d+d\d+)|(?:\d+))/gi, '$2 + $1');
	  /* eslint-disable quote-props */
	  if (!noOcrFixes) {
	    const replaceObj = {
	      'Jly': 'fly',
	      ',1\'': ',*',
	      'jday': '/day',
	      'abol eth': 'aboleth',
	      'ACT IONS': 'ACTIONS',
	      'Afrightened': 'A frightened',
	      'Alesser': 'A lesser',
	      'Athl etics': 'Athletics',
	      'blindn ess': 'blindness',
	      'blind sight': 'blindsight',
	      'bofh': 'both',
	      'brea stplate': 'breastplate',
	      'Can trips': 'Cantrips',
	      'choos in g': 'choosing',
	      'com muni cate': 'communicate',
	      'Constituti on': 'Constitution',
	      'creatu re': 'creature',
	      'darkvi sion': 'darkvision',
	      'dea ls': 'deals',
	      'di sease': 'disease',
	      'di stance': 'distance',
	      'fa lls': 'falls',
	      'fe et': 'feet',
	      'exha les': 'exhales',
	      'ex istence': 'existence',
	      'lfthe': 'If the',
	      'Ifthe': 'If the',
	      'ifthe': 'if the',
	      'lnt': 'Int',
	      'magica lly': 'magically',
	      'Med icine': 'Medicine',
	      'minlilte': 'minute',
	      'natura l': 'natural',
	      'ofeach': 'of each',
	      'ofthe': 'of the',
	      'on\'e': 'one',
	      'on ly': 'only',
	      '0n': 'on',
	      'pass ive': 'passive',
	      'Perce ption': 'Perception',
	      'radi us': 'radius',
	      'ra nge': 'range',
	      'rega ins': 'regains',
	      'rest.oration': 'restoration',
	      'savin g': 'saving',
	      'si lvery': 'silvery',
	      's lashing': 'slashing',
	      'slas hing': 'slashing',
	      'slash in g': 'slashing',
	      'slash ing': 'slashing',
	      'Spel/casting': 'Spellcasting',
	      'successfu l': 'successful',
	      'ta rget': 'target',
	      ' Th e ': ' The ',
	      't_urns': 'turns',
	      'unti l': 'until',
	      'withi n': 'within',
	      'tohit': 'to hit',
	      'At wi ll': 'At will',
	      'per-son': 'person',
	      'ab ility': 'ability',
	      'spe ll': 'spell',
	    };
	    /* eslint-enable quote-props */

	    const re = new RegExp(Object.keys(replaceObj).join('|'), 'g');
	    statblock = statblock.replace(re, matched => replaceObj[matched]);

	    statblock = statblock
	        .replace(/,\./gi, ',')
	        .replace(/:\./g, ':')
	        .replace(/(\W)l(\W)/g, '$11$2')
	        .replace(/\.([\w])/g, '. $1')
	        .replace(/1</g, '*')
	        .replace(/(\w)ii/g, '$1ll')
	      .replace(/([a-z/])1/g, '$1l')
	        .replace(/([a-z])\/([a-z])/g, '$1l$2')
	        .replace(/blindnessldeafness/g, 'blindness/deafness')
	        .replace(/(^| )l /gm, '$11 ')
	        .replace(/ft\s+\./gi, 'ft.')
	        .replace(/ft\.\s,/gi, 'ft.,')
	        .replace(/\bft\b(?!\.)/gi, 'ft.')
	        .replace(/(\d+) ft\/(\d+) ft/gi, '$1/$2 ft')
	        .replace(/lOd/g, '10d')
	        .replace(/dl0/gi, 'd10')
	        .replace(/dlO/gi, 'd10')
	        .replace(/dl2/gi, 'd12')
	        .replace(/S(\d+)d(\d+)/gi, '5$1d$2')
	        .replace(/l(\d+)d(\d+)/gi, '1$1d$2')
	        .replace(/ld(\d+)/gi, '1d$1')
	        .replace(/l(\d+)d\s+(\d+)/gi, '1$1d$2')
	        .replace(/(\d+)d\s+(\d+)/gi, '$1d$2')
	        .replace(/(\d+)\s+d(\d+)/gi, '$1d$2')
	        .replace(/(\d+)\s+d(\d+)/gi, '$1d$2')
	        .replace(/(\d+)d(\d)\s(\d)/gi, '$1d$2$3')
	        .replace(/(\d+)j(?:Day|day)/gi, '$1/Day')
	        .replace(/(\d+)f(?:Day|day)/gi, '$1/Day')
	        .replace(/(\d+)j(\d+)/gi, '$1/$2')
	        .replace(/(\d+)f(\d+)/gi, '$1/$2')
	        .replace(/{/gi, '(')
	        .replace(/}/gi, ')')
	        .replace(/(\d+)\((\d+) ft/gi, '$1/$2 ft');

	    logger.debug('Final stage cleaned statblock: $$$', statblock);
	  }
	  return statblock;
	}

	module.exports = sanitise;


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	const _ = __webpack_require__(2);

	// noinspection JSUnusedGlobalSymbols
	const validatorFactories = {
	  orderedContent(spec) {
	    return makeContentModelValidator(spec);
	  },

	  unorderedContent(spec) {
	    return makeContentModelValidator(spec);
	  },

	  string(spec) {
	    if (spec.pattern) {
	      if (spec.matchGroup) {
	        return regExValidator(spec.name, extractRegexPart(spec.pattern, spec.matchGroup), spec.caseSensitive);
	      }

	      return regExValidator(spec.name, spec.pattern, spec.caseSensitive);
	    }
	    return function noop() {
	    };
	  },

	  enumType(spec) {
	    return function enumValidator(value, errors) {
	      if (!_.some(spec.enumValues, enumVal => new RegExp(`^${enumVal}$`, 'i').test(value))) {
	        errors.add(`Value "${value}" should have been one of [${spec.enumValues.join(',')}]`);
	      }
	    };
	  },

	  ability(spec) {
	    return regExValidator(spec.name, '\\d+');
	  },

	  heading() {
	    // Do not replace with _.noop, these functions get annotated
	    return function noop() {
	    };
	  },

	  number() {
	    return function numberValidator(value, errors) {
	      if (typeof value !== 'number') {
	        errors.add(`Value "${value}" should have been a number`);
	      }
	    };
	  },
	};

	function extractRegexPart(regexp, matchIndex) {
	  let braceCount = 0;
	  let startIndex = _.findIndex(regexp, (character, index) => {
	    if (character === '(' &&
	      (index < 2 || regexp[index - 1] !== '\\') &&
	      regexp[index + 1] !== '?') {
	      return ++braceCount === matchIndex;
	    }
	    return false;
	  });

	  if (startIndex === -1) {
	    throw new Error(`Can't find matchgroup ${matchIndex} in regular expression ${regexp}`);
	  }

	  // Lose the bracket
	  startIndex++;

	  let openCount = 1;
	  const endIndex = _.findIndex(regexp.slice(startIndex), (character, index, regexpPart) => {
	    if (character === '(' && regexpPart[index - 1] !== '\\') {
	      openCount++;
	    }
	    if (character === ')' && regexpPart[index - 1] !== '\\') {
	      return --openCount === 0;
	    }
	    return false;
	  });

	  if (endIndex === -1) {
	    throw new Error(`matchgroup ${matchIndex} seems not to have closing brace in regular expression ${regexp}`);
	  }

	  return regexp.slice(startIndex, startIndex + endIndex);
	}

	function regExValidator(fieldName, regexp, caseSensitive) {
	  const re = new RegExp(`^${regexp}$`, caseSensitive ? undefined : 'i');
	  return function regexpValidate(value, errors) {
	    if (!re.test(value)) {
	      errors.add(`Value "${value}" doesn't match pattern /${regexp}/`);
	    }
	  };
	}

	function makeValidator(spec) {
	  const validator = validatorFactories[spec.type](spec);
	  validator.max = _.isUndefined(spec.maxOccurs) ? 1 : spec.maxOccurs;
	  validator.min = _.isUndefined(spec.minOccurs) ? 1 : spec.minOccurs;
	  validator.fieldName = spec.name;
	  return validator;
	}

	function makeContentModelValidator(spec) {
	  const parts = _.chain(spec.contentModel)
	    .reject({ type: 'heading' })
	    .partition({ flatten: true })
	    .value();
	  const flattened = _.map(parts[0], makeValidator);

	  const subValidators = _.reduce(parts[1], (subVals, field) => {
	    subVals[field.name] = makeValidator(field);
	    return subVals;
	  }, {});

	  return function contentModelValidator(object, errors, isFlatten) {
	    let completed = _.reduce(object, (completedMemo, fieldValue, fieldName) => {
	      const validator = subValidators[fieldName];
	      if (validator) {
	        completedMemo.push(fieldName);
	        errors.pushPath(fieldName);
	        if (_.isArray(fieldValue)) {
	          if (fieldValue.length > validator.max) {
	            errors.add(`Number of entries [${fieldValue.length}] exceeds maximum allowed: ${validator.max}`);
	          }
	          else if (fieldValue.length < validator.min) {
	            errors.add(`Number of entries [${fieldValue.length}] is less than minimum allowed: ${validator.min}`);
	          }
	          else {
	            _.each(fieldValue, (arrayItem, index) => {
	              errors.pushIndex(arrayItem.name ? arrayItem.name : index);
	              validator(arrayItem, errors);
	              errors.popIndex();
	            });
	          }
	        }
	        else {
	          validator(fieldValue, errors);
	        }
	        errors.popPath();
	      }
	      return completedMemo;
	    }, []);

	    let toValidate = _.omit(object, completed);

	    _.chain(flattened)
	      .map((validator) => {
	        const subCompleted = validator(toValidate, errors, true);
	        if (subCompleted.length === 0) {
	          return validator;
	        }

	        completed = completed.concat(subCompleted);
	        toValidate = _.omit(toValidate, completed);
	        return null;
	      })
	      .compact()
	      .each((validator) => {
	        if (validator.min > 0) {
	          errors.pushPath(validator.fieldName);
	          errors.add('Section is missing');
	          errors.popPath();
	        }
	      });

	    // If we're a flattened validator (our content is injected directly into the parent content model)
	    // Then we should only report missing fields if there was some match in our content model - otherwise
	    // the parent content model will check the cardinality of this model as a whole
	    if (!isFlatten || !_.isEmpty(completed)) {
	      _.chain(subValidators)
	        .omit(completed)
	        .each((validator) => {
	          if (validator.min > 0) {
	            errors.pushPath(validator.fieldName);
	            errors.add('Field is missing');
	            errors.popPath();
	          }
	        });
	    }

	    // Flattened content models shouldn't check for unrecognised fields since they're only parsing
	    // part of the current content model.
	    if (!isFlatten) {
	      _.chain(object)
	        .omit(completed)
	        .each((value, key) => {
	          errors.pushPath(key);
	          errors.add('Unrecognised field');
	          errors.popPath();
	        });
	    }


	    return completed;
	  };
	}

	class Errors {
	  constructor() {
	    this.errors = [];
	    this.currentPath = [];
	  }

	  pushPath(path) {
	    this.currentPath.push(path);
	  }

	  popPath() {
	    return this.currentPath.pop();
	  }

	  pushIndex(index) {
	    this.currentPath[this.currentPath.length - 1] = `${this.currentPath[this.currentPath.length - 1]}[${index}]`;
	  }

	  popIndex() {
	    this.currentPath[this.currentPath.length - 1] = this.currentPath[this.currentPath.length -
	    1].replace(/\[[^\]]+\]/, '');
	  }

	  add(msg) {
	    this.errors.push({ msg, path: _.clone(this.currentPath) });
	  }

	  getErrors() {
	    return _.chain(this.errors)
	      .groupBy(error => error.path[0])
	      .mapObject(errorList =>
	        _.map(errorList, error => `${error.path.slice(1).join('.')}: ${error.msg}`)
	      )
	      .value();
	  }
	}

	module.exports = class JSONValidator {
	  constructor(spec) {
	    this.versionProp = {
	      type: 'string',
	      name: 'version',
	    };
	    this.spec = spec;
	    this.contentValidator = makeValidator({ type: 'unorderedContent', contentModel: [spec, this.versionProp] });
	  }

	  validate(object) {
	    const errors = new Errors();
	    this.contentValidator(object, errors);
	    return errors.getErrors();
	  }

	  getVersionNumber() {
	    return this.spec.formatVersion;
	  }
	};


/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = {
		"formatVersion": "2.0.0",
		"name": "monsters",
		"maxOccurs": "Infinity",
		"type": "orderedContent",
		"bare": true,
		"contentModel": [
			{
				"name": "coreInfo",
				"type": "orderedContent",
				"flatten": true,
				"contentModel": [
					{
						"name": "name",
						"type": "string",
						"bare": "true"
					},
					{
						"name": "size",
						"enumValues": [
							"Tiny",
							"Small",
							"Medium",
							"Large",
							"Huge",
							"Gargantuan"
						],
						"type": "enumType",
						"bare": "true"
					},
					{
						"name": "type",
						"type": "string",
						"bare": "true",
						"pattern": "^([\\w\\s\\(\\),-]+),",
						"matchGroup": 1
					},
					{
						"name": "alignment",
						"type": "enumType",
						"enumValues": [
							"(?:lawful|neutral|chaotic) (?:good|neutral|evil)(?:\\s?\\(\\d+%\\))? or (?:lawful|neutral|chaotic) (?:good|neutral|evil)(?:\\s?\\(\\d+%\\))?",
							"lawful good",
							"lawful neutral",
							"lawful evil",
							"neutral good",
							"neutral evil",
							"neutral",
							"chaotic good",
							"chaotic neutral",
							"chaotic evil",
							"chaotic",
							"lawful",
							"good",
							"evil",
							"unaligned",
							"any alignment",
							"any good alignment",
							"any non-good alignment",
							"any evil alignment",
							"any non-evil alignment",
							"any lawful alignment",
							"any non-lawful alignment",
							"any chaotic alignment",
							"any non-chaotic alignment",
							"construct"
						],
						"bare": true
					}
				]
			},
			{
				"name": "attributes",
				"type": "unorderedContent",
				"flatten": true,
				"contentModel": [
					{
						"name": "AC",
						"parseToken": "armor class",
						"pattern": "\\d+\\s*(?:\\([^)]*\\))?",
						"type": "string"
					},
					{
						"name": "HP",
						"parseToken": "hit points",
						"type": "string",
						"pattern": "\\d+(?:\\s?\\(\\s?\\d+d\\d+(?:\\s?[-+]\\s?\\d+)?\\s?\\))?"
					},
					{
						"name": "speed",
						"minOccurs": 0,
						"type": "string"
					},
					{
						"name": "strength",
						"parseToken": "str",
						"type": "ability"
					},
					{
						"name": "dexterity",
						"parseToken": "dex",
						"type": "ability"
					},
					{
						"name": "constitution",
						"parseToken": "con",
						"type": "ability"
					},
					{
						"name": "intelligence",
						"parseToken": "int",
						"type": "ability"
					},
					{
						"name": "wisdom",
						"parseToken": "wis",
						"type": "ability"
					},
					{
						"name": "charisma",
						"parseToken": "cha",
						"type": "ability"
					},
					{
						"name": "savingThrows",
						"minOccurs": 0,
						"parseToken": "saving throws",
						"type": "string",
						"pattern": "(?:(?:^|,\\s*)(?:Str|Dex|Con|Int|Wis|Cha)\\s+[\\-\\+]\\d+)+"
					},
					{
						"name": "skills",
						"minOccurs": 0,
						"type": "string",
						"pattern": "(?:(?:^|,\\s*)(?:Acrobatics|Animal Handling|Arcana|Athletics|Deception|History|Insight|Intimidation|Investigation|Medicine|Nature|Perception|Performance|Persuasion|Religion|Sleight of Hand|Stealth|Survival|Influence|Society)\\s+[\\-\\+]\\d+)+"
					},
					{
						"minOccurs": 0,
						"type": "string",
						"name": "damageVulnerabilities",
						"parseToken": "damage vulnerabilities"
					},
					{
						"minOccurs": 0,
						"type": "string",
						"name": "damageResistances",
						"parseToken": "damage resistances"
					},
					{
						"minOccurs": 0,
						"type": "string",
						"name": "damageImmunities",
						"parseToken": "damage immunities"
					},
					{
						"minOccurs": 0,
						"type": "string",
						"name": "conditionImmunities",
						"parseToken": "condition immunities"
					},
					{
						"name": "senses",
						"type": "string",
						"minOccurs": 0
					},
					{
						"name": "passivePerception",
						"parseToken": ",?\\s*passive Perception",
						"minOccurs": 0,
						"type": "number",
						"skipOutput": true
					},
					{
						"name": "spells",
						"minOccurs": 0,
						"type": "string"
					},
					{
						"name": "languages",
						"minOccurs": 0,
						"type": "string"
					}
				]
			},
			{
				"name": "challenge",
				"type": "string",
				"pattern": "^\\s*(\\d+(?:\\s*\\/\\s*\\d)?)\\s*(?:\\(\\s*[\\d,]+\\s*XP\\s*\\)\\s*)?$",
				"matchGroup": 1
			},
			{
				"name": "traitSection",
				"type": "orderedContent",
				"minOccurs": 0,
				"maxOccurs": 1,
				"flatten": true,
				"contentModel": [
					{
						"name": "traits",
						"type": "orderedContent",
						"minOccurs": 1,
						"maxOccurs": "Infinity",
						"contentModel": [
							{
								"name": "name",
								"type": "string",
								"pattern": "(^|.*?[a-z0-9]\\.\\s?)((?:[A-Z0-9][\\w\\-']+[,:!]?|A)(?:\\s(?:[A-Z0-9][\\w\\-']+[,:!]?|of|to|in|the|with|and|or|a|by|for)+)*(?:\\s?\\((?!Recharge|\\d+)[^\\)]+\\))?)(\\s?\\([^\\)]+\\))?\\.(?!$)",
								"matchGroup": 2,
								"forPreviousMatchGroup": 1,
								"forNextMatchGroup": 3,
								"bare": true,
								"caseSensitive": true
							},
							{
								"name": "recharge",
								"type": "string",
								"pattern": "^\\(([^\\)]+)\\)",
								"bare": true,
								"matchGroup": 1,
								"minOccurs": 0
							},
							{
								"name": "text",
								"bare": true,
								"type": "string"
							}
						]
					}
				]
			},
			{
				"name": "actionSection",
				"type": "orderedContent",
				"minOccurs": 0,
				"maxOccurs": 1,
				"flatten": true,
				"contentModel": [
					{
						"name": "actionHeader",
						"type": "heading",
						"bare": true,
						"pattern": "^Actions$"
					},
					{
						"name": "actions",
						"type": "orderedContent",
						"minOccurs": 1,
						"maxOccurs": "Infinity",
						"contentModel": [
							{
								"name": "name",
								"type": "string",
								"pattern": "(^|.*?[a-z]\\.\\s?)((?:\\d+\\.\\s?)?(?:[A-Z][\\w\\-']+[,:!]?|A|\\+\\d)(?:\\s(?:[A-Z][\\w\\-']+[,:!]?|of|in|to|with|the|and|or|by|for|a|\\+\\d+|2hd)+)*(?:\\s?\\((?!Recharge|\\d+)[^\\)]+\\))?)(\\s?\\([^\\)]+\\))?\\.(?!$)",
								"matchGroup": 2,
								"forPreviousMatchGroup": 1,
								"forNextMatchGroup": 3,
								"bare": true,
								"caseSensitive": true
							},
							{
								"name": "recharge",
								"type": "string",
								"bare": true,
								"pattern": "^\\(([^\\)]+)\\)",
								"matchGroup": 1,
								"minOccurs": 0
							},
							{
								"name": "text",
								"bare": true,
								"type": "string"
							}
						]
					}
				]
			},
			{
				"name": "reactionSection",
				"type": "orderedContent",
				"minOccurs": 0,
				"maxOccurs": 1,
				"flatten": true,
				"contentModel": [
					{
						"name": "reactionHeader",
						"type": "heading",
						"bare": true,
						"pattern": "^Reactions$"
					},
					{
						"name": "reactions",
						"type": "orderedContent",
						"minOccurs": 1,
						"maxOccurs": "Infinity",
						"contentModel": [
							{
								"name": "name",
								"type": "string",
								"pattern": "(^|.*?[a-z]\\.\\s?)((?:[A-Z][\\w\\-']+[,:!]?|A)(?:\\s(?:[A-Z][\\w\\-']+[,:!]?|of|in|to|with|the|and|or|a)+)*(?:\\s?\\((?!Recharge|\\d+)[^\\)]+\\))?)(\\s?\\([^\\)]+\\))?\\.(?!$)",
								"matchGroup": 2,
								"forPreviousMatchGroup": 1,
								"forNextMatchGroup": 3,
								"bare": true,
								"caseSensitive": true
							},
							{
								"name": "recharge",
								"type": "string",
								"bare": true,
								"pattern": "^\\(([^\\)]+)\\)",
								"matchGroup": 1,
								"minOccurs": 0
							},
							{
								"name": "text",
								"bare": true,
								"type": "string"
							}
						]
					}
				]
			},
			{
				"name": "legendaryActionSection",
				"type": "orderedContent",
				"minOccurs": 0,
				"maxOccurs": 1,
				"flatten": true,
				"contentModel": [
					{
						"name": "actionHeader",
						"type": "heading",
						"bare": true,
						"pattern": "^Legendary Actions$"
					},
					{
						"name": "legendaryPoints",
						"type": "number",
						"bare": true,
						"pattern": "^(?:The)?[ \\w-]+(?:can|may) take (\\d+) legendary action(?:s)?.*?start.*?turn[.]?",
						"matchGroup": 1
					},
					{
						"name": "legendaryActions",
						"type": "orderedContent",
						"minOccurs": 1,
						"maxOccurs": "Infinity",
						"contentModel": [
							{
								"name": "name",
								"type": "string",
								"bare": true,
								"pattern": "(^|.*?[a-z]\\.\\s?)((?:[A-Z][\\w\\-']+[,:!]?|A)(?:\\s(?:[A-Z][\\w\\-']+[,:!]?|of|with|to|the|and|or|a)+)*)(\\s?\\([^\\)]+\\))?\\.(?!$)",
								"matchGroup": 2,
								"forPreviousMatchGroup": 1,
								"forNextMatchGroup": 3,
								"caseSensitive": true
							},
							{
								"name": "cost",
								"type": "number",
								"bare": true,
								"pattern": "^\\s*\\(\\s*(?:costs )?(\\d+) actions\\s*\\)",
								"matchGroup": 1,
								"minOccurs": 0
							},
							{
								"name": "text",
								"bare": true,
								"type": "string"
							}
						]
					}
				]
			},
			{
				"name": "lairActionSection",
				"type": "orderedContent",
				"minOccurs": 0,
				"maxOccurs": 1,
				"flatten": true,
				"contentModel": [
					{
						"name": "actionHeader",
						"type": "heading",
						"pattern": "^Lair Actions$"
					},
					{
						"name": "lairActionBlurb",
						"type": "heading",
						"pattern": "^On initiative count 20[^:]+:*$"
					},
					{
						"name": "lairActions",
						"type": "string",
						"bare": true,
						"pattern": "^(?:\\*|•)\\s?((?:.|\n)*)",
						"matchGroup": 1,
						"minOccurs": 1,
						"maxOccurs": "Infinity"
					}
				]
			},
			{
				"name": "regionalEffectsSection",
				"type": "orderedContent",
				"minOccurs": 0,
				"maxOccurs": 1,
				"flatten": true,
				"contentModel": [
					{
						"name": "actionHeader",
						"type": "heading",
						"pattern": "^Regional Effects$"
					},
					{
						"name": "regionalBlurb",
						"type": "heading",
						"minOccurs": 0,
						"pattern": "^The region (?:containing|around|surrounding)[^:]+:$"
					},
					{
						"name": "regionalEffects",
						"type": "string",
						"minOccurs": 1,
						"maxOccurs": "Infinity",
						"bare": true,
						"pattern": "^(?:\\*|•)\\s?((?:.|\n)*)",
						"matchGroup": 1
					},
					{
						"name": "regionalEffectsFade",
						"type": "string",
						"bare": true,
						"pattern": "^(?:if|when)[\\w\\s-]+(?:dies|is destroyed).*$"
					}
				]
			}
		]
	};

/***/ }
/******/ ]);
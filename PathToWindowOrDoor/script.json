{
	"name": "PathToWindowOrDoor",
	"script": "PathToWindowOrDoor.js",
	"version": "1.0",
	"previousversions": [],
	"description": "# PathToWindowOrDoor v1\r___\rWelcome to PathToWindowOrDoor. This script helps quickly convert 2 point line paths to the new windows or doors\r### Using PathToWindowOrDoor\rThis script is only meant to be used by the GM, only the help will be returned to other players.This script will convert all single-segment paths on dynamic lighting & map layer (on a page or across the entire game)that match a specific color into either windows or doors, depending on the chosen command.<br/>For example: If the setting for hidden doors is the color green (#00ff00),then all single-segment green paths will be converted to a hidden door.<br/><br/>**<u>You can configure the color relationship in the Bio tab of a character created by the script.</u>**<p>\r#### BEWAREThis script won't ask for confirmation, it will convert all single-segment paths on DL & map layer which color correspond to configuration, if you want to limit scope, be sure to read next section.</p>\r**Default configuration :**\r\r- Hidden Doors: #00ff00\r- Locked Doors: #ff9900\r- Unlocked Doors: #ffff00\r- Windows: #00ffff\r\r### Basic Command Syntax\rThe script uses a standardized API command syntax. All PathToWindowOrDoor commands will begin with **!ptwod**. This will then be followedby a space a double dash preceding a keyword and options group. This looks like this:\r**!ptwod --keyWord|option1|option2|...**\rFor example: By default you will convert on the current page all single-segment green, yellow and orange paths to the new doorsby using the command <code style=\"white-space: nowrap\">!ptwod --convertDoors|page</code><br/>If the <code style=\"white-space: nowrap\">\"|page\"</code> flag is omitted, then the script will convert all matching paths across the entire game<hr/>\r### Converting Windows<p>Convert windows using the <code style=\"white-space: nowrap\">!ptwod --convertWindows</code> or <code style=\"white-space: nowrap\">!ptwod --convertWindows|page</code> commands\r#### Configured Windows segments converted as :\r- Windows color => Roll20 Windows Locked by default\r</p>\r### Converting Doors<p>Convert doors using the <code style=\"white-space: nowrap\">!ptwod --convertDoors</code> or <code style=\"white-space: nowrap\">!ptwod --convertDoors|page</code> commands\r#### Configured Doors segments converted as :\r- Hidden color => Roll20 Secret doors Locked by default\r- Locked color => Roll20 Locked doors\r- Unlocked color => Normal Roll20 doors\r**All doors are closed by default**</p><hr/>\r### Special Thanks\rThanks to Scott C.h, this script is started from his DoorKnocker work which i stripped and adapted to fit my needs and learn a things or two.",
	"authors": "Sylvain \"Groch\" CLIQUOT",
	"roll20userid": ["3137159"],
	"useroptions": [],
	"dependencies": [],
	"modifies": {
		"state.PathToWindowOrDoor": "read,write",
		"character": "read,write",
		"graphic": "read,write",
		"window": "write",
		"door": "write",
		"path":"read,write",
		"chat":"read"
	},
	"conflicts": []
}
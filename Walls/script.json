{
  "name": "Walls",
  "version": "0.3.5",
  "description": "Walls provides a way to generate the Dynamic Lighting Walls for your maps using SVG Paths exported from The GIMP.  Since it's designed to take information generated by a script, there wouldn't be any reason you'd want to manually enter these commands.  See the [Walls forum post](https://app.roll20.net/forum/permalink/1337473/) for full details of how to export paths from The GIMP.\n\nYou can load your exported SVG into the [Walls SVG parser](http://roll20api.net) to turn it into walls commands.  You shouldn't need to edit the commands manually, but you might decide to change the color or width later so they are documented below.  Once you've loaded your walls commands, be sure you have the corresponding graphic selected on the map layer before you execute the commands.  The more complicated the map, the longer it will take to parse and draw.  You should see occasional updates to chat as it works through the paths.  A minute or so is not completely unheard of.\n\n## Commands\n\n```!walls <operation details>``` (**GM Only**)\n\n### Operations\n* `begin` -- This instructs walls to start accumulating data on a new wall.\n* `viewbox <width> <height>` -- This tells walls the scale to use for the path data it will receive.\n* `strokecolor <color>` -- This sets the color for lines generated from this import.  The format is `#RRGGBB`, an HTML color.\n* `fillcolor <color>` -- This sets the color for lines generated from this import. Usually you'll want to leave this as `transparent`, but you can also specify a color in the format `#RRGGBB`, an HTML color.\n* `strokewidth <number>` -- This sets the width for lines generated from this import.  This should be a number greater than 0 but not more than 100.  Decimals like 2.5 are just fine.\n* `moveto <x> <y>` -- Moves the line start point to (x,y) relative to the view box.\n* `curveto <x1> <y1> <x2> <y2> <x> <y>` -- Creates a BÃ©zier curve from the current point to (x,y) using (x1,y1) as the starting control point and (x2,y2) as the ending control point.\n* `end` -- This instructs walls that all path data has been input and it's time to draw all the lines based on the data.\n",
  "authors": "The Aaron",
  "roll20userid": "104025",
  "patreon": "https://www.patreon.com/shdwjk",
  "dependencies": [],
  "modifies": {
    "state.Walls": "read,write",
    "graphic.height": "read",
    "graphic.left": "read",
    "graphic.pageid": "read",
    "graphic.top": "read",
    "graphic.width": "read",
    "path": "create",
    "player.displayname": "read"
  },
  "conflicts": [],
  "script": "Walls.js",
  "useroptions": [],
  "previousversions": [
    "0.3.1",
    "0.3.2",
    "0.3.3",
    "0.3.4"
  ]
}
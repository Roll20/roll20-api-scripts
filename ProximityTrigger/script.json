{
    "name": "ProximityTrigger",
    "script": "ProximityTrigger.js",
    "version": "2.1.0",
    "previousversions": [],
    "description": "# ProximityTrigger\n\nA powerful proximity-based automation system for Roll20 that triggers events when player tokens approach designated areas, NPCs, traps, or other game elements.\n\n## Features\n\n- **Automatic Proximity Detection**: Triggers activate when tokens move within range\n- **Customizable Distances**: Set trigger distances in token body widths\n- **Cooldown System**: Prevent spam with configurable timeouts\n- **Dynamic Content Parsing**: Advanced message system with placeholders, dice rolls, character attributes, and interactive buttons\n- **Character Sheet Integration**: Access and display character attributes dynamically in messages\n- **Inline Dice Rolling**: Embed dice rolls in messages with automatic calculation and styled display\n- **Interactive Buttons**: Create clickable buttons that execute chat commands, rolls, whispers, or API commands\n- **Weighted Messages**: Multiple messages with probability weights for variety\n- **Styleable Cards**: Beautiful message cards with customizable colors and whisper modes\n- **Multiple Use Cases**: NPCs, traps, environmental descriptions, passive checks, area effects\n- **Interactive Configuration**: Full chat-based UI for easy setup\n- **Multi-Token Support**: One trigger configuration can apply to multiple tokens\n- **Persistent State**: All settings saved between game sessions (including button callbacks)\n- **Three Trigger Modes**: Always on, one-time use, or disabled\n- **Per-Message Styling**: Override card styles for specific messages\n- **Automatic Token Management**: Tokens automatically tracked when added/removed\n\n## Basic Usage\n\n1. Place tokens on your map (NPCs, traps, environmental markers, etc.)\n2. Use `!pt --monitor` or `!pt -M` to start monitoring a token\n3. Configure trigger distance, timeout, messages, and styling\n4. When player tokens move within range, triggers activate automatically\n\n## Commands\n\n### Main Commands\n\n- `!pt --help` or `!pt -h` - Display help menu\n- `!pt --menu` or `!pt -m` - Open interactive menu\n- `!pt --monitor [Token/Name]` or `!pt -M [Token/Name]` - Add/edit a trigger\n- `!pt --list` or `!pt -l` - List all monitored triggers\n- `!pt --delete [Name]` or `!pt -D [Name]` - Delete a trigger\n- `!pt --trigger [Token/Name]` or `!pt -t [Token/Name]` - Manually activate a trigger\n\n### Configuration Commands\n\n- `!pt --edit [Name] [property] [value]` or `!pt -e [Name] [property] [value]` - Edit trigger properties\n\t- Properties: `triggerDistance`, `timeout`, `img`, `cardStyle`, `mode`\n- `!pt --cardstyles` or `!pt -cl` - List all card styles\n- `!pt --cardstyle [StyleName] [property] [value]` or `!pt -C [StyleName] [property] [value]` - Edit/create card styles\n\t- Properties: `borderColor`, `backgroundColor`, `bubbleColor`, `textColor`, `whisper`, `badge`\n\n### Trigger Modes\n\n- `on` - Trigger activates every time (respecting timeout)\n- `off` - Trigger is disabled\n- `once` - Trigger activates once, then automatically switches to off\n\n## Example Workflows\n\n### Setting Up an NPC\n\n1. Select the NPC token on the map\n2. Type: `!pt -M`\n3. Click \"Trigger Distance\" and set to desired range (e.g., 2 token widths)\n4. Click \"Messages\" to add dialogue\n5. Add multiple messages with different weights for variety\n\n### Creating a Trap Warning\n\n1. Place a token representing the trap trigger zone\n2. Type: `!pt -M Trap_Warning`\n3. Set mode to \"once\" so it only triggers once\n4. Add a message like \"You notice something suspicious about the floor...\"\n5. Set whisper mode to \"gm\" if you want only the GM to see it\n\n### Environmental Description\n\n1. Place marker tokens at key locations\n2. Monitor each with `!pt -M`\n3. Add atmospheric descriptions\n4. Use multiple messages with weights for variety\n\n## Message Features\n\n### Dynamic Content Parsing\n\nProximityTrigger includes a powerful chat parsing system:\n\n**Placeholders:**\n- `{playerName}` - Triggering player's first name\n- `{monitoredName}` - The trigger/NPC's name\n\n**Character Attributes:**\n- `{playerName.attribute}` - Triggering player's character attributes (e.g., `{playerName.hp}`)\n- `{monitoredName.attribute}` - Monitored NPC's character attributes (e.g., `{monitoredName.AC}`)\n- `{CharacterName.attribute}` - Any character's attributes by name\n- Case-insensitive attribute matching with common variations support\n\n**Inline Dice Rolls:**\n- `{1d6}` - Simple rolls\n- `{2d20+3}` - Complex expressions with modifiers\n- `{1d20+5-2}` - Math operations supported\n- Rolls display as styled badges with tooltips showing individual die results\n\n**Interactive Buttons:**\n- `[Button Text](command)` - Creates clickable buttons\n- Buttons support any chat command:\n\t- Inline rolls: `[Attack]([[1d20+5]] attack roll)`\n\t- Whispers: `[Secret]( /w gm Secret info)`\n\t- API commands: `[Light](!token-mod --set light_radius=20)`\n\t- Regular chat: `[Shout](Huzzah!)`\n\n**Other Features:**\n- **Weights**: Higher weight = more likely to appear (0 = disabled)\n- **Per-Message Styles**: Override the default card style for specific messages\n- **Multiple Messages**: Add variety with different possible messages per trigger\n\n## Card Styles\n\nCustomize the appearance of your trigger messages:\n\n- **Border Color**: Frame color for the message card\n- **Background Color**: Card background color\n- **Bubble Color**: Speech bubble interior color\n- **Text Color**: Message text color\n- **Whisper Mode**: `off` (public), `character` (whisper to triggering player), or `gm` (whisper to GM)\n- **Badge**: Optional image URL for style badge\n\nCreate multiple styles for different types of triggers (friendly NPCs, hostile encounters, traps, environment, etc.)\n\n## Technical Details\n\n- Trigger distance is measured in token body widths from token center\n- Timeout of 0 means the trigger will only fire once per token until manually reset\n- Positive timeout values (in milliseconds) create a cooldown period\n- State persists between game sessions in `state.ProximityTrigger`\n- Multiple tokens can share the same trigger configuration\n- Tokens are automatically added/removed from triggers when placed/deleted\n- Distance calculations use Euclidean distance\n\n## Use Cases\n\n- **Interactive NPCs**: Greetings, dialogue, reactions\n- **Traps & Hazards**: Warnings, passive perception checks\n- **Environmental Storytelling**: Room descriptions, atmosphere\n- **Quest Markers**: Area discovery notifications\n- **Passive Checks**: Automatic skill check notifications\n- **Dynamic Events**: Triggered by player proximity\n\n## Notes\n\n- Use underscores for spaces in token names when typing commands\n- Select tokens before using `-M` flag for quick setup\n- The Default card style is protected and cannot be deleted\n- Triggers automatically track all tokens with matching names\n\n## Version History\n\n### Version 2.1.0 (Current)\nFirst published version. This script evolved from ProximityNPC, which originally triggered message cards when near a preset list of NPCs. The script was enhanced to add commands for creating triggers dynamically in state, then refactored and cleaned up for community use as ProximityTrigger.\n\n**Features:**\n- Comprehensive feature set with full UI\n- Multi-token support per trigger\n- Message management with weights and per-message styling\n- Card style system with full customization\n- Three trigger modes (on/off/once)\n- Automatic token tracking\n- Persistent state management (including button callbacks)\n- Interactive chat-based configuration\n- **Advanced Dynamic Content Parsing:**\n\t- Placeholder support: `{playerName}`, `{monitoredName}`\n\t- Character attribute integration: `{playerName.hp}`, `{CharacterName.attribute}`\n\t- Inline dice rolling: `{1d20+5}`, `{2d6+3}` with styled results\n\t- Interactive buttons: `[Button Text](command)` supporting rolls, whispers, API commands\n\t- Persistent button callback system\n\n**Original Development:** [GitHub Repository](https://github.com/bbarrington0099/Roll20API/tree/main)\n\n### Version 2.0.0 (Unpublished)\n- Major refactor and improvements\n- Added card styling system\n- Enhanced message system\n\n### Version 1.0.0 (Unpublished)\n- Initial release\n- Basic proximity detection\n- Simple message display",
    "authors": "Brandon B.",
    "roll20userid": "8312627",
    "useroptions": [],
    "dependencies": [],
    "modifies": {
        "state.ProximityTrigger": "read,write",
        "graphic": "read",
        "graphic.left": "read",
        "graphic.top": "read",
        "graphic.width": "read",
        "graphic.height": "read",
        "graphic.pageid": "read",
        "graphic.represents": "read",
        "graphic.imgsrc": "read",
        "graphic.name": "read",
        "graphic.layer": "read",
        "character": "read",
        "character.name": "read",
        "character.avatar": "read",
        "attribute": "read",
        "attribute.current": "read",
        "attribute.name": "read"
    },
    "conflicts": []
}